Date Tuesday Nov GMT Server NCSA MIME version Content type text html Last modified Tuesday Jan GMT Content length Declarative Logic Programming Research Project Research Project Specialized Fully Declarative Logic Programming Languages for Expert Systems and Databases NSF Grant IRI Starting Date August progress ResearchersStephen Murrell principal investigator Jan Plaza principal investigator George Holler graduate assistant fall spring Eric Gotlieb graduate assistant summer Sidong Liu graduate assistant summer Introduction The style traditional programming imperative program instructs the computer how accomplish task for instance how sort list the other hand logic programming opens possibility declarative programming writing programs which just tell the computer what final state desired for instance what meant sorted list logic program should written set logical definitions declarations specifications The same program should interpreted computer set imperative procedures After the program ready the programmer may wish consider its imperative meaning and add control structures improve the efficiency This research project concerned with designing logic programming system which could offer the programmer wide expressive power and minimize the need for thinking about the procedural meaning the program includes the development theory and experimental implementation Abstract propose creating family logic programming languages one for general purpose programming and the others specialized and aimed major application areas artificial intelligence The languages will fully declarative and based solid mathematical foundations The language for general purpose programming will admit unlike PROLOG extended syntax general quantifiers and functional form classical negation This language will the basis from which the others are developed The language for expert systems will have intrinsic support for non numerical measures confidence and formal mechanisms for handling hierarchies contradictions The language for deductive databases will support multiple open and closed domains and efficient query evaluation The fourth language will combine features the previous two will suitable for distributed multi component intelligent systems The languages will have potential for parallelization languages with such features currently exist and believe that their availability would have desirable impact the construction future intelligent systems Further Information You can read download related papers You can download and try preliminary version the LOGOS programming language which being implemented part this project You can look the current research topics series seminars offered part this project The following logic programming software available the department You can also access the home page LPNMR forum for exchange information logic programming and non monotonic reasoning 