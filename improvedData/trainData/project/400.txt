Date Wed Nov GMT Server NCSA Content type text html Last modified Fri Jul GMT Content length Split CSplit Berkeley Division Split parallel extension the programming language that supports efficient access global address space current distributed memory multiprocessors retains the small language character and supports careful engineering and optimization programs providing simple predictable cost model This stark contrast languages that rely extensive program transformation compile time obtain performance parallel machines Split programs what the programmer specifies the compiler takes care addressing and communication well code generation Thus the ability exploit parallelism locality not limited the compiler recognition capability nor there need second guess the compiler transformations while optimizing the program The language provides small set global access primitives and simple parallel storage layout declarations These seem capture most the useful elements shared memory message passing and data parallel programming common familiar context Split currently implemented the Thinking Machines Corp the Intel Paragon the IBM and the Meiko and under development the Cray All versions are built using the Free Software Foundation GCC and the message passing systems available each machine Faster implementations are underway for the Meiko using the Elan libraries and for networks workstations using Active Messages has been used extensively teaching tool parallel computing courses and hosts wide variety applications Split may also viewed compilation target for higher level parallel languages Available documentation for Split includes the following Parallel Programming Split which introduces the language through example PostScript version Introduction Split tutorial introduction Split Implementing Split the Meiko Preliminary ResultsSplit ReleasesDownload the Split distribution for your platform Meiko only other platforms soon added Related projects include The Mantis Parallel Debugger Applications include Connected ComponentsSorting Back Division Home Page 