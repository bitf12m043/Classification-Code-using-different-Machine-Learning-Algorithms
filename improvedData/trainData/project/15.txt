MIME Version Server CERN Date Sunday Nov GMT Content Type text html Content Length Last Modified Friday Oct GMT WELCOME PREMA PARALLEL RUNTIME SUPPORT SYSTEM PREMA Portable Runtime Environment for Multicomputer Architectures PREMA Portable Runtime Environment for Multicomputer Architectures Advanced Computing Research Institute Cornell Theory Center Cornell University Overview Prema runtime support system for parallel compilers and problem solving environments that target scientific computing applications Prema build top PORTS Cornell implementation and designed run variety MPP and SMP computers PREMA suppots global address space memory model data and task parallel programming models multi threaded style execution automatic work sharing mechanism dynamic load balancing Papers Multithreaded model for dynamic load balancing parallel adaptive PDE computations Nikos Chrisochoides CTC Journal Applied Numerical Mathematics Related Research PORTS Portable Runtime Systems Group PCRC Parallel Compiler Runtime Consortium Copyright copy Nikos Chrisochoides nikosc cornell edu MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Thursday Aug GMT CilkCilkCilk pronounced silk parallel multithreaded based language and runtime system Until find time put useful information this page you can check out the Cilk page MIT Last modified August Robert Blumoferdb utexas edu Date Tue Nov GMT Server NCSA Last modified Mon Jan GMT Content type text html Content length Operating Systems Laboratory Organization and ToolsOperating Systems Laboratory Organization and ToolsCarol Miller HTML William Hicks and Earl Shannon Table ContentsIntroductionOperating System Development ToolsxccasdownloadodtbusersXinu Program Development ExampleTroubleshootingIntroduction The Operating Systems Laboratory the Computer Science Department provided for students enrolled upper level undergraduate and graduate operating system courses This document contains description the computers the lab and the software development tools available students these advanced classes Laboratory Configuration The Operating Systems Laboratory often referred OSL for the Computer Science Department located Daniels This lab vital resource for two undergraduate courses CSC and CSC and the graduate level real time operating systems course CSC The computers the laboratory for CSC consist single Sun Sparc and five Sun Xinu clients named friedpie fishstick onionring tatortot and frenchfry Hushpuppy The Sparc workstation known hushpuppy where student accounts are located and Xinu software development done Hushpuppy uses the SunOS operating system which version UNIX with System release extensions connected the campus network via ethernet and uses TCP communicate with other machines Hushpuppy can also reached using Hayes compatible modem through the NCSU Campus dataswitch university terminal servers from other computer systems via Internet using the address hushpuppy csc ncsu edu just plain hushpuppy you are currently the NCSU Internet Domain telnet hushpuppy you can also just click here SunOS has many the commands found other campus machines such aza the Eos workstations and garfield some which are running Digital Equipment ULTRIX Familiarity with any these systems will allow you quickly become comfortable using SunOS Help available via the line manuals commonly called man pages The following example show how display man pages for the SunOS command which will list the contents directory sun man Hushpuppy responds with reformatting page Wait done USER COMMANDS NAME list the contents directory SYNOPSIS aAcCdfFgilLqrRstu filename SYSTEM SYNOPSIS usr bin abcCdfFgilLmnopqrRstux filename and continues with the remaining information the command Xinu Clients There are five Xinu clients They are named fishstick frenchfry onionring tatortot and friedpie They are Sun with megabytes RAM two serial ports ethernet connection and SCSI port The console port one the two serial ports each the five clients connected hushpuppy via multiplexer This connection allows the server machine act front end the Xinu client and eliminates the need for additional terminal The operating system also suppports terminal connected the second serial port but which not currently configured The five target machines clients are connected each other and hushpuppy through ethernet network through this connection the clients download Xinu executables created the Sparc hushpuppy Devices such hard disks ROMs and scanners can connected the Sun via the SCSI port ContentsOperating System Development Tools Xinu small operating system originally designed for the Digital Equipment LSI computer but has been transported other platforms for this reason that Xinu target machine sometimes called LSI Written Douglas Comer and associates Purdue University Xinu and its development tools are used explore the different aspects operating system design Xinu Version discussed Comer book Operating System Design The Xinu Approach volume one Volume two this text covers Xinu Version Xinu currently installed hushpuppy and can found the directory usr Xinu The and assembly source files for Xinu are located the directory usr Xinu src Xinu header files are usr Xinu include and the library files are located usr Xinu lib xcc Compiler for Xinu The command xcc invokes the compiler assember and loader produce object files Motorola assembly language files Xinu executables from input files located hushpuppy The input files can source files Motorola assembly source files object files libraries object files The distinction between the different types files made the suffix the file name Suffix File Type source code assembly source object file object file library For example xcc would assume the files main and control source code and the file lowlevel assembly module recommended that you use xcc assemble routines written assembly language Below are the switches options sent programs via the command line that xcc understands Switch Purpose suppress the loading linking phase the compilation and force xcc stop after producing files from source programs output name the final output file output Verbose output narrating each step the compile Dname Define name the preprocessor the define directive Run only the macro preprocessor the named programs and send the result standard output Idir include files whose names not begin with are always sought first the directory the file argument the directories named the options then directories standard list Invoke the object code improver part the compilation Run only the macro preprocessor the named programs and send the result corresponding files suffixed with Compile the named programs into assembly language and leave the asembly language output corresponding files suffixed with without assembling loading the result Include the standalone startup routine allow downloading without Xinu The xcc command can used generate modules for downloading that not contain the Xinu operating system The switch used create this standalone object file When standalone module mode the linker uses the libsa library functions instead the usual libx and libc For example compile source file named main assembly listing named lowlevel and the object into executable named prog use xcc the following way xcc prog main lowlevel For more information about the above options consult the man pages the Sun compiler command Assembler The Sun are based upon the Motorola family microprocessors The command can used assemble source files into machine code however the resulting binary file not the proper format for downloading for this reason that you are encouraged use xcc all your assembling The assemble the file setup enter xcc setup download Download Executable Xinu Client The download command loads the absolute binary program image produced xcc into the memory the target machine The name the file download can provided argument otherwise the name out assumed The option can used select send your binaries otherwise any available client machine used For example download mfishstick prog will download the file prog fishstick client available all are reserved other users then download will display error message odt Connect the User Terminal the Console Port the Xinu Client The command odt takes name from the line debugging technique odt feature the LSI and PDP computers This feature ROM based monitor which accepts console keyboard commands The name odt has been kept for historical reasons and provide uniformity across different Xinu platforms The development tool odt used connect the user terminal the console port client machine Input from the keyboard sent the and output for the displayed your terminal run downloaded program enter odt the prompt the server machine You will see message telling you which you are being connected This will automatically the machine you selected previously when you downloaded your executable Press ltReturn few times until prompt appears you not get prompt seems that program already running the client then enter the key sequence the backslash character followed ltControl repeatedly until the responds with the correct prompt Enter the prompt boot the client This will load Xinu and your executable into the memory the machine Start your program typing and pressing Below example using the above instructions sun download prog using front end hushpuppy Using backend fishstick downloading file prog Sent bytes download completed Note The the line Sent bytes will some number sun odt using front end hushpuppy Using backend fishstick Using dev ttyX Note The the line Using dev ttyX will device name such EEPROM boot device Boot Using Address Booting from tftp server Downloaded bytes from tftp server Note The the above line will some number this point Xinu will start and your program will begin execution return hushpuppy press ltControl This ends the odt session and causes the connection between the front end hushpuppy and broken Pressing ltControl does not cause the Xinu client stop executing your program may continue executing after odt has been exited ltControl Machine released sun target machine begins behaving strangely may need reset reset connect using the odt command shown above the odt prompt enter the letter followed space and then the number and press This will casue the client reset perform self test then load any downloaded program into memory Two switches program options commonly used with odt are and Switch Purpose mMachine Name causes odt connect the user terminal Sun named Machine Name odt following download will automatically use the same selected the download the switch not used allows this remain reserved while another also being used For example odt mfishstick will access fishstick and keep the reservation for those computers which have already reserved Normally downloading and using odt connect with one Xinu client releases any other reservations busers List the Xinu Client Users The command busers lists each the that currently being reserved and the login name the user who using the target machine Example sun busers fishstick idle time mins class SUN reserved ershanno frenchfry idly time mins class SUN reserved wjhicks ContentsProgram Development Example Any editor can used create source files This sample program compiled using the xcc command and download with the Xinu operating system Sun The system call getc used read characters form the terminal source program include ltconf main char while getc CONSOLE printf end sample program The program compiled using xcc sun xcc prog prog out records records out sun The output file out the absolute object image for the sun download out sun odt Using fishstick EEPROM boot device Boot Using Address Booting from tftp server Downloaded bytes from tftp server The program executes until the letter typed Press ltControl release the target machine and return hushpuppy Remember ending odt session will not halt any programs that may executing target machine ContentsWorking Xinu Adding Commands Xinu ShellPut command home xinu src sys shell usercmds The home this path the directory where you originally uncompressed and untared the file makefile home xinu src sys shell add the USEROFIL line will compile new command The line should look something like this USEROFIL usercmds ascdate usercmds cat usercmds usercmds date usercmds echo usercmds mount usercmds usercmds rls usercmds usercmds sleep usercmds unmou usercmds close usercmds kill usercmds commands Run make home xinu src sys shell usercmds make all the necessary object files See Using make Xinu below cmd add function name command list externs The externs list should look like this after you have added command extern int bpool cat close conf creat date devs echo exit help kill mem mount net reboot rls routes sleep snap unmou uptime who fmdump run pgstats printpgtbl vmem command Add line define CMDS the shell knows what run when you type command The first piece info the command the shell will recognize which should quotes followed comma The second thing boolean variable that determines whether the command builtin not Unsure the implications this with regards xinu now just set FALSE The third thing the name the function that will called when you type the command from the shell prompt The CMDS line looks like this define CMDS bpool FALSE bpool cat FALSE cat close FALSE close conf FALSE conf FALSE create FALSE creat ruptime FALSE uptime sleep FALSE sleep snap FALSE snap time FALSE date unmount FALSE unmou uptime FALSE uptime who FALSE who vmem FALSE vmem FALSE help command FALSE command Note When adding commands usercmds make sure the name the function has the same name the file This not absolutely necessary long the function run when given command typed the shell corresponds with the function you think you are running This link setup the cmd file The function should have the following structure COMMAND command stdin stdout stderr nargs args int stdin stdout stderr nargs char args This function would saved file called command Using make Xinu Make needs run your Xinu directory create the downloadable file which will run the Sun this there special script already written for this specific task called Makeall should located the following directory home xinu src sys execute you will probably have tell the shell where the script located since this directory not your path your are the directory where Makeall located the line execute would Sun Makeall Getting copy Xinu get copy Xinu just click here This will get copy the tared and compressed file untar and unzip the file you will need the following Uncompress the file Sun uncompress xinu tar Untar the file Sun tar xvf xinu tar This will create three directories docs programs and xinu The source code located xinu and can changed described above Trouble Shooting OSLTrouble with xcc The command xcc creates temporary object files your current directory when compiling programs and assembling programs These temporary files have the same names the source files except with suffix therefore not possible compile two modules with the same base name name excluding the suffix the same directory such read and read because the resulting object files will have the same name Trouble with download the hushpuppy responds download request with Suns Available you must wait until someone releases target machine all are currently use Trouble with odt refuses respond the point where you are expecting odt prompt press backlash then ltControl multiple times you see any prompt other than when you start odt session then another user program still running the client Use the same same key sequence described above abort the other program then boot normally ltControl does not return you hushpuppy login another terminal and kill your odt process ask operator this for you Stack Overflow The Suns OSL are bit machines and need twice much memory strore addresses and data the bit LSI computers used Volume Douglas Comer book There are example programs the textbook that use the Xinu system call create spawn new processes You should double triple the stack sizes given the book for these programs sure each process has enough memory process runs out stack space Xinu will reply with the error message Panic current process stack overflow Report Problems with Lab Equipment problem persists with particular machine report sending mail ops and use another Mail sent ops goes all the operators and the first one read your message will correct the problem For comments sugestions about this document please send email Earl Shannon ershanno hushpuppy csc ncsu edu Bill Hicks wjhicks hushpuppy csc ncsu edu last update version Date Thu Nov GMT Server NCSA Content type text html Last modified Wed Feb GMT Content length Wisconsin Multiscalar Project Home Page Wisconsin Multiscalar Project Technical Papers Talks Given Multiscalar People Contributors Funding Sources Related Projects Available Software Wisconsin Computer Architecture Group Computer Sciences Department the University Wisconsin World Wide Computer Architecture Information Information interest local users only Last Updated February Guri Sohi sohi wisc edu 