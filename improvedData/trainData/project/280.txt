Date Wed Nov GMT Server Apache Content type text html Content length Last modified Fri Nov GMT Flux Project Home PageThe Flux Operating System Project The Fluke Nested Process Architecture The Flux Project objectives are provide infrastructure the flux for highly efficient component based systems with flexible degrees inter component trust initially oriented hardware enforced protection provide transparent and flexible control all the resources used arbitrary subsystems and iii distribute free and usable versions the developed software have recently developed entirely new kernel and structure which future work will based new paper Microkernels Meet Recursive Virtual Machines describes how this system efficiently supports recursive virtual machines That paper well paper CPU Inheritance Scheduling appeared OSDI The draft API for Fluke the new kernel available html format postscript and postscript Beware currently pages long but mostly white space design and rationale document will forthcoming later this year One the design features which should provide large performance gains safely storing portions normal kernel objects user space outlined these slides from work progress talk December SOSP This avoids kernel entry exit many common cases Artist renditions the Fluke Nested Process Architecture and the Fluke providing encapsulated environments for untrusted applications Project MembersPapersCore related papersModule management related papersDSM related papersAvailable Software Flux Toolkit toolkit provide infrastructure for constructing operating systems Mach kernel major component the overall project improved kernel Kernel development has moved Fluke major work the Mach kernel has stopped Lites Unix server distribute version the Lites server Mach Lites lite system snapshot freely distributable RISC source and binaries the form bootable self hosting Mach Lites and lite system for the Quarks Alpha release portable and reasonably efficient distributed shared memory system MOSS highly functional DOS extender based part the Flux toolkit before was completely modularized Goofie developed the Mach Shared Objects project goofie creates portable object descriptions from class declarations the future Goofie may used the Flux project enable system provided polymorphic functions RISC GNU tools used maintain the GNU language tools for RISC architecture and still provide recent versions both source and binary forms Related Utah ProjectsComputing ResourcesSupport The group research operating systems and related language work sponsored grants from ARPA NSF Hewlett Packard and IBM The Center for Software Science Utah State Center for Excellence Job Openings Research staff Student fellowships and research assistantships Directions and Hotel InformationDirections from the Salt Lake Airport the Computer Science Department the University and information Salt Lake Hotels University Utah Department Computer Science home pagelepreau utah edu Last modified Fri Nov 