Date Wednesday Nov GMT Server NCSA MIME version Content type text html Last modified Friday Jun GMT Content length Performance PredictionMeasurement and Prediction Parallel Program PerformanceNSF CISE grant CCR FacultyTom LeBlanc leblanc rochester edu collaboration with Mark Crovella crovella edu Graduate StudentsWagner Meira meira rochester edu Alex Poulos poulos rochester edu Nikolaos Hardavellas nikolaos rochester edu Project Summary Carnival tool designed automate the process understanding the performance parallel programs supports performance measurement modeling tuning and visualization Carnival measurements are based predicate profiling which quantifies the time spent each category overhead during execution Our first implementation predicate profiling was implemented the KSR now have implementations for the SGI Challenge multiprocessor the IBM network SUN workstations running PVM and cluster Alpha workstations Carnival novel attempt automate the cause and effect inference process for performance phenomena particular Carnival currently supports waiting time analysis automatic inference process that explains each source waiting time terms the underlying causes instead simply identifying where occurs are now developing similar technique explain the causes communication Our ultimate goal combine the accuracy empirical performance measurement with the predictive power analytic performance modeling Towards that end Carnival supports lost cycles analysis which uses priori knowledge the sources and characteristics the overhead categories parallel systems guide and constrain the modeling process The Lost Cycles Toolkit which are integrating within Carnival combines empirical model building techniques from statistics with measurement and modeling techniques for parallel programs Carnival also visualization tool that provides link between performance measurements and the source code The interface presents the original source code window Along the left hand side the source grey scale scroll bar that indicates the amount time spent each portion the source code summed across all processors Along the right hand side the source code are color bars that indicate the percent time spent each overhead category that section source code again summed across all processors Pop windows are used during modeling and waiting time analysis The Carnival implementation comprises about lines Tcl and source code has been installed the Cornell Theory Center and plan make more widely available soon are currently porting the instrumentation library the only machine dependent portion the tool clusters DEC Alphas connected the DEC Memory Channel Related Publications Crovella Bianchini LeBlanc Markatos and Wisniewski Using Communication Computation Ratio Parallel Program Design and Performance Prediction Proc IEEE Symposium Parallel and Distributed Processing Dallas Texas December Crovella and LeBlanc Performance Debugging Using Parallel Performance Predicates Proc ACM ONR Workshop Parallel and Distributed Debugging May Crovella and LeBlanc The Search for Lost Cycles New Approach Performance Tuning Parallel Programs Proc Supercomputing Washington November Also available Technical Report Computer Science Dept Univ Rochester December Crowl Crovella LeBlanc and Scott The Advantages Multiple Parallelizations Combinatorial Search Parallel and Distributed Computing April Also available Technical Report Computer Science Dept Univ Rochester April Crovella Performance Prediction and Tuning Parallel Programs Dissertation Computer Science Department University Rochester August Mark Crovella Thomas LeBlanc Wagner Meira Parallel Performance Prediction Using the Lost Cycles Toolkit Computer Science Department University Rochester May Wagner Meira Modeling Performance Parallel Programs Computer Science Department University Rochester June Wagner Meira Thomas LeBlanc and Alexandros Poulos Performance Visualization and Tuning with Carnival ACM SIGMETRICS Symp Parallel and Distributed Tools May Related Projects AIMS NASA Ames Pablo University Illinois Paradyn University Wisconsin Poirot University Oregon TASS Georgia Tech TAU University Oregon Other Information There new symposium parallel and distributed tools sponsored ACM SIGMETRICS The symposium has home page and was held May part the ACM Federated Conference Philadelphia See the proceedings that symposium for papers the latest work this area The Parallel Tools Consortium was formed help coordinate tool development the parallel processing community See their home page for list projects approved the consortium well comprehensive list research projects parallel tools The Cornell Theory Center maintains list parallel tools including Forge ParaGraph ParaScope and upshot and associated documentation For introduction parallel computing and discussion related performance issues see Ian Foster line text Designing and Building Parallel Programs last modified June Tom LeBlanc leblanc rochester edu 