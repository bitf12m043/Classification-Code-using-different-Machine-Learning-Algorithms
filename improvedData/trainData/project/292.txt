MIME Version Server CERN pre Date Tuesday Nov GMT Content Type text html Content Length Last Modified Friday Aug GMT Programming Languages and Systems Software LaboratoryProgramming Languages and Systems Software Laboratory The programming languages and systems software laboratory investigates fundamental issues software systems including language design and implementation execution monitoring and program visualization object oriented and distributed systems and software engineering The Alamo Monitor Framework Project Jeffery Alamo framework for monitoring the execution programs Alamo supports two programming languages ANSI and Icon consists two components the Alamo Monitor Executive AME implements shared address coroutine based thread model monitoring the Configurable Instrumentation CCI tool ANSI preprocessor that provides automatic software instrumentation semantic level opposed manual instrumentation instrumentation the machine lexical syntactic levels The Proxy Sharing Proxy Server Project Jeffery Das The Proxy Sharing Proxy Server extension the CERN Web server that investigates the application wide area demand driven replication techniques sharing WWW resources Our caching scheme non hierarchial allowing scale and fit the natural topology the internet better than existing schemes Icon Programming Language Jeffery and the Icon Project the Arizona Icon very high level general purpose language featuring rich set built datatypes familiar like syntax novel goal directed expression evaluation mechanism and easy use portable graphics facilities Current work includes improvements performance reductions space requirements porting the graphics facilities additional platforms and adding object oriented facilities Very High Level Language Benchmarks Jeffery Several very high level languages are now vogue such Perl Tcl and Java Although each has its unique specialties each claims general purpose tool and the extent that they are general purpose they can compared implementing set benchmark applications each language Timing results provide feedback language implementors about neglected facilities and the implementation experience reveals missing features and obstacles encountered when using these languages general purpose tools Software Visualization UTSA Jeffery Software visualization the use visualization techniques portray static and dynamic aspects about software system control flow data structures behavior and operation 