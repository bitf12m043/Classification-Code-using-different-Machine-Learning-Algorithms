Date Mon Nov GMT Server Apache dev Connection close Content Type text html Expires Mon Nov GMT Last Modified Fri Aug GMT ETag Content Length Accept Ranges bytes Haystack Home Page The internal Haystack page has moved Send mail you need find This public page under construction Welcome the Haystack Pull some straw and make yourself home great deal research information retrieval has been detached from the users who could eventually benefit from such research the one hand traditional research systems have been cut off inconvenient interface limited unchanging text collection with fixed set evaluation queries that become increasingly out date time passes the other hand the recent surge web search tools has resulted many deployed systems with more convenient but often limited interfaces and generally fixed least non modifiable corpora few systems such Harvest Content Routing have attempted address the gaps between these two extremes focusing the construction more flexible substrate which allows users and communities build their own repositories queries The Haystack project aimed the individual customization end these more realistic living information retrieval systems are interested building customizable substrates such those provided Harvest Content Routing create community individual but interacting haystacks personal information repositories which archive not only base content but also user specific meta information enabling them adapt the particular needs their users believe that such system will let address several questions How can individuals use information retrieval system organize their own personal collection information How might information retrieval system learn from its users and evolve over time into more effective system individuals build their own collections and information retrieval systems how can they search for information that might located others collections especially when such information organized information retrieval systems that may differ greatly from their own Our first step towards this goal has been design simple and convenient user interface and annotation format for information retrieval system Our current annotations emphasize user independent text meta information but the format for and structure these annotations are intended encompass hand generated and automatic user specific annotations The annotations themselves are first class documents our system that for example search information can reified and treated indexable object our implementation have chosen detach the information retrieval engine from the user interface and annotation system specifying only that the engine should accept natural language query and return documents that match under whatever criteria uses have begun using the information retrieval system but are concurrently investigating other back ends including Content Routing Harvest and house image based system top this arbitrary engine are implementing several interfaces for retrieval well annotation editing The first web proxy based interface which allows users connect the information retrieval engine via their favorite web browser maximize ease use are also developing shell and emacs based tools for talking the collection Haystack intended archive any objects from which text can extracted are initially implementing appropriating textifiers for ascii postscript html and scanned documents but have architecture that easily extensible other documents types our intent that the simple standalone version Haystack will easy integrate into everyday use Since project that even minimal system will use people aiming organize their mail file system and favorite web pages therefore expect attract moderate size community users MIT Once the system use will able leverage the annotation facilities explore several questions The first such question how information retrieval system will actually used practice gathering usage data with permission hope learn about the kinds queries people typically use Are they usually boolean nature Single words they tend over precise and find documents they overgeneralize and get swamped with useless results How they react what comes back What refinement strategies they use Each haystack will provide user specific set answers these questions second question how system might learn from interaction with its user Consider the scenario which user types initial query then undertakes several stages refinement home the document wants For the future the system should learn that when the user types query like document likely relevant even does not appear good match The annotation system allows for both user and system level support for this learning process The system might annotate document with terms that not appear but that the user types when expects find that document The user might also add keywords mnemonic phrases document the expectation future searches for Ultimately the system may able make user specific generalizations based automatically manually entered optimization annotations Given that individuals are organizing the information they care about natural ask how one user can benefit from the work other users Consider that the typical way search for paper book ask one office neighbor for Analogously would like let individuals search for information other people haystacks Both limit the costs search and improve the filtering what returned important for the system learn over time which other individuals are most likely have information that given user finds relevant these haystack neighbors are the systems that should queried first and whose results should most trusted Another opportunity that this linking haystacks creates connecting individuals other people who can address their information need The information have stored haystack likely good indicator knowledge and interests question that matches lot material haystack likely question can usefully answer The haystack system can therefore serve information brokerage connecting questioners experts Sharing haystacks also raises the issue generalizing from individuals customization their own haystacks larger pooled data sets This provides another opportunity test the adaptability query strategies and test the generalization the underlying learning algorithms The common thread among the above ideas user specific customization information repositories and retrieval processes These are issues that are possible explore only the hybrid world provided the newest generation information access tools developing the Haystack system will attract the community users who will provide the necessary testbed for exploring these questions about evolving interacting customized information systems Hayfolk David Karger Lynn Andrea Stein Eytan Adar Mark Asdoorian Dwaine Clarke Lili Liu Eric Prebys Chuck Van Buren Comments the HayMaster 