Date Wed Nov GMT Server Apache Content type text html Content length Last modified Tue Nov GMT Fall Indiana University Computer Science DepartmentC Programming Languages Fall General Information Overview Textbooks Syllabus Assignments Tools and Advise Grading Administrivia Course EvaluationGeneral Information Instructor Christopher Chris Haynes email chaynes indiana edu Associate Instructor Gustavo Gomez email ggomezes indiana edu Credit Hours Requirements Prerequisite and Pre Corequisite Lecture Section meets Tuesday and Thursday Discussion Sections Section meets Monday Section meets Wednesday Office Hours Tuesday Chris Haynes Chris Haynes Thursday Gustavo Gomez Chris Haynes Chris Haynes Local newsgroup Web URL http www indiana edu classes Catalog Description Systematic approach programming languages Relationships among languages properties and features languages and the computer environment necessary use languages Overview This course provides introduction the foundations programming languages allowing thorough understanding programming language semantics and critical implementation characteristics This provides the basis for the best choice and use existing languages well language design Interpreters and other language processing programs are used throughout present the essential elements programming languages precise analytic manner The extensive use interpreters this course also develops skill meta linguistic abstraction powerful programming paradigm thoroughly understand programming languages most any topic necessary have variety models views varying levels abstraction this course will employ range models from very high level almost mathematical semantics very low level almost assembly language and emphasize the connections between levels Scheme used meta programming language throughout the course but this course about fundamentals that are the basis for most programming languages not just Scheme Special attention will given modeling the semantics the Java language via series type checkers and interpreters slide presentation available condensed form summarizes these points and others Topics include Induction Recursion and Scope Direct semantics interpreters Continuation passing style Continuation semantics interpreter Imperative form and stack architecture Static and dynamic semantics for object oriented programming Object oriented run time architecture Materials Required Essentials Programming Languages Friedman Wand and Haynes This text known hereafter EOPL should available any the three big textbook bookstores Aristotle the Bookstore but you may get cheaper you can find grad undergrad student who taken and willing part with Recommended The Little Schemer Friedman and Felleisen This should also available the bookstores and couple copies are reserve the Swain Hall library The Little Lisper older but similar Other Other materials may required through the semester These materials will announced class and will made available through the White Rabbit Indiana near Kirkwood and will cost few dollars cover copying costs Syllabus Read the indicated material for each week before the week begins You are not expected understand the material first reading but having read once first you will much better prepared for class and discussion sections Read the material for the first two weeks the first week much should review More material Java will made available later Links the list below are the lecture scripts Week September introduction Scheme EOPL preface and chapter chapter through section and chapter through section Week September Static Properties Programs EOPL remainder chapters and Week September Quiz Imperative programming Chapter sections and Simple interpreters EOPL chapter through section Week September Local binding procedures and assignment EOPL sections through Week September Recursion and dynamic scope EOPL rest chapter Weeks October Continuation passing style EOPL chapter sections and Week October CPS rules EOPL chapter sections and First exam Week October Representation independent interpreter continuations records and reified continuations EOPL sections through First class continuations and exception handling Week October Imperative form and control stack architecture EOPL sections and thoroughly Week November Environment stack architecture EOPL rest chapter for general information not responsible for code details Paramater passing EOPL chapter not responsible for material involving arrays Week November Second exam Introduction object oriented programming and Java EOPL section Week November Java programming tutorial Static methods only Java type checker and interpreter Week November Thanksgiving break Week December More object oriented programming Java style EOPL section for general information Also emphasis the importance virtual member functions illustrated virtual Week December Advanced Java topics Classes Attendance discussion sections mandatory Usually problem set problems will given out the beginning discussion section and the class will broken into small groups solve the problems The leading the discussion section will between groups answering questions and asking questions about the work done far and about the class material Your answers these questions and your progress the problems given discussion section will count toward your final grade Some lectures may also conducted this manner and some other lectures will present material not found the book Don miss class Assignments For the most part assignments will handed email automatic checker with feedback emailed back almost immediately Assignments may prepared the system your choice but should run properly using Chez Scheme version Homework will graded hand but the automatic checker will detect some errors assignment will usually given each week Assignments will added the list below Friday and due before the next Friday Late assignments will not accepted Assignment Due Solution Basic Scheme Static Properties Simple Interpreter Procedures and Assignment Recursion and Dynamic Scope Exam class assignment solution CPS Transformation CPS with Abstract Continuations CPS with Registers and Stacks solution Exam class assignment solution Call value Call reference Tools and Advise Our web has information use Scheme including emacs support will using few Scheme extensions not mentioned EOPL Points will deducted the homework quiz and exams the cardinal rules indentation are violated make habit follow them whenever you write Scheme code This will greatly aid your Scheme programming Though emacs big help strongly suggested that you write solutions all exercises hand and check them carefully for correctness before approaching computer This will give you practice indentation hand which necessary for exams and more importantly most cases much easier find mistakes this course exercises thinking about them than debugging The assignments don count whole lot toward your grade but extensive experience has shown that students who not make serious effort the assignments independently poorly exams Experience has also shown that most students spent much more time with paper and pencil before approaching computer they would spend much less time debugging and better understand their programs hour with pencil often worth several the keyboard Grading The following tentative schedule for evaluation with approximate percentage contributions the final grade Self assessment Quizette percent Scheme Quiz September class percent Write minutes several programs similar those the first assignment answers Exam One October class EOPL chapters through percent sample exam from last spring available Exam Two November class material covered class through November does not include chapter parameter passing percent sample exam from last spring available Final Exam December percent The final will cover the whole course with emphasis material after the second exam sample final from last spring available Assignments percent Subjective assessment based attendance participation and preparation for lectures and discussion sessions percent The sample exams are provided only provide general idea what expect The content the course this semester differs somewhat especially after the second exam Administrivia Incompletes incomplete final grade will given only prior arrangement exceptional circumstances conforming departmental policy which the bulk course work has been completed passing fashion Possibly Important Dates September Last day Pass Fail the course October Last day drop the course your own December Last day drop the course with Dean approval Academic integrity For your ethical pleasure you should read the Computer Science Department statement academic integrity dry but important Course Evaluation Before the end the semester please complete the electronic Course evaluation forms for Chris Haynes and your discussion section Gustavo Gomez Chris Haynes chaynes indiana edu 