Server Netscape Communications Date Wednesday Nov GMT Last modified Tuesday Nov GMT Content length Content type text html CSE Handout CSE Fall Automata Computability ComplexityCourse InformationAugust Coordinates TOWNE Instructor Jean Gallier MRE jean saul Office Hours Mon Wed Thurs Teaching Assistant David Parkes Towne dparkes unagiOffice Hours Mon Wed pmTextbook required Introduction Formal Languages and Automata Peter Linz Heath and Also recommended Introduction Automata Theory Languages and Computation Hopcroft and Ullman Addison Wesley Grades Homework Assignments them Intermediate Exam closed book Wed October Intermediate Exam closed book mid November Final Exam Problem Sets Homework Homework Homework Some Transparencies and Notes Basics language theory DFA the cross product construction NFA labeled directed graphs regular expressions The Myhill Nerode Theorem State Equivalence and minimization DFA Context free grammars and context free languages slides Context free grammars and context free languages notes Brief description The course provides introduction the theory computation The treatment mathematical but the point view that Computer Science Roughly speaking the theory computation consists three overlapping subareas formal languages and automata computability and recursive function theory complexity theory The course will focus mostly and Applications programming and natural language specification and recognition particular compiler construction will emphasized Topics will include Basics language theory alphabets strings concatenation languages operations languages including Kleene Deterministic finite automata DFA The cross product construction Nondeterministic finite automata NFA From NFA DFA the subset algorithm Rabin and Scott Labeled directed graphs NFA and DFA Regular languages and regular expressions From regular expressions NFA From NFA regular expressions node elimination The Myhill Nerode Theorem State equivalence minimal DFA The pumping lemma for regular languages Fractals and languages glimpse Context free grammars and context free languages Leftmost derivations rightmost derivations parse trees The universality leftmost derivations Cleaning context free grammars rules chain rules Chomsky Normal Form Right linear grammars and regular languages Eliminating useless productions Greibach Normal Form Tree domains Gorn trees and parse trees pumping lemma for context free languages Pushdown Automata PDA instantaneous descriptions acceptance modes DPDA Deterministic PDA From context free grammars PDA From PDA context free grammars glimpse parsing Generalities computability models computation Turing Machines RAM programs flowchart and sequential form Primitive recursive functions Recursive and partial recursive functions Recursively enumerable languages and recursive languages The equivalence RAM computable and Turing computable functions The equivalence Turing computable functions and partial recursive functions Phrase Structure Grammars Type Languages Type Grammars and Context Sensitive Grammars Monotonic Grammars and Linear Bounded Automata published Jean Gallier 