Date Wed Nov GMT Server NCSA Content type text html Home Page Algorithms and Data Structures Spring MWF Jessup Hall PROFESSOR Jim Cremer MacLean mail cremer uiowa edu Office hours appointment Jun McBride jun uiowa edu Office Hours WHAT NEW Last updated Monday Complete scores for the semester and the mapping from scores course letter grades are available the Grades section see pick your graded final please stop office Homework assignments Scores and grades Goals content and schedule Textbook and Supplemental books Requirements and grading Late assignment policy Policy Collaboration Prerequisites Note Language for Programming Assignements Homework solutions useful code sample exams etc Prerequisites and permission instructor Course goals content and schedule The aim the course gain experience with the major paradigms and data structures used creating algorithms and with basic methods for analyzing the time and space requirements programs will cover most the textbook The tentative schedule Week Intro and math background induction recursion Week algorithm analysis notation and techniques bit and Week quick review trees Week hashing Weeks and priority queues Week sorting Week February Exam class Weeks and disjoint sets Weeks and graphs Week SPRING BREAK Week graphs including bit extra decidability tractability complexity Weeks and algorithm techniques including greedy methods dynamic programming more divide and conquer Week April Exam class Week backtracking search games TENTATIVE Week amortized analysis May Friday FINAL EXAM Textbook Weiss Data Structures and Algorithm Analysis Benjamin Cummings Second Edition Supplemental Books reserve Math Library Cormen Leiserson and Rivest Introduction Algorithms McGraw Hill Aho Hopcroft and Ullman Data Structures and Algorithms Addison Wesley Requirements and grading Course grades will based ten homework sets two midterm exams and the final exam There will some small programming assignments Programming problems will usually given part regular written homework assignments there will not separate grading category for programming assignments Class participation and effort may taken into account determining grades borderline situations The components will weighted roughly follows Homeworks assignments Midterm exams each Final exam Late assignment policy All assignments are due the beginning class other cases assignments turned within hours will receive penalty and those turned hours late will receive penalty Exception each student may turn one homework assignment two days late with penalty Regrade requests must made within one week when the assignments are returned class Policy collaboration Homework and programming assignments should done alone reasonable discuss general approaches problem solution algorithm design with other students but the bulk the work must done alone Working out details sharing the write sharing copying code will treated violation the academic integrity rules Note Language for Progamming Assignments Program source code the book Pascal However for course programming assignments you will free use your choice Pascal another language approved the instructor Homework Assignments Homework HTML version Homework Postscript version Official test data for Homework must turn runs your program these files wordlist wordlist wordlist Some other test data for Homework extra wordlist extra wordlist extra wordlist Homework HTML version Homework Postscript version Homework HTML version Homework Postscript version Official test data for Homework must turn runs your program these files circuit circuit circuit circuit path path path Some other test data for Homework testdata testdata testdata testdata testdata testdata Homework HTML version Homework Postscript version Homework HTML version Homework Postscript version Homework HTML version Homework Postscript version Homework HTML version Homework Postscript version Homework Postscript file For those who can view print Postscript here HTML the basic WWW language version Homework Scores and grades Course grades Total score Complete homework and exam scores including final Sorted number plain text file Complete homework and exam scores including final Sorted total score plain text file Final Exam data Median Mean High Score range Number people Exam data Median Mean High Score range Number people Exam data Median Mean High Score range Number people Homework Solutions useful code and miscellaneous stuff Homework solutions HTML version Homework solutions Postscript version code for Question Homework Code not commented and does not quite meet the specifications for Question reads the input interactively rather than from file handles only single character words and prints the tree preorder rather than level order but the important part the one that fills the table used calculate the optimal binary search tree should There are two ASCII files obst and obst Exam solutions HTML version Exam solutions Postscript version Homework solutions HTML version Homework solutions Postscript version Homework solutions HTML version Homework solutions Postscript version Homework solutions HTML version Homework solutions Postscript version Homework solutions HTML version Homework solutions Postscript version Sample exam that might help you see the style questions you get Exam Wed Feb The exam was given about this point the course during the fall semester The document here contains two extra questions that were not actually used the exam Sample exam HTMLSample exam Postscript Homework solutions HTML version Homework solutions Postscript version Implementation heap routines Maybe useful for last question Homework Pascal code available via ftp site listed beginning textbook Homework solutions HTML version Homework solutions Postscript version For code for the MAJORITY problem Homework see the item below implementations solution MAJORITY problem Homework Linear time recursive divide and conquer method maj and very short simple linear time scanning method maj scan Code help generate test data for the MAJORITY problem gen maj test data number test data files are contained the directory etc maj test data Files etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data etc maj test data maj data Source code basic Only tested Silicon Graphics workstation runing IRIX Silicon Graphics Unix The two MAJORITY implementations should compile fine other machines compilers just use maj scan maj scan The gen maj test data code contains call drand which guess Unix specific random number generator should easy change the code run elsewhere however Homework solutions HTML version Homework solutions Postscript version 