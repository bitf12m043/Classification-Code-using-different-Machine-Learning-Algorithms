Date Wed Nov GMT Server NCSA Last modified Mon Nov GMT Content type text html Content length CPS Software Design and Implementation CPS Software Design and Implementation Fall Object oriented programming design and analysis Requirements Syllabus Books Assignments Code Project Groups Teaching Tools Making Toonces Presentation Overview description the course and overview what covered Requirements There will large group project four six person teams two smaller group projects and two individual mastery projects The mastery projects are designed ensure that everyone who completes the course certified capable writing and understanding reasonably complex programs Since some people the large team project may not write any code the mastery projects are necessary for this certification One the mastery projects will also use Java There will least three written smaller assignments programs Grading small assignments class presentation class participation mastery exams small group projects large group project Syllabus The syllabus has information about readings and topics for discussion Assignments grepple Design due Monday September Prototype Friday September Final Project due Monday September tooncesThe Object Oriented Networked Calendar Extraction System Groups for toonces Revised due dates and submission guidelines for design What turn for toonces Making Toonces presentation Mastery Templated Deques Due October there will group project started during this time Mastery Boggle Joggle Due December Preliminary Joggle Code see also ola cps joggle JoggleReader java JoggleGraph java JogglePlay java JoggleFE java JoggApp java bogdict txtCode ExamplesJava Nutshell All the examples from the Reilly book Java Nutshell These are accessible here source and runnable applets and also ola cps nutshell both and acpub machines Templated map classes including abstract base class and two implementations unsorted vector and hash table map abstract base class uvmap unsorted vector interface uvmap unsorted vector implementation hmap hash table interface hmap hash table implementation iterator iterator base class uviterator iterator class for map iterator implementation uvmap iterator hiterator iterator class for hashtable map hiterator implementation hashtable map iterator iterproxy proxy class for iterator pointer proxy word tracking program counts occurrences all words file that uses map classes available words the main source code file templatewords the template instantiation file Makefile the Makefile site specific and requiring map classes Two views menu driven program for manipulating images One non object oriented although there class used The other very object oriented and uses the Command Pattern implement commands used within menus the menus are text based First the non object oriented version usepix the main program pixmap the interface header file for the Pixmap class manipulates images pixmap the implementation the Pixmap class The object oriented version uses the Pixmap class too application the main application class interface application the main application class implementation command the abstract base class for commands quitcommand The quit command class interface quitcommand The quit command class implementation readcommand The read command class interface readcommand The read command class implementation displaycommand The display command interface displaycommand The display command implementation simpcommand templated class using pointers member functions for non parameterized commands menu The menu class interface menu The menu class implementation menuitem The menu item class interface menuitem The menu item class implementation filelister Read one list files from hard wired directory interface filelister templateapp template instantiation file Makefile class for checking memory leaks very rudimentary overloading new and delete global basis heapstats heapstats class design exercises Programming the small and the large TBA TBA Books There are several books use the course Mastering Object Oriented Design Cay Horstmann Java Nutshell Flanagan Object Oriented Design Heuristics Arthur Riel Optional Books The Programming Language Bjarne Stroustrup Effective Specific Ways Improve Your Programs and Designs Scott Meyers Design Patterns Elements Reusable Object Oriented Software the gang four Books Reserve The Mythical Man Month Fred Brooks Debugging the Development Process Steve Maguire Teaching staff Support personnel one professor two TAs one one more UTAs Professor Owen Astrachan Office LSRC email ola duke edu ola acpub duke edu phone office hours Monday Thursday any time for quick questions Syam Gadde Office LSRC email gadde duke edu phone office hours Tuesday Wednesday UTAs Trevor Selby Office LSRC email trevor duke edu phone office hours Teer Cluster needs verification Groups Groups Groups for the first assignment Please fill out the information asked for about groups and group preferences and submit turn during class Project Information not yet available Programming Tools GetOpt Information parsing command line arguments using templates How instantiate templated classes when using and some other compilers that don generate template repositories gprof Information profiling programs Java References Code and Help Information CVS and RCS coming Back Owen Astrachan home page 