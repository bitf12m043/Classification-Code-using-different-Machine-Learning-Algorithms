Server Netscape Communications Date Wednesday Nov GMT Last modified Friday Aug GMT Content length Content type text html CIS Handout CIS Summer Introduction the Theory Computation Course InformationMay Coordinates Moore Instructor Jean Gallier MRE jean saul Office Hours noon Monday Wednesday noon Tuesday Teaching Assistant Shiann Liang Chern slchern saul cis upenn edu Office Hours Tuesday Thursday Newsgroup upenn cis cis Textbook required Introduction Automata Theory Languages and Computation Hopcroft and Ullman Addison WesleyAlso recommended Theory Computation Wood Wiley Grades homework assignments and take home final Problem Sets them Homework Homework Homework Some Course Notes Basics language theory DFA the cross product construction and the subset algorithm Labeled graphs Regular expressions and the node elimination algorithm The Nerode Myhill theorem and minimal DFA Context free grammars context free languages parse trees and Ogden Lemma Context free Languages and PDAs Turing machines Partial Recursive Functions sets phrase structure grammarsBrief description The course provides introduction the theory computation The treatment mathematical but the point view that Computer Science Roughly speaking the theory computation consists three overlapping subareas formal languages and automata computability and recursive function theory complexity theory The course will focus mostly and Applications programming and natural language specification and parsing top down and bottom parsing will emphasized Topics will include Basics language theory alphabets strings concatenation languages operations languages including Kleene Deterministic finite automata DFA The cross product construction Nondeterministic finite automata NFA From NFA DFA the subset algorithm Rabin and Scott Labeled directed graphs NFA and DFA Regular languages and regular expressions From regular expressions NFA From NFA regular expressions node elimination Right invariant equivalence relations The Nerode Myhill characterization theorem The pumping lemma for regular languages State equivalence minimal DFA Fractals and languages glimpse Context free grammars and context free languages Leftmost derivations rightmost derivations parse trees The universality leftmost derivations Cleaning context free grammars rules chain rules Chomsky Normal Form Right linear grammars and regular languages Eliminating useless productions Greibach Normal Form Tree domains Gorn trees and parse trees strong pumping lemma for context free languages Ogden lemma Pushdown Automata PDA instantaneous descriptions acceptance modes DPDA Deterministic PDA From context free grammars PDA From PDA context free grammars glimpse parsing Generalities computability models computation Turing Machines RAM programs flowchart and sequential form Primitive recursive functions Recursive and partial recursive functions Recursively enumerable languages and recursive languages The equivalence RAM computable and Turing computable functions The equivalence Turing computable functions and partial recursive functions Phrase Structure Grammars Type Languages Type Grammars and Context Sensitive Grammars Monotonic Grammars and Linear Bounded Automata published Jean Gallier 