Date Tue Nov GMT Server NCSA Last modified Wed Oct GMT Content type text html Content length Principles Computer Science URL http www hmc edu keller html Harvey Mudd College Fall Computer Science Principles Computer ScienceHome Page and Reference Card Index SearchAssignmentsLecture Slides partial ExamplesBook errataKeller Java indexRCSrex reference cardPersonnelCatalog DescriptionCourse GoalsTextsCourse AssumptionsIs this programming course LecturesThreadsResourcesGradingTutoringYour Directory Honor Code Standard Please read this carefully Grading WeightsLate Assignment PolicyTopic OutlineHow submit assignmentsCourse PersonnelInstructor Robert Keller Olin MTuW appt keller muddcs System administrator Quay Beckman quay muddcs Secretary Nancy Mandala Olin nancy muddcs Mascot rexCS specific help email help muddcs hmc eduGeneral system help email help muddcs hmc eduTutor Graders Drew Bernat abernat muddcsMatt Dharm mdharm muddcsKevin Eustice kevin muddcsElizabeth Gordon egordon muddcsItai Seggev itai muddcsTutor Hours Beckman Hours Monday Tuesday Wednesday Thursday Friday Saturday Matt Matt Matt Matt Kevin Kevin Lecture Drew Lecture Drew Beth Beth Office Hrs Drew Office Hrs Office Hrs Drew Beth Beth Itai Kevin Itai Kevin Itai Kevin Itai Kevin none these hours work for you please let know Room Beckman where the terminals connected our machine muddcs are find leave the back the lecture hall Beckman turn right the stairs the first door the left get office enter the Olin Building from the southeast door inside the Department Office which the first door the right always open during business hours door usually closed filter out noise but don hesitate knock Catalog Description Introduction principles computer science Algorithms complexity analysis data structuring data and procedural abstraction grammars correctness logic principles processor organization operating system concepts programming languages basic automata theory and theoretical limitations Course Goals learn and apply basic principles computer science including software construction hardware organization and limitations computers TextsRobert Keller Principles Computing September Available subscription the cost reproduction This text being substantially revised from prior years will available gets completed The first chapter will free following which you will given chance subscriber fixed estimated cost Subscribers get the rest the notes loose leaf and hole punched David Friedel and Anthony Potts Java Programming Language Handbook Coriolis Group Books ISBN Course Assumptions Students should have had first course computing the college level Prior experience preferred although not essential will using number different languages including Java simplified derivative possible have only knowledge Pascal rather than when you start This fine long you don freak because language syntax You should know about procedures arrays and types minimum you are unfamiliar with these please take first this Programming Course sense much the course entails programming However consider exposure computer science ideas the important part The intent the programming assignments drive home these key ideas Lectures The word lecture below used very loosely expect that the lecture periods will include some traditional style lecturing but hope will more like multilogue set dialogues You are expected attend ask questions and provide comments planning lecture about minutes the minutes have allocated each session The rest the time will for the purpose answering extended questions and going into more specifics some the programming techniques and examples you don have things ask this remaining time may ask some things you quiz Threads There are essentially three interwoven threads the course The book the problems and the lectures try keep them synch with one another but active participation all three threads required Volume wise the book covers more material than can discussed the lecture The lecture will cover some things not the book Staying attune what going lecture will help you focus the areas the book that are important far exam emphasis The problems exercise some but not all the things discussed the book and lecture Course Resources The course planned interactive throughout are eager prevent programming difficulties from consuming extraordinary time please ask when you get stuck with such difficulties much more efficient start early each assignment that you give yourself enough time cope with the numerous contingencies which inevitably materialize You can get help line emailing help muddcs which goes the graders tutors and don encourage use talk because too slow but check email often When you email message will typically answered the entire class with parts your message embedded you not want attributed you please indicate your message carrying problem solutions through computer implementation you are showing that you understand the issues principles and techniques the tutors will explain you how work any problem any level detail you ask However you must with sufficient time margin Telling the eleventh hour that you just aren getting and therefore want drop the course not availing yourself the substantial help available You are also welcome submit email with any question you like have answered any point you would like addressed after lecture leave note mailbox Olin course you are encouraged ask such questions class well There are many tools available muddcs itself Use the man feature UNIX find what you need and explore The command man command gives information specific command The command man topic lists commands relating specific topic You can also use the info reader GNU Emacs for certain library language and editor specifics Emacs type escape info Emacs very powerful editor which going around for long time highly encouraged that you learn use Helpful information examples line copies assignments etc will kept various subdirectories the directory machine muddcs There web page for rex and ISCAL documentation Finally the corner store maxim applies you can find what you want ask for Grading There will approximately six graded assignments most entailing programming Programming assignments help drive home key working concepts and principles Assignments vary difficulty and will not necessarily equally weighted There will also some assignments which you will not submit but should anyway because they will help you with other assignments The languages for the graded assignments will probably one rex two Java one one Prolog and one assembly language ISCAL for simulated machine Sufficient information about the languages will provided enable you complete the assignments you not have know these languages when you enter the class Here the nominal point breakdown use assignments This may vary somewhat depending the emphasis the assignment for general correctness The program should run according specification taking into account any DWIM what mean situations The professor says one thing but really meant something different Hopefully someone will catch this and say something about before goes too far are learning community here don just silent about things that you think are errors for choice discovery algorithm Sometimes the algorithm given However sometimes such clues are ignored resulting loss points unnecessarily unnecessary floundering Some people find better way than what was suggested They get extra credit grader discretion Note better does not mean more obscure cleverly hacked but rather more elegant substantially more efficient for documentation Comments should included the code which expose the method any subtleties etc for style The code should readable without extraordinary effort Use spacing braces etc improve readability Layout characters are not premium use them liberally for robustness The program should not break unusual ways for minor input aberrations Remember you can always ask about things before you submit your actual product There reason lose points most the above You also lose points esteem for asking Tutoring The tutors are expected play key role the course Everyone will need interact with tutor even you don need help You will check with your tutor regular basis and show him her your progress Checking will part your grade Your tutor will advise you your approach solving the problem documentation and presentation Your tutor will make evaluation your work when you are ready submit and recommend grade will assign the grade for the assignment based the tutor recommendation although not bound follow the recommendation Neither nor the tutors are your adversaries want you succeed but requires effort cooperation and timing your part Your Directory You should have directory which has group access group not the system administrator will create one for you Access this directory will thus you the instructor and the tutors but preferrably one else When properly setup the directory listing obtained for this directory should look like drwxrwx yourid Sep does not you should execute the following command from your home directory chmod The purpose this directory able get help programs without mailing the program Simply indicate the file name the instructor tutor she can connect the directory and write things there not necessary that you keep all your work accessible there just the things which you are currently working Honor Code Standard Please read this carefully Although discussion problems with others encouraged programming emphasizes individual learning not group projects observe the following Standard You may discuss the assignment with other students You may not share give receive written work any kind inside outside the course Elaboration the case programming assignments consider written work include email computer files fragments files and printed output developing code for programming assignment you can discuss ideas with others but discussion ideas must not involve wholesale examination transcription the actual working code others with the exception that you may use any code explicitly provided the instructor The following types activities have occurred the past They have most cases resulted receiving failing grade the course one more appearances before the judicial board with the attendant blighted record and some cases eventual ITR Ineligible Register status Two more students split assignment then transcribe each others contributions sometimes changing names variables comments formatting etc student browses the directories other students and finds someone homework file unprotected makes copy the file and edits above try make look like his own You would surprised how easy for grader spot violations you have any doubts about whether form interaction constitutes violation this standard please consult with prior continuing you get significant but legitimate help from another you should acknowledge your submission You not lose credit for this only proper acknowledge the other person Grading Weights Here how your overall grade determined programming assignments final examination mid term examination attendance participation tutor checkin and random quizzes Exams are open book and emphasize conceptual understanding rather than memorization fine details Late Assignment Policy Submissions are done following the instructions below which also establishes the time submission The due dates assignments should noted carefully The work assignment should conducted the week weeks before not the last day when there space for the necessary thinking Automatic Grace There automatic fixed one day grace period all assignments other words the due date states day then the assignment must turned before midnight day receive any credit After midnight day work you spend the problem for you own edification only which not say that isn worth doing required you just don get points for then best plan get the assignments the stated due date Topic Outline The lectures will roughly follow this outline The progression the rate about two the numbered topics below per week should say that this what would like Depending background some the topics expand longer than allocated with the result that other topics get jettisoned fall off the end Please keep the reading without being explicitly assigned The notes generally expand the lectures and discussions But the lectures may also expand the notes introduce new material More often than not several threads will interwoven the lectures over period time part emphasize the commonality concepts from different vantage points Brackets below indicate where chapters the notes start with respect the concepts that follow The outline does not mention every topic The actual lectures determine points emphasis Information structures List notation Trees and Graphs High level functional programming Higher order functions Anonymous functions Equivalences Low level functional programming Rewrite rules Recursion Mutual recursion Depth first and breadth first search trees and graphs Caching States and Transitions Computation problems and models computation Assignment based programs McCarthy transformation Turing machines RAM model Arrays Linear addressing principle Pointers values and values Computing Objectively Object orientation and data abstraction Java objects Inheritance Structural Computing The Polya library Translating rex Java expressions Low level data structuring Dynamic storage allocation Open closed list models Computing Grammatically Inductive definitions grammars syntax Parsing Evaluation Computing Logically Proposition logic and applications Gate realizations Physical bases for computation Minterm expansion Boole Shannon expansion Logic simplification Hypercubes Karnaugh maps Don care situations Predicate logic Programming logic Backtracking Program specification correctness and verification Mid term examination Date Midterm Wednesday October Complexity computing Runtime measures Profiling Growth rate comparisons Upper bounds notation Examples from sorting Heapsort radix sort Complexity continued Empirical measurements Amdahl law Set abstraction examples Bit vectors Weighted graphs Shortest paths Traveling salesman problem Finite State Computing Finite state machines Sequential logic design Physical basis for memory Regular expressions and finite state machines Computer components Registers buses multiplexors etc Stored Program Computing Stored program computer structure ISC Incredibly Simple Computer ISC Assembly language Low level implementation recursion Computing Parallel Parallel computation Multi threading Networking Limitations Computing Finite state limitations Lower bounds Incomputability Intractability and completeness The glitch phenomenon Comprehensive final exam Date Final Monday December How submit assignments submit assignment login muddcs and run submit filename where filename the file containing the assignment submitted The file should non encoded ascii file with most characters per line The program will ask what assignment this number and then submit the assignment properly Shortly thereafter usually few seconds you will recieve mail exact copy what was submitted You will notice that some headers are attached containing certain essential information These headers are commented out that compilation the program not affected what you recieve not acceptable becomes MIME encoded because more than columns contains control characters you are responsible for noticing this immediately correcting the file and submitting All submissions will kept for archival purposes but only the latest submission before the time deadline will graded 