Date Wed Nov GMT Server Apache Content type text html Mani Chandy Mani Chandy This page was birthday gift from Mani students him Snail mail Computer Science California Institute Technology Pasadena Secretary Diane Goodfellow diane caltech edu FAX Projects Archetypes Archetypes for parallel and sequential programming plus electronic textbook for viewing and selecting them Caltech Infospheres Project Projects formal methods and practical applications distributed information collaboration over the Web Java and the Internet Compositional parallel programming language based Compositional Systems Research Group the Center for Research Parallel Computation Projects formal methods and practical applications compositional systems distributed computing CORBA SDL Multicast Opendoc and UNITY Fortran parallel programming language based Fortran Infosphere Infrastructure Research Project distributed programming layer using the Web Java and the Internet Problem Solving Environments Specially suited environments enable scientists solve complex problems Current Students Caltech Joe Kiniry Berna Massingill Adam Rifkin Paul Sivilotti Eve Schooler Dan Zimmerman Former Students Caltech Ulla Binau PhD Peter Carlin Peter Hofstee PhD Rohit Khare Svetlana Kryukova Rustan Leino PhD Rajit Manohar John Thornley PhD Courses Caltech abc Computer Algorithms units not offered Design analysis and proofs correctness computer programs Program specification methods proving program correctness and computational complexity completeness Models parallel concurrent and distributed computation Searching sorting string matching Graph geometric algebraic and matrix algorithms Linear programming Heuristic search Discrete event simulation Algorithms for distributed systems Part third term spent studying applications one branch science engineering abc Distributed Computation Laboratory units prerequisites equivalent This laboratory course deals with applications systematic design methods and theories for reasoning about the correctness and performance concurrent programs The theories include temporal logics computational complexity analysis probabilistic models statistics and discrete event simulation The first two terms require program development carried out individually groups two and the third term has larger project carried out team Concurrent programs are developed using object oriented languages and methods for single address space and multiple address space systems User interface designs are considered within the narrow scope designing reliable concurrent systems that include human interaction Aspects communication protocols for static and mobile systems distributed operating systems and fault tolerant systems are studied with focus systematic design achieve reliability and performance The course structured around programming projects using tools such but not limited Java and the World Wide Web Unix processes pipes and sockets TCP and multicast protocols object request brokers such CORBA and its extensions such and discrete event simulation packages Given alternate years This page maintained Adam Rifkin and Joseph Kiniry and was last modified Thursday Aug PDT 