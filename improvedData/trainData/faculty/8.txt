MIME Version Server CERN Date Wednesday Nov GMT Content Type text html Content Length Last Modified Friday Nov GMT Dan Huttenlocher Home PageDaniel HuttenlocherAssociate Professordph cornell edu fax Research main area research visual matching and recognition work this area ranges from theoretical algorithms using techniques from computational geometry applications visual matching end end systems for remote collaboration viewing document images over wide area networks video monitoring and target recognition also interested uses new types electronic documents for communication remote collaboration and education Algorithms for comparing geometric MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Sunday Oct GMT Laurie Honour WerthLaurie Honour Werth Lecturer lwerth utexas eduCurrent Semester Fall Office Hours for Fall TIMES tba OFFICE Taylor PHONE Links Classes Software EngineeringCS Contemporary Issues Computer Science Professional ServiceVice Chair for Education IEEE Technical Committee Software Engineering presentCo chair ACM CSC Conference Chair ACM Professional Development Committee present Areas InterestSoftware engineering and cognitive science Summary Research current work centers the development software tools and environments Other areas include computer human interface and software metrics Selected Recent Publications Werth Quality assurance for software engineering project IEEE Transactions Education January Werth Lecture notes software process improvement CMU SEI Feb Werth Industrial strength CASE tools for software engineering classes Software Engineering Education Tomayko Eds Springer Verlag Werth and John Werth Directions software engineering education Proceedings from Workshop Directions Software Engineering ICSE May Werth Object oriented programming the Macintosh Journal Object Oriented Programming Nov Dec Other Useful Links University Texas Computer Science Department Home PageFaculty ProfilesCS Classes Last Update August Date Thu Nov GMT Server NCSA Content type text html Last modified Fri Sep GMT Content length David Patterson homepageDavid Patterson David Patterson Professor Computer Science Berkeley And here Click here for short biography Click here for son Michael Patterson home page Office Soda Hall Berkeley Berkeley Send email patterson berkeley edu Dave Main Menu Recent Talks Papers Current Fall Home Page Spring IRAM Home Page Fall Home Page Spring Lecture Slides Fall Lecture Slides Fall Homeworks Date Thu Nov GMT Server NCSA Content type text html Last modified Mon Sep GMT Content length David Wood Home Page David Wood david wisc edu Associate Professor Computer Science and Electrical and Computer Engineering Department Computer Sciences University Wisconsin Madison West Dayton Street Madison USA david wisc edu Phone Secretary Julie Fingerson Thea Sklenar Departmental Office Fax Research Interests Computer architecture especially memory system design for uniprocessors and multiprocessors Design implementation and programming parallel computers Operating systems for parallel computers Performance evaluation tools and techniques especially for memory system analysis VLSI design including low power design for portable computers Research Projects Wisconsin Wind Tunnel WWT Memory System Performance Tools WARTS Education University California Berkeley University California Berkeley Current Graduate Students Babak Falsafi Steve Reinhardt Brian ToonenRecently Graduated Students Rahmat Hyder Intel Alvy Lebeck Duke University Rob Pfile Sun Microsystems Mark Callaghan Informix Courses Teach Fall ECE Introduction Computer Architecture ECE Machine Organization and Programming ECE Introduction Computer Architecture ECE Advanced Computer Architecture ECE Advanced Computer Architecture Selected Recent Papers Decoupled Hardware Support for Distributed Shared Memory Steven Reinhardt Robert Pfile and David Wood ACM IEEE International Symposium Computer Architecture ISCA May Coherent Network Interfaces for Fine Grain Communication Shubhendu Mukherjee and Babak Falsafi and Mark Hill and David Wood ACM IEEE International Symposium Computer Architecture ISCA May Synchronization Hardware for Networks Workstations Performance Cost Rahmat Hyder and David Wood ACM IEEE International Conference Supercomputing ICS May Dynamic Self Invalidation Reducing Coherence Overhead Shared Memory Multiprocessors Alvin Lebeck and David Wood ACM IEEE International Symposium Computer Architecture ISCA June Active Memory New Abstraction For Memory System Simulation Alvin Lebeck and David Wood ACM SIGMETRICS May Accuracy Performance Parallel Simulation Interconnection Networks Douglas Burger and David Wood the proceedings the International Parallel Processing Symposium April Application Specific Protocols for User Level Shared Memory Babak Falsafi Alvin Lebeck Steven Reinhardt Ioannis Schoinas Mark Hill James Larus Anne Rogers and David Wood Proceedings Supercomputing Fine grain Access Control for Distributed Shared Memory Ioannis Schoinas Babak Falsafi Alvin Lebeck Steven Reinhardt James Larus and David Wood Proceedings ASPLOS Tempest and Typhoon User Level Shared Memory Steven Reinhardt James Larus and David Wood Proceedings Int Symposium Computer Architecture Cache Profiling and the SPEC Benchmarks Case Study Alvin Lebeck and David Wood pages IEEE COMPUTER October Cooperative Shared Memory Software and Hardware for Scalable Multiprocessors Mark Hill James Larus Steven Reinhardt David Wood ACM Transactions Computer Systems TOCS November The Wisconsin Wind Tunnel Project Annotated Bibliography Mark Hill James Larus David Wood Computer Architecture News December line version revised frequently Wisconsin Architectural Research Tool Set WARTS Mark Hill James Larus Alvin Lebeck Madhusudhan Talluri David Wood Computer Architecture News CAN August Research Summary main research goals lie developing cost effective computer architectures that take advantage rapidly changing technologies research program has two major thrusts evaluating the performance feasibility and correctness new architectures and developing new tools and techniques facilitate this evaluation Currently this research focusses the following three areas multi paradigm multiprocessors which efficiently integrate shared memory message passing and hybrid programming paradigms virtual prototyping system which exploits the similarites existing parallel machine simulate hypothetical parallel machine and techniques for understanding and tuning program performance Recent results include developing new interface called Tempest between user level protocol handlers and system supplied mechanisms Tempest provides the mechanisms that allow programmers compilers and program libraries implement and use message passing transparent shared memory and hybrid combinations the two Tempest mechanisms are low overhead messages bulk data transfer virtual memory management and fine grain access control The most novel mechanism fine grain access control allows user software tag blocks bytes read write read only invalid the local memory can used transparently cache remote data are exploring alternative ways support this interface The first called Typhoon proposed hardware platform that implements the Tempest mechanisms with fully programmable user level processor the network interface reverse translation table RTLB invokes the network processor when detects fine grain access fault have simulated Typhoon the Wisconsin Wind Tunnel and found that transparent shared memory protocol running Typhoon performs comparably all hardware Dir cache coherence protocol for five shared memory programs have also developed new memory system simulation method that optimizes the common case cache hits significantly reducing simulation time Fast Cache tightly integrates reference generation and simulation providing the abstraction tagged memory blocks each reference invokes user specified function depending upon the reference type and memory block state The simulator controls how references are processed manipulating memory block states specifying special NULL function for action cases Fast Cache implements this abstraction using binary rewriting perform table lookup before each memory reference SPARCStation Fast Cache simulation times are two three times faster than conventional trace driven simulator that calls procedure each memory reference simulation times are only three six times slower than the original instrumented program are also investigating using Fast Cache binary rewriting techniques support the Tempest interface existing hardware platforms Last Updated July 