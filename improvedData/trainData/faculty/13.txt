MIME Version Server CERN Date Wednesday Nov GMT Content Type text html Content Length Last Modified Tuesday Oct GMT Faculty Research Interests Greg Morrisett Greg Morrisett jgm cornell edu Assistant Professor Computer Science Cornell University Ithaca Office Upson Hall Office phone Table Contents Research InterestsTeachingSelected PapersRelated Research LinksPersonal InformationResearch Interests primary research interests are the development and use advanced programming languages particularly interested the use high level languages such Standard for building systems software including run time systems operating systems and distributed systems Lately have focused the implementation issues that have kept high level safe languages from being used the construction systems software this end research has concentrated producing code for high level languages that faster consumes less memory and supports hacking with the bits also interested bringing powerful semantics based tools from programming language theory such type directed compilation partial evaluation abstract interpretation and run time code generation into the design specification and construction real systems software TeachingCS Semantics Programming Languages Fall Advanced Language Implementation Spring Selected Papers Semantics Memory Management for Polymorphic Languages Greg Morrisett and Robert Harper CMU Technical Report CMU Also appears CMU FOX September Compiling with Types Greg Morrisett gzipped postscript Thesis Published CMU Technical Report CMU December TIL Type Directed Optimizing Compiler for Tarditi Morrisett Cheng Stone Harper Lee SIGPLAN Conference Programming Language Design and Implementation The TIL Compiler Performance and Safety Through Types Morrisett Tarditi Cheng Stone Harper Lee Workshop Compiler Support for Systems Software Typed Closure Conversion Yasuhiko Minamide Greg Morrisett and Robert Harper appear the Symposium Principles Programming Languages Extended version published CMU Technical Report CMU FOX July Abstract Models Memory Management dvi version Greg Morrisett Matthias Felleisen and Robert Harper Conf Functional Programming Languages and Computer Architecture Extended version published CMU Technical Report CMU dvi version also CMU Fox Note CMU Compiling Polymorphism Using Intensional Type Analysis Robert Harper and Greg Morrisett Proc the Annual ACM Symposium Principles Programming Languages San Francisco January Optimistic ParallelizationGreg Morrisett and Maurice Herlihy CMU October Refining First Class Stores Gregory Morrisett Proceedings the ACM SIGPLAN Workshop State Programming Languages Copenhagen Denmark June Procs and Locks Portable Multiprocessing Platform for Standard New Jersey Gregory Morrisett and Andrew Tolmach Proceedings the Fourth ACM SIGPLAN Symposium Principles and Practice Parallel Programming San Diego May Portable Multiprocessing Interface for Standard New Jersey Gregory Morrisett and Andrew Tolmach CMU June Also appears Princeton Adding Threads Standard Eric Cooper and Gregory Morrisett CMU December Related Research Links Mark Leone Resources for Programming Language Research used member the Fox Project Carnegie Mellon line information about Standard Home pages researchers programming languages Home pages research projects programming languages Programming language oriented bibliographies Cornell Department Computer Science Personal Information Home Address Warren Road Ithaca phone MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Tuesday Aug GMT Professor Nell Dale Website Beginning JavaScript Applet Makes empty array items function makeArray this length for var this null return this Get Name Current Month function mName var nameM new makeArray nameM January nameM February nameM March nameM April nameM May nameM June nameM July nameM August nameM September nameM October nameM November nameM December Get Current Month today new Date month today getMonth Return Current Month nameM month return Get Name Current Day function dName Define vars var nameD new makeArray nameD Sunday nameD Monday nameD Tuesday nameD Wednesday nameD Thursday nameD Friday nameD Saturday Get Current Day today new Date day today getDay Return Current Day nameD day return function scrollit seed var dayname monthname monthname mName monthname dayname dName dayname today new Date year today getYear daynum today getDate var Today dayname monthname daynum year var Welcome Nell Dale Homepages var Click item interest var var var msg var out var seed seed var cmd scrollit seed timerTwo window setTimeout cmd else seed seed for seed out out msg seed var cmd scrollit seed window status out timerTwo window setTimeout cmd else seed seed msg length out msg substring seed msg length seed var cmd scrollit seed window status out timerTwo window setTimeout cmd else window status timerTwo window setTimeout scrollit End JavaScript code Professor Nell Dale Home PagesUniversity Texas Computer Science Department Welcome home page You have reached the web address Nell Dale retired Senior Lecturer Computer Sciences the University Texas Austin received Computer Sciences from Austin and have been the faculty here since retired from full time teaching the summer now teach full load each Fall and spend the Spring and Summer writing and traveling Please feel free browse any rooms the resume room which contains curriculum vita the bibliography room which contains information the text books have authored authored the research room which contains abstracts dissertations that have chaired recently and the personal room which contains mementos nontechnical interests Please direct any correspondence mail account ndale utexas edu Professional ProfilePublicationsResearch InterestsPersonal InterestsNell Dale Westlake Austin fax office This document was created with the assistance ofF All rights reserved Last updated Aug Date Monday Nov GMT Server NCSA MIME version Content type text html Raphael Finkel Raphael Finkel Office Computer Science Department Anderson Hall University Kentucky Lexington office sec spouse Beth Goldstein fax raphael engr uky edu Home Montavesta Drive Lexington line papers and booksAn Implementation Service Rebalancing Service Rebalancing comparison some parallel game tree search algorithms reservation based CSMA protocol for integrated manufacturing networks The Viva File System operating systems Vade Mecum second edition quick course operating systems QDDB ASCII Database for Fast Queries Relatively Stable Data Extending The Dimensions Consistency Spatial Consistency and Sequential Segments Schema and Tuple Trees Intuitive Structure for Representing Relational Data Advanced Programming Language Design Addison Wesley line software Interactive appointment calendar Gremlin Interactive picture drawing for troff Grn postprocessing for Gremlin Multithread tasking package for Unix Yiddish Ascii transformer Yiddish TeX fonts and software Family tree programs Qddb Database with nice GUI DIB Distributed implementation backtracking SAT System Administration tools SAT System Administration tools databases Pulsar Pulse monitor package Viva file system for Linux Other interesting things Yiddish and Hebrew texts FarberismsAppalachian Association Sacred Harp SingersLansdowne Sephardic shape note Appalachian Association Sacred Harp SingersMy genealogyInformation for students Information for students Links follow often Date Thu Nov GMT Server NCSA Content type text html Last modified Fri Sep GMT Content length Home Page Charles Fischer nbsp nbsp nbsp nbsp nbsp nbspCharles Fischer nbsp nbsp nbsp nbsp nbsp nbspProfessor Computer Sciences nbsp nbsp nbsp nbsp nbsp nbspUniversity Wisconsin Computer Sciences Department University Wisconsin Dayton Madison Telephone Messages Fax Email fischer wisc edu Teaching This semester teaching the graduate course compilers the spring teaching the undergraduate course compilers Research research interests focus compiler design and implementation Recently been interested how best exploit the enormous capabilities provided modern computer architectures Some the issues students and have investigated include Code scheduling important avoid unnecessary pipeline delays have investigated issues optimally scheduling arithmetic expressions The dominant model for global procedure level register allocation graph coloring this the best model Maybe not Other models that explicitly quantify the likelihood and benefit register residence are very attractive Careful register allocation vital generating code unnecessary loads and stores must avoided The ultimate register allocation interprocedural register allocation which all the procedures program are analyzed have studied interprocedural allocation models that optimally allocate register among procedures polynomial time What more the approach seems effective practice Anyone who codes knows how easy make mistakes Errors involving pointers and array indices are especially common have studied ways automatically check all pointer and array operations run time shared memory multiprocessor workstations Using one processor run program and another monitor the program possible routinely check programs they execute with little apparent slowdown Recent Publications Minimum Cost Interprocedural Register Allocation Steven Kurlander and Charles Fischer POPL The ACM SIGPLAN SIGACT Symposium Principles Programming Languages January Low cost Concurrent Checking Pointer and Array Accesses Programs Harish Patil and Charles Fischer appear Software Practice and Experience Demand Driven Register Allocation Todd Proebsting and Charles Fischer appear ACM Transactions Programming Languages and Systems Efficient Instruction Scheduling for Delayed Load Architectures Steven Kurlander Todd Proebsting and Charles Fischer ACM Transactions Programming Languages and Systems Vol Zero cost Range Splitting Steven Kurlander and Charles Fischer SIGPLAN Conference Programming Language Design and Implementation June Other Activities new completely revised second edition Crafting Compiler authored with Ron Cytron and Richard LeBlanc almost complete will published Benjamin Cummings Look for soon better bookstores everywhere the Short Communications Editor for ACM Transactions Programming Languages and Systems TOPLAS Education Cornell University Parsing Context Free Languages Parallel Environments supervised John Williams Students Donn Milton Syntactic Specification and Analysis with Attributed Grammars July Bruce Rowland Semantic Attribute Evaluation During Syntactic Analysis July Stephen Skedzielewski Definition and Use Attribute Reevaluation Attributed Grammars September Bernard Dion Locally Least Cost Error Correctors for Context Free and Context Sensitive Parsers December Mahadevan Ganapathi Retargetable Code Generation and Optimization Using Attribute Grammars November Vimal Begwami New Approach for Attribute Evaluation and Error Correction Compilers August Jon Mauney Least cost Syntactic Error Correction Using Extended Right Context January Gregory Johnson Context Sensitive Attribute Flow August Anil Pal Generating Execution Facilities for Integrated Programming Environments December William Winsborough Automatic Transparent Parallelization Logic Programs Compile Time August Venkatesh Framework for Specification and Implementation Program Analysis Algorithms August Todd Proebsting Code Generation Techniques August Steve Kurlander Approaches Interprocedural Register Allocation January Harish Patil Efficient Program Monitoring Techniques June 