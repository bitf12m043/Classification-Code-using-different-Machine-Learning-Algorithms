MIME Version Server CERN Date Monday Dec GMT Content Type text html Content Length Last Modified Monday Mar GMT Project Martix Products Back Home Page Project Martix Products Date Assigned February Date Due February Introduction This project involves writing small assembly language program for multiplying matrices Your program will gets its input from and send its output the BasePak runtime window Specs Overview Compute the matrix product technically mod where and are matrices bit unsigned integers The minimum matrix size will and the maximum matrix size will Input parameters matrix bit unsigned integers the first matrix the product matrix bit unsigned integers the second matrix the product unsigned bit integer the number rows unsigned bit integer the number columns and the number rows unsigned bit integer the number columns and satisfy Output parameters matrix bit unsigned integers mod Arithmetic all arithmetic over integers mod use unsigned bit integer multiplication and addition and take only the low order word multiplication results User interface The user interface your program will minimal this assembly language program after all Your program should prompt the user for the parameters and successively then allow the user enter the values the elements the matrix then the values the matrix After these values have been entered your program should output the matrices and and then output the result matrix All numerical input and output should base Matrices should output standard order row elements the matrix should correspond row numbers the screen For example were matrix with elements and then would output Matrices should input prompting the user for elements one time the same order which they would output The text the prompt should include the matrix name and the indices the element currently being prompted for For example the matrix given above would entered via the following exchange underlined text indicates the program output non underlined text indicates the user input Sample Run run your program should look something like the following Result which corresponds Documentation The usual documentation guidelines always explain how you using registers use symbolic constants whenever possible state the input and output parameters all subroutines etc apply Your program should have least subroutines one for inputting matrices one for printing matrices one for multiplying the matrices Each subroutine should begin with header that looks like this Name function Synopsis brief description what the function does who calls why and any exceptional conditions HLL description Put high level language pascal pseudo code description routine here Register usage Map out what registers are used for Input Conditions What should the format the registers and stack entry the routine Output Conditions What will the format the registers and stack when the routine returns Stack frame What does the stack frame look like For example Saved Registers Old Return Address Param Param The subroutine code should immediately follow the subroutine header Try comment each line and use block comments and blank spaces separate logical sections the subroutine For example here the code routine that swaps the two registers and SWAP Prolog Save registers set stack frame LINK set frame pointer locals MOVEM Save registers use Compare and see need anything not then just jump epilog and leave CMP BLT DONE get here Swap the contents and using scratch register MOVE tmp MOVE MOVE tmp Epilog Restore registers clean stack frame return DONE MOVEM Restore registers etc UNLK RTS Try give high level description the function header more detailed description the block comments and blow blow the individual line comments Don just repeat what the code says possible addition for this project sure you document the following aspects your program your method laying out matrices memory your indexing conventions Misc Your program should check that the values and supplied the user fall within the allowable range You probably need adapt the bit signed decimal routines the BasePak library for use bit unsigned routines For this project simply taking the low order word the return from decin long would acceptable for inputting bit unsigned integers though that wouldn such great idea real program and using decout long will work for outputting bit unsigned integers long you remember clear the high word Submitting Hand the following the consulting office hardcopy your program hardcopy sample run your program electronic copy your program diskette Back Home Page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Wednesday Nov GMT The Netrek Java Project The Netrek Java Project Hiep Nguyen http www utexas edu users hiep netjav html Table Contents Proposal Why Netrek Why Java Methodology Java Possible Drawbacks Who working this Helping Out Signing and Suggestions Related Web Sites Proposal propose the gradual porting and migration from Java the client code for Netrek popular interactive multi user video game the internet This will allow Netrek run all applications and all platforms running Java Netscape HotJava Solaris WindowsNT The goal produce pure Java application using the graphics networking and security features Java and develop methodology for gradual code porting from Java This project will also demonstrate that Java can handle interactive networked application with real time graphics The result will impressive video game for the World Wide Web Why Netrek Netrek one the most popular real time networked video game the internet has wide user base and excellent demonstration networking and graphics capabilities has simple graphics engine and not crucial for the graphics run fast like other commercial video games since was written with networking mind The true speed bottleneck game like Netrek the communication between Netrek client and server Netrek has also been ported many times many platforms thus the modular structure present for gradual code porting For example the first stage the code port would involve writing graphics wrapper Java for the Netrek graphics engine thus keeping all the other code tact Also there the number files and functions Netrek client not trivial will good test how well Java handles large application like Netrek Why Java Java allows portable code that can updated without having users download new clients for each new release also allows better graphics true images instead bitmaps thus can use gif for all ships and planets will already have support for networking and security will decrease the need port Netrek new systems Methodology propose the gradual porting the client code Netrek Java using the facilities for calling native code from Java Java graphics and networking methods will replace the client code equivalent The process will involve Identifying the functions that must called from Java the most trivial instance can have one wrapper method call the function main the general case will put more and more the functionality Java such the graphics and networking Identifying Java functions that will replace the client code Testing the functionality the Client Code For every migration file Java the functionality Netrek should remain the same Repeat the process until all code has been ported Java The porting can broken into main phases Port the graphics engine Java Port the networking engine Java Port the rest the files Java Java Possible Drawbacks The following are possible questions that this project will answer directly relevant Java will test these possible drawbacks Java Speed any video game the drawback course speed The first speed drawback starting the game The client must downloaded the user when starts the game course when using browser like HotJava cacheing can turned thus speeding the process considerably the next invocation Netrek The second Speed problem the graphics engine not clear how fast Java for graphics Sparc station the speed should enough but what about other platforms like the Macintosh and WindowsNT With better hardware the speed problem should reduced but this project will truly test the graphics capabilities Java The third speed problem the networking engine Netrek uses many different methods for having smaller and fewer packets order increase speed and reduce lag Can this done Java Security Another consideration Security Currently Netrek uses RSA security Will Java provide comparable security Will the security features Java strict thus forcing difficult work arounds Size Code The third drawback size Will the Java Client small enough fit most platforms Will the Client code take too much resources making multitasking between other tasks and Netrek impossible smaller systems such the Who working this Currently the people working this project are Jason Asbahr jason fisher psych edu Spencer Bishop sbishop utexas edu Stephen Paul Carl esteban utexas edu Amanda Chou achou utexas edu Alec Habig ahabig bigbang astro indiana edu Charles Herring herring essayons ncsa uiuc edu Ted Hooban ted hooban telos com Craig Howland Craig Howland Eng Sun COM Geri Monsen gmonsen comet lbl gov Bach Nguyen jsbach netcom com Hiep Nguyen hiep utexas edu Joey Oravec joey gopher chem wayne edu Matthew Pearson mpearson pcix com Others forgot your name Please email hiep utexas edu Helping Out Any help this project terms time knowledge comments suggestions money will greatly appreciated This project particularly suited for those interested Java Web Programming and real time video games for the Internet Please email hiep utexas edu you have any comments suggestion you would like sign for this project Related Web Site This document http www utexas edu users hiep netjav htm Java Page http java sun com Netrek Page http factoryx factoryx com Virtual Reality VRML Page http www sdsc edu vrml Date Tue Jan GMT Server Apache Content type text html Content length Last modified Wed Sep GMT Homework Assignment Introduction ComputingFall Homework Assignment Assigned lecture Wednesday September Due lecture the start lecture Wednesday September Assignment From the readings Chapter the textbook Using Information Technology give written answers the following questions You must enter commands typing codes words when interacting with interface small picture that represents task function program called software feature whereby single computer processes the tasks several users different stations round robin fashion refers the particular hardware software standard which computer system based for example IBM Macintosh removes redundant elements gaps and unnecessary data from computer storage space less space required store transmit data The process loading operating system into computer main memory from floppy disk hard disk referred The user interface that uses images called icons represent options referred The principle piece software any computer system the Explain why different platforms hardware and software standards makes personal computing complicated What multitasking and why important All homework assignment submissions must neat and legible Lab instructors have instructions return any illegible homework assignment submissions with grade you already know how use word processor have access typewriter you are encouraged use them for this assignment although you may submit this assignment hand written well you wish Word processing may required for homework assignments made later this semester you are submitting more than one page for homework assignment sure that your pages are stapled together the upper left hand corner the front the first page your homework assignment submission legibly type write Homework your name your lab instructor name your section number All homework assignment submissions are due the time and date specified late homework assignment submissions will accepted Homework assignments usually assigned and collected lecture each week should not confused with laboratory assignments which will assigned and collected your computer lab meeting each week Date Mon Nov GMT Server NCSA Content type text html Last modified Mon Sep GMT Content length Computer Systems Lab Frequently Asked QuestionsComputer Systems Lab Frequently Asked Questions This collection Frequently Asked Questions and answers designed help users the facilities provided the Computer Systems Lab your question not answered here please send mail lab will answer your question and seems generally useful add our FAQs would also appreciate feedback these FAQs Users Most the information included here for UNIX users the answer question makes sense and doesn seem apply probably doesn are currently extending our information better support users You can view our progress the Vectra Lab FAQ here you have particular questions areas that you would like see the FAQ please send mail lab Frequently Asked Questions about Solaris and the Computer Systems Lab About your account Your workstation Policies Supported Operating Systems Available software Printing Network Programs and Services Using AFS Using modem from home The Window System Backups and Restores Hardware problems Getting Help Services Password Quality Enforcement Questions About the Computer Systems Lab You may also want look the List USENET FAQs Last modified Sun Aug David Parter dparter wisc edu 