Date Tue Jan GMT Server NCSA Content type text html Last modified Wed Nov GMT Content length Programming WWW fall Assignment Programming for the World Wide Web Homework Due November You don have hand any code for this assignment Just write your answers the following questions and mail them the grader Igor When question asks you describe situation describe sequence the actions that one more threads might perform For example There are two threads First thread does this Then thread does these two things Then thread does this other thing point What can wrong the code while condition wait replaced condition wait Describe situation which this problem occurs points Here the complete source code Java Vector class Describe situation which the following code returns the element position static void Vector return elementAt Can the same problem happen with this code Why why not static synchronized void Vector return elementAt Can the same problem happen with this code Why why not static void Vector int return elementAt Can the same problem happen with this code Why why not static void Vector synchronized return elementAt point The size method Vector not synchronized this bug Why why not What elementCount were long instead int you think there bug describe situation that exhibits the bug point Assuming that the elementAt method were not synchronized describe situation where call would throw ArrayIndexOutOfBoundsException saying that the index was negative even though the index was actually positive points the lecture mentioned that threads could used improve the latency for balanced binary tree operations doing rebalancing the background Design system for doing this You don have understand balanced binary trees this problem all you have know the following balanced binary tree data structure with three operations insert delete and lookup Insert puts item into the tree delete removes item and lookup finds item based key Insert and delete can both result unbalanced tree Such tree still behaves correctly but the unbalancing becomes too severe performance can suffer Here are the signatures these methods public class BalancedBinaryTree public synchronized void insert String key Object value public synchronized void delete String key public synchronized Object lookup String key your design insert and delete should return immediately after performing their respective operations they should not wait around for the rebalancing happen Aside from that the design you Keep mind that there might many threads each which may using many trees You should submit English language description your design Clearly specify all the relevant methods the BalancedBinaryTree class and any other classes you might use Don forget say which methods are synchronized For each thread your design give approximate priority for the thread and say whether not daemon thread You may supply code snippets you wish but you must describe everything English completely correct but uncommented implementation worth zero Your solution will graded correctness efficiency clarity and good object oriented design Last Updated 