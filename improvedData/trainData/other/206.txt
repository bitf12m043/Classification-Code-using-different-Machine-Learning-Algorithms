MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Tuesday Sep GMT The FUN Transformation SystemThe FUN Transformation System demo Papers and Publications The Equational Logic Transformation System Min Liang Masters Engineering Project MEng December Department Computer Science Cornell University Ithaca New YorkAttribute Grammar Based Transformation Systems van den Berg Master Thesis Utrecht University The Netherlands INF SCR June Rapid development program transformation system with attribute grammars and dynamic transformations Vogt and Van den Berg and Freije Proceedings the International Workshop Attribute Grammars and their Applications Lecture Notes Computer Science page September Paris France MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Sep GMT ClassesClasses Multimedia Systems Parallel Languages Lin Date Tue Jan GMT Server Apache dev Connection close Content Type text html Last Modified Sun Jun GMT ETag Content Length Accept Ranges bytes SodaBot Slide Show SodaBot Slide Show These are the slides from recent SodaBot talk They are closer being date than the technical report hope they are more less self explanatory Enjoy Click the upper left slide begin All slides are copyright the Massachusetts Institute Technology The SodaBot Home Page Michael Coen mhcoen mit eduMIT Artificial Intelligence Laboratory Technology Square Room Cambridge FAX Date Mon Nov GMT Server NCSA Content type text html Last modified Thu Apr GMT Content length Section Program Program Grading ProgramDue Date Wednesday amGrade your final grade Text Covered Chp and Problem Description Suppose you are for Introductory Problem Solving one credit Pass Fail course that graded off four programming assignments save time computing the final grades for your class you decide write computer program help you The data for each student the class stored two files The first file contains the name and number each student The second file contains the number and assignment scores for each student Your program will read these two files and write table third results file showing each student name number average and final grade This typical file processing problem non interactive because the user does not type anything the keyboard all the necessary input comes from files that are already disk The user also does not see any results the screen because the results file also written directly disk File processing programs can difficult debug because they are non interactive and its hard determine exactly where the error occurr This assignment non trivial would strongly suggest starting soon possible Student Data File Format The name and number each student stored single line the student data file the following format Column Data Variable Type Name CHARACTER Number CHARACTER For example Clark Kent Gareth Bestor have created example student data file which you should use test your program called public bestor students txt You may want print off this file check that your program producing the correct results Assignment Scores File Format The programming assignment scores for each student are stored single line the scores data file The first item each line the student number followed four REAL numbers one for each assignment the following format Column Data Variable Type number CHARACTER Assignment REAL Assignment REAL Assignment REAL Assignment REAL For example have created example assignment scores file which you should use called public bestor scores txt You may want print off this file also Results File The purpose your program write table the results file summarizing all the assignment scores and final grades for each student Note this table not printed the screen The table must show the name number assignment scores average and final grade for every student All averages should displayed rounded two decimal places You may display this information any format you like but the resulting table must neat with all the columns lining and everything appropriately labelled For example Name Number Prog Prog Prog Prog Avg Grade Clark Kent Pass Gareth Bestor Pass Program Design Your program should first OPEN the results file and write any preliminary table headings Then OPEN the student data file and read the first student You must then open and read through the assignment scores file one line time until you find the scores for that student After finding their assignment scores compute their average and final Pass Fail grade The final grade given Fail Avg Finally write everything about this student the results file the appropriate columns After you have finished processing the first student read the next student from the student data file and process him her the same way Continue processing all the students this way until you reach the end the student data file Notes search through the assignment scores file find the scores for particular student you must first OPEN the file and read the first line the number this line matches the number the student you are looking for then you have found the number does not match then ignore the line and read the next one until you find one that matches After you find match CLOSE the scores file that you can OPEN again later when you search through for the next student All the students listed the student data file will have one corresponding line the assignment scores file you will always find match eventually You not know ahead time how many students are the class you not know the length either file Debugging help debug your program you should print messages the screen whenever anything significant happens For example when you read student from the student data file print their name and number Also when you read each line from the scores file print that student number and whether not matches the one you are looking for This very useful debugging technique and will help you track down bugs your program crashes For example Read student Clark Kent Read scores for student Read scores for student Found student Computing average and grade Writing results file Read student Gareth Bestor Read scores for student Found student Computing average and grade Writing results file Demo Program There compiled version solution available for reference called public bestor program exe You may copy solution your own directory and run see what sort debugging messages should displayed and what the results file should look like encourage you use solution check the output your program but obviously not use generate the output that you hand will run your program myself confirm this Skeleton Program There skeleton file solution available get you started called public bestor program for You should copy skeleton your own directory and use the basis for writing your program The skeleton contains the overall structure the program and has lots comments indicating what the different sections the program Add the appropriate statements the spaces provided and complete the documentation This skeleton intended give you head start the program and show you the sort programming style you should aiming for What Hand Hand this assignment online copying your FORTRAN source code file program for and the compiled executable file program exe your handin directory You also have hand printed copy your FORTRAN source code file your results file and the screen output when your program run with two example files Gradesheet The following gradesheet will used grade this assignment Please take close look make sure you everything that required Note that you will graded correct output for the two files have provided before handing you must run your program with these files and check that your program gives the same results solution Correct Output Correctly display student name number assignment scores average and final grade Correct debugging messages Implementation Correctly read from student data file Correctly read from scores data file Correctly write results file Correct use THEN ELSE END statement Correct use WHILE END loop Correct use FORMAT statement Meaningful variable names Indenting and neatness Documentation Program description Variable definitions Total Copyright copy Gareth Bestor bestor wisc edu Last modified April 