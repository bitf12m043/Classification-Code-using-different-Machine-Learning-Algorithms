MIME Version Server CERN pre Date Sunday Nov GMT Content Type text html Content Length Last Modified Friday Nov GMT Index pub People Index pub People Name Last modified Size Description Parent directory brown html Mar cavanaugh html Jun cavanaugh html image Aug cavanaugh html orig Mar davis gif Nov davis html Mar About Jim Davis the davis html Oct davis tiff Nov dbond html Aug frank html Oct Frank Web Playground fshi html Aug grossman html Aug kannapan html Nov About Srikanth Kannapan kannapan html old Sep kannapan html Sep kannapan html Sep kannapan html Oct kannapan html Oct mems gif Jan morgenstern html Nov Matthew Morgenstern office jpg Aug people html Jul People the Design Res people html Nov people html Feb people html Feb prasad html Aug ramesh html Jan Computational Prototypin ravi html Aug suxuan html Aug zack html Mar files MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Friday Jul GMT Web Information Web Information Home Page WWW Search Tools WWW Virtual Library Learning about things addressed URLs Primer Addressing Guide writing WWW documents HTML Primer Tutorial Stanford Clarkson Composition Guide Style Guide HTML Specs HTML validation service Mosaic forms CGI scripts TeamWeb Classes More about web publishing UTCS And also visit Information Infrastructure Standards Panel gripe utexas edu Date Tue Jan GMT Server NCSA Content type text html Last modified Fri Oct GMT Content length Timed Event Streams Next IntroductionUp index html Timed Event StreamsRoy Campbell Introduction Why not TCP Video Datagram Protocol Protocol Issues Accomplishment using VDP Current Work Future Work VDP Generalization VDP Extension Indepth Study Adaptation Vosaic Demonstrations Next IntroductionUp dir notes htmlRoy Campbell Fri Oct CDT Date Mon Nov GMT Server NCSA Content type text html Last modified Mon Oct GMT Content length Hints and FAQsCS Hints and FAQsHow are the weights the mask defined The weights used should based the values and These should scaled that integer arithmetic not floating point used the convolution operation good convolution mask The result must rescaled multiplying obtain the right answer More correctly the result convolving the above mask pixel then the rescaled and rounded result should computed since division truncates What does mean subtract two images This pixel wise difference operation resulting another image How can create two input images that approximately match scale that the splining creates cool image vscale can useful for initially scaling your two input images that the splined result more interesting Since the Laplacian images have both positive and negative values with range what the best way store these images practice most pixels will have values which are close will not usually introduce much error you truncate the Laplacian values that are less than and greater than and store the image byte per pixel Vista type SBtye How should integer arithmetic operations performed avoid losing precision Whenever you integer division operation sure compute rounded result doing instead How are the windows from the two input images determined when the images are arbitrary sizes After aligning the center pixels the two input images there some area where the two overlap Make the left image using the window the first image that centered its center point Similarly construct right image from the second input image You can either use these images input your programs stopping level the pyramid where else first padding the images size although padding will likely introduce some artifacts How the Expand operation defined and why there the formula Maybe can answer your question about EXPAND showing two implementations incorrect implementation tmp for for tmp tmp image row col store tmp instead correct version like tmp for for row mod and col mod then tmp tmp image row col store tmp the correct version suppose row and column are both even say Then you actually use window the input image row values and column values and Thus only nine the weights the kernel are used corresponding the below and you consider the weights those nine locations they turn out summing exactly And thus you should multiply your result that the effective sum weights the incorrect version still assuming row and column even you are effectively truncating row col for For instance the computed row index same for and row row Thus you are still using window your input image but some values this window are repeated The effective weights for the window are summing This weight window obviously very different from Burt Adelson weights For row odd column even etc you can similarly compute the effective weight matrices and see that the results are not similar for the two algorithms The correct version tries interpolate pixel values the larger output image looking neighborhood the smaller input image makes sense use symmetric Gaussian like weight matrix that 