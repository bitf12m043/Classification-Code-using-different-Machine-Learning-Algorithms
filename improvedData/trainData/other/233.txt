MIME Version Server CERN Date Sunday Nov GMT Content Type text html Content Length Last Modified Friday Oct GMT The Weakest Failure Detector for Solving ConsensusThe Weakest Failure Detector for Solving Consensus Tushar Deepak Chandra Vassos Hadzilacos and Sam Toueg This paper has pages get postscript copy click here here get from the mirror site preliminary version this paper appeared PODC Abstract determine what information about failures necessary and sufficient solve Consensus asynchronous distributed systems subject crash failures proved that failure detector that provides surprisingly little information about which processes have crashed sufficient solve Consensus asynchronous systems with majority correct processes this paper prove that solve Consensus any failure detector has provide least much information Thus indeed the weakest failure detector for solving Consensus asynchronous systems with majority correct processes Research supported IBM graduate fellowship NSF grants CCR and CCR DARPA NASA Ames grant NAG grants from the IBM Endicott Programming Laboratory and Siemens Corp and grant from the Natural Sciences and Engineering Research Council Canada Maintained tushar watson ibm com MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Monday Jan GMT History from UTCS Research Group StatisticsHistory from Skip Weekly ReportsTotalsNN Home Page accesses bytes Alumni accesses bytes Archives accesses bytes Bias Unit accesses bytes Conferences accesses bytes Demos accesses bytes Tools accesses bytes Graduate Students accesses bytes Home Pages around the World accesses bytes Information Sources accesses bytes Lateral Interactions Book accesses bytes NewsGroups accesses bytes Software accesses bytes Publications accesses bytes User Guide accesses bytes ReportsReports for the Year martym utexas edu Date Wed Jan GMT Server Apache Content type text html Content length Last modified Sun Nov GMT KRISHNA BHARATKrishna Bharat Krishna PhD student the Graphics Visualization and Usability Center the College Computing the Georgia Institute Technology His research advisor Scott Hudson expects graduate June with Phd Computer Science His thesis topic Supporting the Construction Distributed Interoperative User Interface Applications Here his resume Research His research directed towards finding new and intelligent ways build interoperative multi user GUI applications During the last two summers while Digital Systems Research Center Palo Alto developed direct manipulation application builder for multi user applications called Visual Obliq screenshot with Marc Brown and Luca Cardelli The Visual Obliq environment now supports the creation Migratory Applications UIST postscript aka Interactive Mobile Agents new genre network aware applications that can transport themselves new machines with the state their intact Also Visual Obliq has been integrated with the World Wide Web allowing applications copied over and executed within safe interpreter clicking web link currently working parallelizing and distributing constraint maintenance algorithms first step this direction developed Doppler UIST postscript algorithm for supporting concurrent writes reads and mutations distributed one way constraint graph with Scott Hudson Doppler delivers Causal Consistency and provides provably optimal concurrency for any algorithm that respects causal relationships has also done some work supporting Persistent Shared Objects with Active Fields with Jeyakumar Active fields support notification before after reads writes and are convenient way maintain constraints and other dependencies between data fields without requiring explicit annotations the programmer Publications Tomonari Kamba Krishna Bharat and Michael Albers The Krakatoa Chronicle Interactive Personalized Newspaper the Web appear the Fourth International World Wide Web Conference Boston Dec Krishna Bharat and Luca Cardelli Migratory Applications postscript appear the Proceedings ACM Symposium User Interface Software and Technology Pittsburgh Nov Krishna Bharat and Scott Hudson Supporting Distributed Concurrent One Way Constraints User Interface Applications appear the Proceedings ACM Symposium User Interface Software and Technology Pittsburgh Nov Krishna Bharat and Luca Cardelli Distributed Applications Hypermedia Setting Proceedings the International Workshop Hypermedia Design Montpellier France June Krishna Bharat and Marc Brown Building Distributed Application Using Visual Obliq ACM SIGCHI Video Proceedings Denver May Krishna Bharat Scott Hudson and Noi Sukaviriya Synthesized Interaction the Window System GVU Center Georgia Tech Technical Report Krishna Bharat and Marc Brown Building Distributed Multi User Applications Direct Manipulation Proceedings ACM Symposium User Interface Software and Technology Marina Del Rey Nov James Pitkow and Krishna Bharat WEBVIZ Tool for World Wide Web Log Analysis Proceedings the First World Wide Web Conference Krishna Bharat and Noi Sukaviriya Animating User Interfaces Using Animation Servers Proceedings ACM Symposium User Interface Software and Technology Atlanta Nov Victor Klassen and Krishna Bharat Correcting for Short Range Spatial Non Linearities Output Devices Proceedings ACM SIGGRAPH Anaheim Aug Noi Sukaviriya Krishna Bharat and Ellen Isaacs Multimedia Help Prototype and Experiment Proceedings ACM SIGCHI Monterey Related PagesContact Information Krishna Bharat GVU Center College Computing Georgia Tech Atlantic Drive Atlanta Phone Fax mail gatech edu Affiliations Past Present Date Mon Nov GMT Server NCSA Content type text html Last modified Thu Nov GMT Content length Questions about Program Questions about Program assume that the user going enter when asked she wishes make appointment this point you should this type error checking You should have similar function from previous assignment that you can cut and paste into program make sure change the prompt accordingly the month day hour etc entered the user invalid just include some sort default value can indicate the user that his her answer was invalid and then ask him her select again Since the input within member function certainly makes sense the latter Contrast this with the following suppose instead read app you had write bunch writer functions that filled each field one one These writer functions would probably error checking their own and assign default values since they don interact with the user summarize the interaction with the user built into member function with read app then the user enters invalid value she should prompted again for valid value the interaction with the user not built into member function see the HourlyEmployee example then your writer functions should prepared assign default values nothing all the member variables 