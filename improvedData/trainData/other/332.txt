MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Friday Sep GMT Personal Info Nicholas Howe All About Nick Howe least more than you ever really wanted know Home address Schuyler Place Ithaca The Brief Story Life was born Port Jefferson Long Island December told When was three years old family moved Hamden Connecticut where grew went college Princeton University where majored physics Graduating joined the Teach for America program and spent two years teaching small rural public high school Arkansas now second year the computer science PhD program Cornell Click here for pictures Links Other Family Members and Friends Both parents are employed Yale University mother works the medical school father professor the math department sister junior Columbia University aunt and uncle work EDC Jim Couture works Technology Send them resume you like what you see Matt Leary doesn have page but his fiancee Hillary does Alex Reutter has very cool page Check out Car Bomb Others you have links please mail them and will add this list Links Princeton past Princeton was member the Princeton Mime Company former director PrinceCon production the Simulation Games Union Although try deny was occasionally seen with that orange and black plaid monstrosity the Band also had lots friends the Wildcats cool capella group Other Web sites found interesting Fantasy Pictures just what says Tarot well the graphics look neat anyway Meyers Briggs Personality Test INTJ What your sign Earthwatch looking for different sort vacation SPAM Haikus etc just what you been looking for Funny Pages lots more jokes The Zipper find out how bug your representative Congress Voters Telecom Watch Internet anti censorship group Inktomi fast search engine Named after Native American myth Last updated Back home page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Wednesday Sep GMT ACL Version ACL Version Copyright Computational Logic Inc CLI All rights reserved ACL programming language which you can model computer hardware and software well tool help you prove properties those models The paper ACL Theorems about Commercial Microprocessors with Bishop Brock briefly discusses the system and two industrial strength applications the Motorola CAP project and the AMD floating point division project See also Selected References have two Web browser Tours introduce you ACL well Tutorial obtain ACL Read the License Agreement and you agree its terms download the ACL Sources and Documentation and then follow the Installation Instructions You may able save time obtaining binary image before following the Installation Instructions Matt Kaufmann and Strother Moore September Selected ReferencesDesign Goals for ACL early report identifying aspects Nqthm special concern during the design ACL ACL Industrial Strength Version Nqthm how scaled the Nqthm Boyer Moore logic Common Lisp preserving the use total functions within the logic but achieving Common Lisp execution speeds Mechanically Checked Proof the Correctness the Kernel the AMD Floating Point Division Algorithm with Tom Lynch the mathematical details the floating point division proof Interactive Consistency ACL Bill Young ACL translation Rushby PVS improvement Bevier and Young Nqthm formalization the Pease Shostak and Lamport Oral Messages Byzantine Generals problem The Specification Simple Autopilot ACL Bill Young ACL translation Butler PVS formalization simple autopilot Mechanized Formal Reasoning about Programs and Computing Machines Boyer and Moore explains formalization style which has been extremely successful enabling mechanized reasoning about programs and machines illustrated ACL ACL Documentation the complete ACL documentation tree the form compressed gzip postscript file When uncompressed the documentation approximately megabytes postscript and prints page book The documentation most useful its HTML Texinfo forms where the links can browsed interactively The complete HTML documentation tree available via the Index below organized Major Topics recommend that you start with the guided Tours Images your machine listed below you can avoid rebuilding ACL obtaining binary image You should nevertheless read the License Agreement and obtain the Sources and Documentation Then download the appropriate image and follow the QUICK AND EASY INSTALLATION INSTRUCTIONS Installation Instructions Sun for SparcSolaris for SparcSolaris for MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Thursday Oct GMT The info net package The source ufs info classes for the stuns and vlsi lab net info classes for the ugcs cluster sgis suggested classpath would ufs info classes get all work Note the change had ufs info classes jdk zip the CLASSPATH well but that incorrect for multiple architecture support java You need not include the base java classes explicitly your CLASSPATH they are added automatically from the install location your runtime Documentation for the source here The docs for the info net package itself here Date Tue Nov GMT Server NCSA Content type text html Last modified Thu Oct GMT Content length Java for Programmers Java for Programmers Contents Introduction First Example Values Objects and Pointers Garbage Collection Static Final Public and Private Arrays Strings Constructors and Overloading Inheritance Interfaces and Casts Exceptions Threads Input and Output Other Goodies Introduction The purpose these notes help students learn enough about Java the course projects All the students have experience programming but practically none whom have used Java What Java Before turn the details worth considering why Java has created such stir Much has nothing with the language per but with the way intended used understand this point you have know little bit about the World Wide Web The Web consists set servers scattered around the Internet each which maintains set pages Each page has name called Universal Resource Locator URL that uniquely distinguishes from any other page the world The URL starts with the name the server For example the URL this document http www wisc edu java tutorial html says that can retrieved using the HyperText Transfer Protocol http connect server www wisc edu and ask for the page calls java tutorial html Each page written combination text and formatting directives called the HyperText Markup Language HTML browser program that runs personal computer workstation that knows how display HTML documents Netscape Navigator currently the most popular browser far but Microsoft and others are trying change that HTML fairly simple For example the directive used start paragraph and text set Italics surrounding with and The most important directive precedes some text with name URL and follows with The browser underlines the text and when the user clicks with the mouse the browser goes and gets the page named the URL and displays see more examples HTML take look this document you are using Netscape Navigator select Document Source from the View pull down menu the top the window sooner had HTML caught that people wanted extend Directives were added show text different colors and sizes make blink set directives was added display tables and images Next came sound and movies The possibilities seemed endless There was one big problem however you created document using new feature couldn displayed browser that didn understand that feature Thus for feature useful had implemented all least substantial fraction the millions browsers out there Then someone got bright idea How about including with each document program capable displaying The browser wouldn have understand the document could just run the executable code that came with and that code would know how display the document Unfortunately this idea has two very serious problems The first problem that browsers run all sorts computers running all sorts operating systems include with document program designed run SparcStation under Solaris will useless Pentium running Windows The second program concerns security Running programs from random untrusted sources your own computer asking for trouble That what viruses are all about Instead displaying the document the program may clear your disk look for private information and send back over the network bad guy Fortunately there another idea that solves both these problems Instead including machine language program with document send program written for virtual machine that simulated software interpreter Arrange have each browser include interpreter for the virtual machine sense this just introduces the previous problem requiring new feature implemented everyone browser but only one last time Once you convinced all the browser vendors implement interpreter for the virtual machine they won have implement any more extensions The interpreter can also include security safeguards For example doesn implement any operation open files you don have worry about mischievous program stealing your data very difficult not impossible build such safeguards around machine language programs because such programs can contain bugs that are actually devious tricks circumvent security restrictions subscript out bounds may actually attempt read some data stored outside the memory space allocated the program The Java language was specially designed cleaned version with these loopholes removed you assign random garbage pointer variable and then dereference you will get whatever stored memory that address For example the following fetches whatever happens store location memory int int int Java prevents you from doing this sort thing whether accidentally purpose combination strong type checking and runtime checks pointer variable always initialized null and you can only assign other pointer values not integers other data you attempt dereference null pointer you get runtime exception Because Java was designed primarily build active multimedia interactive documents its standard runtime library has lots features aid creating user interfaces There are standard classes create scrollbars pop menus etc There are special facilities for manipulating URL and network connections will not using any these features the other hand there one thing operating systems and user interfaces have common They both require multiple cooperating threads control will using these features this course Applications Applets The first thing you have decide when writing Java program whether you are writing application applet applet piece code designed display part document run browser response HTML directive the document will not writing any applets this course application stand alone program All our programs will applications First Example Large parts Java are identical For example the following procedure which sorts array integers using insertion sort exactly the same Java Sort the array ascending order using insertion sort void sort int int size for int size sorted insert the proper place int int for break now are all and are Note that the syntax control structures such for and assignment statements variable declarations and comments are all the same Java test this procedure program might use main program like this include iostream include stdlib extern int random Test program test sort int main int argc char argv argc cerr usage sort array size endl exit int size atoi argv int test new int size for int size test random cout before endl for int size cout test endl sort test size cout after endl for int size cout test endl return Java program test the sort procedure different few ways Here complete Java program using the sort procedure import java import java util Random class SortTest Sort the array ascending order using insertion sort static void sort int int size for int size sorted insert the proper place int int for break now are all and are Test program test sort public static void main String argv argv length System out println usage sort array size System exit int size Integer parseInt argv int test new int size Random new Random System out println Math atan for int size test int nextFloat System out println before for int size System out println test sort test size System out println after for int size System out println test System exit copy this program available public examples SortTest java try out create new directory and copy the example file named SortTest java that directory The file must called SortTest java mkdir test test public examples SortTest java SortTest java javac SortTest java java SortTest You can also grab copy the source with your net browser Visit public examples SortTest java and use the Save option from the File menu The javac command invokes the Java compiler the source file SortTest java all goes well will create file named SortTest class which contains code for the Java virtual machine The java command invokes the Java interpreter run the code for class SortTest Note that the first parameter SortTest not SortTest class SortTest java because the name class not file There are several things note about this program First Java has top level global variables functions Java program always set class definitions Thus had make sort and main member functions called methods Java class which called SortTest Second the main function handled somewhat differently Java from the first function executed always function called main which has two arguments and return integer value The return value the exit status the program convention status zero means normal termination and anything else means something went wrong The first argument the number words the command line that invoked the program and the second argument array character strings denoted char argv containing those words invoke the program typing sort will find that argc argv sort and argv Java the first thing executed the method called main the indicated class this case SortTest The main method does not return any value type void For now ignore the words public static preceding void will return these later The main method takes only one parameter array strings denoted String argv Java This array will have one element for each word the command line following the name the class being executed Thus our example call java SortTest argv There separate argument tell you how many words there are but Java you can tell how big any array using length this case argv length meaning argv contains only one word The third difference note the way done Java System out Java roughly equivalent cout stdout and System out println whatever even more roughly equivalent cout whatever endl Our program used three functions from the standard library atoi random and exit Integer parseInt does the same thing atoi converts the character string the integer value ten and System exit does the same thing exit immediately terminates the program returning exit status meaning something wrong The library class Random defines random number generators The statement Random new Random create instance this class and nextFloat uses generate floating point number between and The cast int means the same thing Java converts its floating point argument integer throwing away the fraction Finally note that the include directives from have been replaced import declarations Although they have roughly the same effect the mechanisms are different include iostream pulls source file called iostream from source library and compiles along with the rest the program include usually used include files containing declarations library functions and classes but the file could contain any source code whatever The Java declaration import java util Random brings the pre compiled class Random from package called java util The declaration import java bring all the classes defined the package java util package sort like library You won have worry much about packages for this course Values Objects and Pointers sometimes said that Java doesn have pointers That not true fact objects can only referenced with pointers More precisely variables can hold primitive values such integers floating point numbers pointers objects variable cannot hold object and you cannot make pointer primitive value Since you don have choice Java doesn have special notation like does indicate when you want use pointer There are exactly eight primitive types Java boolean char byte short int long float and double Most these are similar types with the same name mention only the differences boolean value either true false You cannot use integer where boolean required while statement nor there any automatic conversion between boolean and integer char value bits rather than bits allow for all sorts international alphabets practical matter however you are unlikely notice the difference The byte type bits short bits and int bits just most modern machines the size machine dependent but Java guaranteed Java long not the same bits long The types float and double are just like bit and bit floating point objects are instances classes There prefix operator infix operator example consider the class declaration which the same and Java class Point int Java Point origin Point origin new Point Point Point origin origin new Point new Point origin not possible Garbage Collection New objects are create the new operator Java just like except that argument list required after the class name even the constructor for the class doesn take any arguments the list empty However there delete operator The Java system automatically deletes objects when references them remain This much more important convenience than may first seem delete operator extremely error prone Deleting objects too early can lead dangling reference new Point much later delete oops while deleting them too late not all can lead garbage also known storage leak Static Final Public and Private Just possible restrict access members class declaring them private but the syntax different class private int double public int void Java class private int public int private double public void private members can only accessed from inside the bodies methods function members the class not from the outside Thus instance not legal but can accessed from the body protected also supported means the same thing does The default neither public nor private specified that member can accessed from anywhere the same package giving facility rather like friends You will probably putting all your classes one package the default essentially public The keyword static also means the same thing Java which not what the word implies Ordinary members have one copy per instance while static members have only one copy shared instances effect static member lives the class itself rather than instances class int the way this isn legal static int void int static int return new new System out println prints System out println prints System out println prints System out println means the same thing System out println prints System out println prints Static members are often used instead global variables and functions which not exist Java For example Math tan tan static method class Math Math static field class Math Integer parseInt used href sort the sorting example The keyword final roughly equivalent const final fields cannot changed often used conjunction with static defined named constants class Card int suit CLUBS default final static int CLUBS final static int DIAMONDS final static int HEARTS final static int SPADES Card new Card suit Card SPADES Each Card has its own suit The value CLUBS shared all instances Card only needs stored once but since final doesn need stored all Arrays Java arrays are objects Like all objects Java you can only point them but unlike variable which treated like pointer the first element the array Java array variable points the array object There way point particular member array Each array has read only final field length that tells you how many elements has The elements are numbered starting zero length Once you create array using new you can change its size you need more space you have create new larger array and copy over the elements but see the library class Vectorbelow int value int pointer array object initially null int means exactly the same thing new int now points array object accesses one the slots the array new int assigns different array the old array inaccessible and garbage collected int and share the same array object System out println length prints Strings Since you can make array anything you can make array char array byte but Java has something much better the type String The operator overloaded Strings mean concatenation What more you can concatenate anything with string Java automatically converts string Built types such numbers are converted the obvious way Objects are converted calling their toString methods Library classes all have toString methods that something reasonable You can likewise for classes you define This great for debugging String hello String world System out println prints hello world System out println hello System out println hello System out println hello why System out println The value will work for any System out println System out System out System out java PrintStream String numbers for int numbers System out println numbers Strings have lots other useful operations String whatever whatnow charAt charAt substring now substring substring what substring what compareTo value less than zero precedes lexicographic dictionary order compareTo value greater than zero follows compareTo whatnow zero substring substring false they are different String objects substring equals substring true but they are both equal what indexOf indexOf indexOf now lastIndexOf endsWith now true and more You can modify string but you can make string variable point new string numbers See StringBuffer you want string you can scribble Constructors and Overloading constructor like method with the same name the class constructor has arguments you supply corresponding values when using new Even has arguments you still need the parentheses unlike There can multiple constructors with different numbers types arguments The same true for other methods This called overloading Unlike you cannot overload operators The operator overloaded for strings and various kinds numbers but user defined overloading not allowed class Point int Point int int the same this Point int this not the same Point class Test public static void main String argv Point new Point Point new Point same new Point Point new Point error The bodies the methods have defined line right after their headers shown above You have write class Foo double square double return rather than class Foo double square double double Foo square double return but not Java Inheritance Interfaces and Casts when write class Derived public Base mean two things Derived can anything Base can and perhaps more Derived does things the way Base does them unless specified otherwise The first these called interface inheritance subtyping and the second called method inheritance Java they are specified differently Method inheritance specified with the keyword extends class Base int void int class Derived extends Base void int double Class Derived has three methods and The method Derived implemented the same way the same executable code Base but Derived overrides the implementation Base call Base the super class Derived and Derived subclass Base Every class with one exception has exactly one super class single inheritance you leave out the extends specification Java treats like extends Object The primordial class Object the lone exception does not extend anything All other classes extend Object either directly indirectly Object has method toString every class has method toString either inherits the method from its super class overrides Interface inheritance specified with implements class implements Interface which like class except that the methods don have bodies Two examples are given the built interfaces Runnable and DataInput interface Runnable public void run interface Enumeration public boolean hasMoreElements public Object nextElement object Runnable has method named run that public and has arguments results Enumeration has have public member hasMoreElements that returns boolean and public member nextElement that returns Object class that claims implement these interfaces has either inherit them via extends define them itself class Words extends StringTokenizer implements Enumeration Runnable public void run for String nextToken null return System out println Words String super perhaps something else with well The class Words needs methods run hasMoreElements and nextElement meet its promise implement interfaces Runnable and Enumeration inherits implementations hasMoreElements and nextElement from StringTokenizer but has give its own implementation run The implements clause tells users the class what they can expect from instance Words know can write run hasMoreElements then class can only extend one class but can implement any number interfaces the way constructors are not inherited The call super class Words calls the constructor StringTokenizer that takes one String argument you don explicitly call super Java automatically calls the super class constructor with arguments such constructor must exist this case Note the call nextToken Words run which short for this nextToken Since this instance Words has nextToken method the one inherited from StringTokenizer cast Java looks just like cast type name parentheses preceding expression have already seen example cast used convert between primitive types cast can also used convert object reference super class subclass For example Words new Words this test Object nextElement String String System out println The first word has length length know that nextElement since Words implements the interface Enumeration but all that tells that the value returned has type Object cannot call length because class Object does not have length method this case however know that not just any kind Object but String particular Thus cast type String were wrong about the type would get run time error you are not sure the type object you can test with instanceof note the lower case find out more about with the method Object getClass instanceof String String length else System err println Bad type getClass getName Exceptions Java program should never core dump matter how buggy the compiler excepts and something goes wrong run time Java throws exception default exception causes the program terminate with error message but you can also catch exception try foo bar catch IndexOutOfBoundsException System err println Oops The try statement says you interested catching exceptions The catch clause which can only appear after try says what IndexOutOfBoundsException occurs anywhere the try clause this case print error message The toString method exception generates string containing information about what went wrong well call trace Because caught this exception will not terminate the program some other kind exception occurs such divide zero the exception will thrown back the caller this function and that function doesn catch will thrown that function caller and back the main function where will terminate the program isn caught Similarly the function foo bar throws IndexOutOfBoundsException and doesn catch will catch here The catch clause actually catches IndexOutOfBoundsException any its subclasses including ArrayIndexOutOfBoundsException StringIndexOutOfBoundsException and others Exception just another kind object and the same rules for inheritance hold for exceptions any other king class You can define and throw your own exceptions class SytaxError extends Exception int lineNumber SytaxError String reason int line super reason lineNumber line public String toString return Syntax error line lineNumber getMessage class SomeOtherClass public void parse String line throws SyntaxError throw new SyntaxError missing comma currentLine public void parseFile String fname try nextLine readLine parse nextLine catch SyntaxError System err println Each function must declare its header with the keyword throws all the exceptions that may thrown any function calls doesn have declare exceptions catches Some exceptions such IndexOutOfBoundsException are common that Java makes exception for them sorry about that and doesn require that they declared This rule applies RuntimeException and its subclasses You should never define new subclasses RuntimeException There can several catch clauses the end try statement catch various kinds exceptions The first one that matches the exception super class executed You can also add finally clause which will always executed matter how the program leaves the try clause whether falling through the bottom executing return break continue throwing exception Threads Java lets you several things once using threads your computer has more than one CPU may actually run two more threads simultaneously Otherwise will switch back and forth among the threads times that are unpredictable unless you take special precautions control There are two different ways create threads will only describe one them here Thread new Thread cmd start start running cmd but don wait for finish something else perhaps start other threads later join wait for finish running cmd The constructor for the built class Thread takes one argument which any object that has method called run This requirment specified requiring that command implement the Runnable interface described earlier The way thread runs command simply calling its run method simple that project you are supposed run each command separate thread Thus you might declare something like this class Command implements Runnable String theCommand Command String theCommand public void run what the command says You can parse the command string either the constructor the start the run method The main program loop reads command line breaks into commands runs all the commands concurrently each separate thread and waits for them all finish before issuing the next prompt outline may look like this for System out print System out flush String line inputStream readLine int numberOfCommands count how many comands there are the line Thread new Thread numberOfCommands for int numberOfCommands String next command the line new Thread new Command start for int numberOfCommands join This main loop the main method your main class not necessary for that class implement Runnable Although you won need for project the next project will require synchronize thread with each other There are two reasons why you need this prevent threads from interferring with each other and allow them cooperate You use synchronized methods prevent interference and the built methods Object wait Object notify Object notifyAll and Thread yield support cooperation Any method can preceded the word synchronized well public static etc The rule two threads may executing synchronized methods the same object the same time The Java system enforces this rule associating monitor lock with each object When thread calls synchronized method object tries grab the object monitor lock another thread holding the lock waits until that thread releases thread releases the monitor lock when leaves the synchronized method one synchronized method calls contains call another thread may have the same lock multiple times Java keeps track that correctly For example class public synchronized void public synchronized void thread calls from the outside grabs the lock before executing the body and releases when done calls grabs the lock entry calls without waiting and only releases the lock returning from Sometimes thread needs wait for another thread something before can continue The methods wait and notify which are defined class Object and thus inherited all classes are made for this purpose They can only called from within synchronized methods call wait releases the monitor lock and puts the calling thread sleep stops running subsequent call notify the same object wakes the thread that has been sleeping the longest time and lets start running again thread sleeping this object notify does nothing The awakened thread has wait for the monitor lock before starts but has precedence over any other thread trying enter synchronized method from the outside The method notifyAll similar but wakes all threads sleeping the object class Buffer private Queue public synchronized void put Object enqueue notify public synchronized Object get while isEmpty wait return dequeue This class solves the call producer consumer problem assumes the Queue class has been defined elsewhere Producer threads somehow create objects and put them into the buffer calling Buffer put while consumer threads remove objects from the buffer using Buffer get and something with them The problem that consumer thread may call Buffer get only discover that the queue empty calling wait releases the monitor lock that producer threads can call put add more objects but keeps its place line will get object before other consumer threads that arrive later Each time producer adds object calls notify just case there some consumer waiting for the object This example not correct stands and the Java compiler will reject The wait method can throw InterruptedException exception the get method must either catch declare that throws InterruptedException well The simplest solution just catch the exception and ignore class Buffer private Queue public synchronized void put Object enqueue notify public synchronized Object get while isEmpty try wait catch InterruptedException return dequeue There also version Object wait that takes integer parameter The call wait will return after milliseconds nobody wakes the thread with notify notifyAll sooner You may wonder why Object get uses while isEmpty rather than isEmpty this particular case either would work However more complicated situations sleeping thread might awakened for the wrong reason Thus always good idea when you wake recheck the condition that made decide sleep before you continue Input and Output Input Output described Chapter the Java book not complicated looks You can get pretty far just writing System out which type PrintStream with methods println and print For input you probably want wrap the standard input System DataInputStream which provides the handy method readLine DataInputStream new DataInputStream System for String line readLine line null break something with the next line DataInputStream has lots other methods but they probably don what you expect For example DataInputStream readInt reads four bytes raw data and concatenates them form binary integer the next four bytes input are the ASCII characters readInt will return you want read from file rather than from the keyboard standard input you can use FileInputStream probably wrapped DataInputStream FileInputStream rawInput new FileInputStream somefile DataInputStream new DataInputStream rawInput for String line readLine line null break something with the next line Similarly you can use new PrintStream new FileOutputStream filename write file Other Goodies The library pre defined classes has several other handy tools See the online manual for more details Integer Character etc Java makes big distinction between values integers characters etc and objects Sometimes you need object when you have value The classes Integer Character etc serve convenient wrappers for this purpose For example Integer new Integer creates version the number wrapped object The value can retrieved intValue These classes also serve convenient places define utility functions for manipulating value the given types often static methods defined constants Integer MAX VALUE the largest possible int Integer parseInt the int value Integer toHexString hex new Double doubleValue the double value see also page the Java Book Character isDigit true Character isUpperCase false Character toUpperCase Vector Vector like array but grows necessary allow you add many elements you like Unfortunately there only one kind Vector vector Object Thus you can insert objects any type into but when you take objects out you have use cast recover the original type Vector new Vector empty vector for int addElement new Integer now contains Integer objects print their squares for int Integer Integer elementAt int intvalue System out println setElementAt hello like hello Object elementAt like insertElement world set world after first shifting element the right make room removeElementAt remove and shift the left fill the gap The class Vector implemented using ordinary array that generally only partially filled Vector runs out space allocates bigger array and copies over the elements There are variety additional methods not shown here that let you give the implementation advice how manage the extra space more efficiently For example you know that you are not gonig add any more elements you can call trimToSize tell the system repack the elements into array just big enough hold them Don forget import java util Vector import java util you are using Vectors Hashtable Hashtable implements mapping from objects called keys objects called values Hashtable new Hashtable empty table put seven new Integer key the String seven value Integer object Object put seven new Double binds seven double object and returns the previous value int Integer intValue containsKey seven true containsKey twelve false get seven get current binding Double remove seven get current binding and remove clear remove all bindings StringTokenizer StringTokenizer handy breaking string into words separated white space other separator characters The following example from the Java book String str Gone and forgotten StringTokenizer tokens new StringTokenizer str while tokens hasMoreTokens System out println tokens nextToken prints out Gone and forgotten The second arguement the constructor String containing the characters that such considered separators this case space and comma omitted defaults space tab return and newline the most common white space characters There much more complicated class StreamTokenizer for breaking input stream into tokens Many its features seem designed aid parsing the Java langauge itself which not surprise considering that the Java compiler written Java Other Utilities The random number generator Random was presented above See Chapter the Java book for information about other handy classes solomon wisc edu Thu Oct CST Copyright Marvin Solomon All rights reserved 