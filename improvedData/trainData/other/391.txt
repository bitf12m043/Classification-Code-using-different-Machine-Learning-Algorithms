MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Friday Aug GMT home sweet home the glass house what found altavistayahooexcitehyperrealthe onionred meatcd worldolestra haikudan brown snowman cornell edu last updated aug MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Jun GMT Course Schedule Course Schedule Summer Fall These schedules contain information updated after the release the official Registrar course schedule Please contact gloria utexas edu for further information Date Wednesday Jan GMT Server NCSA MIME version Content type text html Arcot Rajasekar Curriculum Vitae Resume Arcot raja Rajasekar Arcot Rajasekar Department Computer Science University Kentucky Lexington Office Home Email sekar engr uky edu Fax RESEARCH INTERESTS Database Systems and Knowledge Base Systems Data Mining Logic Programming and Default Reasoning EDUCATION Computer Science University Maryland College Park Maryland USA Computer Science Indian Institute Technology Madras India Honors Electronics and Communications University Madras Madras India SYSTEMS AND LANGUAGES Database Systems Oracle Sybase Main Languages Prolog Pascal and HTML Operating System UNIX DOS and Windows Utilities and Packages Several Unix Dos and Windows environment VISA STATUS Permanent Resident the United States PROFESSIONAL EXPERIENCE Assistant Professor August present University Kentucky Lexington Research Associate July August University Maryland Institute for Advanced Computer Studies Research work logic programming and non monotonic reasoning Faculty Research Assistant January June Department Computer Science University Maryland Research work disjunctive logic programming MAJOR SOFTWARE PROJECTS PRISM Parallel Inference System DISLOG DISjunctive LOGic programming Inductive Dependencies Expert System for Profile Grinders Evolutionary Databases SLOG String oriented Logic Database MAGIC DISJ Magic Set Evaluation for Disjunctive Databases OODB Object oriented database System ADB Active Database System Data mining Algorithms TED Trans Epistemic Defaults and Multi Agent Reasoning SELECTED PUBLICATIONS from more than papers reputed journals conferences workshops and books Foundations Disjunctive Logic Programs with Minker and Lobo MIT Press Disjunctive Logic Programs with Minker and Lobo INTELLIGENT SYSTEMS State the art and future directions edited Zbigniew Ras and Maria Zemankova North Holland Inductive Dependencies and Approximate Databases with Keen Information and Knowledge Management Special Issue Selected Papers from CIKM Finin Nicholas and Yesha eds LNCS Complexity Computing with Extended Propositional Logic Programs with Marek and Truszczynski Annals Mathematics and Artificial Intelligence Vol DWAM WAM model extension for disjunctive logic programming with Yusuf Annals Mathematics and Artificial Intelligence Vol INSTRUCTIONAL WORK Graduate and under graduate courses programming languages discrete mathematics databases and artificial intelligence Advanced level courses data mining machine learning deductive databases and knowledge representation MAJOR PROFESSIONAL ACTIVITIES Member the Association Logic Programming ALP and the American Association for Artificial Intelligence AAAI Guest editor for Annals Mathematics and Artificial Intelligence Logic Databases Knowledge Representation and Reasoning Special Issue honor Jack Minker Volume Nos September Guest editor for Annals Mathematics and Artificial Intelligence Special issue Disjunctive Logic Programming Volume Nos December organizer for Workshop Logic Programming with Incomplete Information organizer for Workshop Disjunctive Logic Programs Reviewer for several conferences ICLP IJCAI PODS ISMIS etc Reviewer for several journals JLP JAR TKDE NGC etc SELECTED GRANTS Research String oriented Databases DOD EPSCoR years awarded Knowledge Communication Language for Intelligent Tutoring System Investigator NSF EPSCoR Enhancement Grant Development Expert System for Belt Grinders Gates Rubber Company Elizabethtown Research Disjunctive Logic Programming NSF Research Initiation Award Major Equipment Award Date Fri Dec GMT Server NCSA Content type text html Last modified Wed Oct GMT Content length DEVise Model VisualizationModel Visualization The model visualization used design the framework from which DEVise constructed also the best way understand how DEVise functions Stages VisualizationFileSchemaTDataMappingGDataVisual FilterViewWindowLinkCursorStages Visualization Visualization DEVise divided into stages each stage supported components responsible for the functions that stage The component design essential providing the following functionalities DEVise Visualizations are constructed creating component instances and interconnections between components DEVise extensible that new components may defined and incorporated into its framework For example new type file new way drawing graphics may incorporated The visual query interface allows the user save visualization and apply different sets input files The stages creating visualization are follows Import file into DEVise textual data TData The schema used describe information about how import the file MappingTData into graphical Data GData Select view display the GData Assign visual filter select which portion GData are viewed Arrange views windows Create linked axes using visual links display relationships between views using cursors File The input file provided the user stored disk ASCII format example ASCII file containing sin time and cos time might look like time sin cos Schema The schema file describes the layout ASCII input file used convey name type and range attributes characters that separate the attributes the file and characters that should ignored while reading the file The attribute range information optional For our example file the schema file looks like type Sensor ascii comment whitespace attr time double attr sin double attr cos double The first line names the file type Sensor All sensor files have data stored the same format More than one file type can imported into DEVise each having its own schema file For example can also create Stock file type read information about stock prices with data stored different format The second line tells DEVise ignore lines that start with The third line tells DEVise that the attributes the file are separated white spaces DEVise can also read files separated other delimiters such The remaining lines describe attribute names types and ranges TData Textual Data TData the representation used DEVise access files other types input data Once file imported into DEVise tdata the user uses the tdata create visualizations Different types input files are input into DEVise and treated uniformly TData After selecting the file type the user asked enter alias for the tdata The default name the name the input file stripped its path information After entering the alias the file imported TData into DEVise Mapping mapping converts TData attributes into graphical data GData attributes The user decides how tdata visualize selecting the tdata attributes that map onto the the color and shape gdata attributes Notice that TData can visualized more than one way creating more than one mapping For our example can create the following example mappings sin time cos time sin cos Once mapping created can used all TData with the same file type GDataThe graphical data gdata the graphical representation the tdata consists attributes color pattern size orientation shape and shape specific attributes Visual Filter visual filter defines query over the graphical data attributes the gdata Our implementation supports range query over the and GData attributes Use visual filter specify portions GData viewed View view used display those gdata that fall within the range the visual filter Currently have two types views Scatter and SortedX The Scatter view used draw scattered plot The SortedX view implements optimizations used reduce the time used draw the gdata the attribute sorted Window window provides the screen real estate used views draw the gdata also responsible for arranging views its boundaries Currently DEVise supports tiled automatic vertical and horizontal window layouts view can removed from window reduce clutter moved another window that related views are brought together for comparison Windows can duplicated very handy feature Link link used link visual filters that updating one synchronously updates all linked visual filters have implemented links for linked axes either linked and axes However link theory can used any the the graphical attributes color size pattern orientation and shape Cursor cursor can also used display the boundaries one view within another view cursor contains both source view and destination view The source view where the cursor fetches information about the current view axes boundaries The boundaries the source view are drawn line segments the axes the destination view Click the axes area the destination view move the source view changing its visual filter the location clicked 