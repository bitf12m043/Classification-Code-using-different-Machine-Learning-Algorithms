MIME Version Server CERN Date Monday Dec GMT Content Type text html Content Length Last Modified Tuesday Nov GMT General Information the Cornell Computer Science DepartmentGeneral InformationThe Department The Department Computer Science Cornell University which was organized one the oldest departments its kind the country has full time faculty approximately resident graduate students Eng students and graduates about undergraduate majors each year The department typically ranked one the top five the country Cornell University located Ithaca New York city about people the heart the Finger Lakes region Both Cornell and Ithaca offer wide range cultural activities sports and outdoor activities with the pleasures both city and country close hand Academic ProgramsDoctorateMasters EngineeringUndergraduatePh Program During the academic year the department conferred wide variety areas Computer Science The department admits about candidates each year typical program will take about five years complete For more information the program please send email phd cornell eduM Eng Program This one year program designed enhance the professional skills computer scientists provides flexible curriculum that includes six graduate level courses and faculty supervised design project student can specialize number areas including software development programming languages operating systems for networked environments robotics and computer vision scientific computing and artificial intelligence For more information the Eng program please visit the Eng program home page send email meng cornell edu You can browse the Web pages past and proposed Eng projects Undergraduate Programs The Computer Science department both the College Arts and Sciences and the College Engineering Cornell University offers both and degrees with major Computer Science the department graduated and receive information packet applying Cornell University you should call write Cornell University Admissions Thurston Ave Ithaca For more information about the Undergraduate program Cornell please visit the Undergraduate Program Home Page send email ugrad cornell edu Contact ListGeneral Department Department Computer Science Upson Hall Cornell University Ithaca Graduate Programs Graduate Office Department Computer Science Upson Hall Cornell University Ithaca MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Jan GMT Internet Internet Stuff Starting Point Internet Netscape Home Page World Wide Web HTTP NCSA HTTPd NCSA Mosaic Net Assistance including HTML tutorial and Netscape adding function CGI Common Gateway Interface Search Engines CUSI unified WWW search interface Yahoo ALIWEB Lycos Harvest WebCrawler Einet Galaxy InfoSeek NEXOR Public Services WAIS Servers Click Return Home Page Welcome comments luxue utexas edu Date Wed Jan GMT Server NCSA Content type text html Last modified Wed Sep GMT Content length Dissertation AbstractClick here download the postscript version this statement Abstract Dissertation Prospectus device sizes continue diminish the chip gate pin ratio increases reducing chip testability The strong effect testability production cost makes imperative that well integrated into the VLSI design process High level synthesis automates the design process allowing design alternatives explored more efficiently The importance testability necessitates exploration test options during the design process early possible The increasing complexity chip circuitry increases the cost production causing test time rise thereby reducing production throughput For this reason necessary generate designs which deliver high fault coverage with low test time Chip performance critical constraint for any high speed application area such real time digital signal processing which used almost any multi media application The inclusion testability into design often causes severe performance degradation Since testability also important for such designs necessary include testability with minimal impact the chip performance Low test time and reduced performance degradation must achieved simultaneously during the design testable system The chief component test time the degree allowable test concurrency between the testing different parts the chip Two chip components may not tested concurrently the tests which examine the two components share hardware order minimize test time designs must generated which allow tests defined which share hardware little possible Performance reduced when test registers are inserted into delay critical paths the design Test registers must inserted ensure testability while avoiding the delay critical paths the circuit Once testable design has been generated tests must defined for that design which are parallelizable will design system which performs three tasks with the goal test time minimization Definition circuit which testable with high degree test concurrency from behavioral description Insertion test registers into the defined circuit allow the definition parallelizable tests while minimizing the degradation chip performance Definition highly concurrent BIST test plan for the circuit The work presented here will applied wide range Built Self Test BIST methodologies altering the area overhead limitation the designs produced this system can range from fully centralized BIST where all chip components are tested the same test registers partially distributed BIST where the degree test register sharing restricted The cost chip testing has become large fraction chip production cost and the effect test register insertion performance critical for any high speed application The need for integrated system which considers test time and performance reduction due testability the earliest stage design clear Previous efforts increase testability neither integrate the different levels testable circuit design nor directly address the problem minimizing test conflicts and performance degradation computationally efficient way Date Mon Nov GMT Server NCSA Content type text html Last modified Wed Sep GMT Content length TETRA Multi platform Instruction Trace Analyzer TETRA Multi platform Instruction Trace Analyzer What TETRA TETRA tool for evaluating serial program performance under the resource and control constraints fine grain parallel processors TETRA was written Todd Austin austin wisc edu TETRA primary advantage the user its ability quickly generate performance metrics for yet designed architectures All the user needs specify the capabilities the architecture number functional units issue model etc rather than its implementation TETRA has many options parameterize the data control and resource constraints placed the execution graph constructs including control over the execution model memory disambiguation capability control model based either the CFG the CDG branch prediction mechanism fixed taken bit BTB functional unit supply and latencies window size total reservation stations renaming capability register memory When constructing execution graphs with limited resources TETRA provides five user selectable schedulers varying cost performance and capability HISTORY scheduler simulates line the capability off line LIST scheduler LIST BEST FIT scheduler LIST FIRST FIT scheduler ROUND ROBIN scheduler RANDOM scheduler addition TETRA provides number options describing the analyses performed the constructed execution graph including generation parallelism profiles value sharing distributions storage demand profiles value lifetime distributions disassembled parallel instruction traces The software very modular allowing easily used test bed for new ideas TETRA currently only targeted for MIPS and SPARC based systems but porting other architectures supported QPT another capable tracer requires very little coding just few constants and instruction dependency decoder There are two papers describing the development and application TETRA the references are the manual page and also available the Web page Even you not interested the amount parallelism serial programs you may still find TETRA useful you are planning trace analysis especially with QPT Included the source package are useful goodies including instruction decoders disassemblers and dependency analyzers with machine independent interfaces for the MIPS and SPARC architectures QPT trace generator QPT trace decoder GNUPLOT compatible distribution generator and portable fixed size heap allocator System requirements You need the following install TETRA SPARC MIPS based unix system ANSI compiler preferably GNU GCC QPT program profiler and tracing system written James Larus GNU BFD library built for the host architecture GNU LIBERTY library TETRA has been tested the following configurations SPARC SunOS GNU GCC primary testing configuration SPARC SunOS Sun ACC MIPS Ultrix GNU GCC MIPS Ultrix MIPS version How get TETRA The source release for TETRA version available via anonymous ftp ftp wisc edu the file sohi Code tetra tar Clicking the highlighted file name will fetch the file your machine How can learn more about TETRA There manual page included the source distribution which includes installation and user instructions addition there are two papers describing the implementation and application TETRA TETRA Evaluation Serial Program Performance Fine Grain Parallel Processors Todd Austin and Gurindar Sohi University Wisconsin Madison Technical Report July Dynamic Dependency Analysis Ordinary Programs Todd Austin and Gurindar Sohi Proceedings the Annual International Symposium Computer Architecture May Who made TETRA TETRA the result research conducted Todd Austin and Guri Sohi the Wisconsin Multiscalar Group the University Wisconsin Madison TETRA was written Todd Austin austin wisc edu Portions the code were written and copyrighted Alain 