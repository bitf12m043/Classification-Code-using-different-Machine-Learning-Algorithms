MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Monday Oct GMT ResumeVineet Ahujaahuja cornell eduCurrent Address Hasbrouck Apartments Ithaca Permanent Address floor Botanic Terrace Conduit Road Hong Kong Objective obtain permanent position software engineer EducationCornell University Ithaca Master Engineering Computer Science GPA nbsp December Pune Institute Computer Technology Pune India Bachelor Engineering Computer Engineering Graduated with Distinction nbsp August Relevant Coursework Engineering Computer Networks Automata and Computability Theory Software Design for High Performance Architectures High Performance Computer Systems Multimedia Systems High Capacity Information Networks Databases and Management Systems Computer Organization Software Engineering Data Structures Artificial Intelligence Computer Graphics Operating Systems Projects Stable Storage Server nbsp Spring Design and implementation distributed stable storage server for electronic commerce system Parallel Ray Tracing nbsp Spring Parallelisation public domain ray tracer RayLab Compositional using the master slave method Secure Video Transmission nbsp Fall Researched light weight method for secure transmission video streams based the RSA encryption standard Handwritten Character Recognition nbsp June June package for recognition handwritten English characters and form parsing with automated database entry written and Visual Basic under Windows Financial Accounting nbsp Fall financial accounting package for managing account books and preparing final accounts written COBOL ResearchEfficient Computation Parallel FFTs Researched methods decrease communication overhead and speed computation the FFT distributed memory parallel machines Parallel Matrix Vector Multiplication nbsp Fall Fall Design and implementation optimized algorithms for parallel matrix vector multiplication distributed memort parallel machines Experience Summer Intern nbsp June August Thinking Machines Corporation Design and development GlobalWorks Run Time Environment Solaris extended for clusters workstations Computer Skills Languages Libraries nbsp Pascal COBOL Assembly HTML OWL MPI Active Messages Platforms DOS Windows Unix Windows Software Office FrameMaker Matlab Awards and Prizes First runners project competition IEEE Concepts for Handwritten Character Recognition Activities Founder club Pune Institute Computer Technology MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Monday Dec GMT The CHILLIN Inductive Logic Programming System CHILLIN CHILLIN ILP system which integrates top down search FOIL bottom search GOLEM and predicate invention CHAMP has been used the induction algorithm underlying the CHILL natural language parser learning system The CHILLIN Prolog code available via anonymous ftp See the INDEX file here for details Pointers papers CHILLIN and CHILL can found our ILP research page Below the standard reference click the open book image Combining Top Down And Bottom Techniques Inductive Logic Programming John Zelle Raymond Mooney and Joshua Konvisser Proceedings the Eleventh International Workshop Machine Learning Rutgers July This paper describes new method for inducing logic programs from examples which attempts integrate the best aspects existing ILP methods into single coherent framework particular combines bottom method similar GOLEM with top down method similar FOIL also includes method for predicate invention similar CHAMP and elegant solution the noisy oracle problem which allows the system learn recursive programs without requiring complete set positive examples Systematic experimental comparisons both GOLEM and FOIL range problems are used clearly demonstrate the advantages the approach estlin utexas edu Date Tue Jan GMT Server NCSA Last modified Tue Sep GMT Content type text html Content length Research Multicast Networking Research Multicast Networking The recent success multicast applications such Internet teleconferencing distributed interactive simulation and data dissemination applications illustrate the tremendous potential applications built upon wide area multicast communication services Our ongoing research focussed two crucial areas multicast networks reliable multicast protocols and call admission multicast networks Reliable Multicast Protocols While some multicast applications such video and voice not require reliable data transfer others such shared whiteboards and data dissemination The requirement reliable data transfer for this last set applications poses difficult challenge network designers how design and implement reliable multicast protocol that can handle participants are currently pursuing several related efforts the area reliable multicast protocols critical issue for multicast applications and the higher layer protocols that support them the manner which packet losses occur within the multicast network Thus one goal our recent work Yajnik has been examine the spatial and temporal correlation packet loss among participants multicast session Informally spatially correlated loss mean the loss lack reception the same packet many sites temporally correlated loss mean the loss consecutive packets given receiver Yajnik present and analyze packet loss data collected simultaneously hosts geographically distinct locations Europe and the These hosts are connected via the Multicast Backbone MBone network Our results show that For most the traces the loss the backbone links the MBone multicast network observed small less compared the average loss seen receiver However due occasional outages lasting from few seconds few minutes some backbone links the spatially correlated loss between receivers does few datasets There significant amount burst loss consecutive losses each site One more extremely long loss bursts lasting from few seconds minutes around consecutive packets occur almost every trace Most the loss bursts consist isolated single losses but the few very long loss bursts contribute heavily the total packet loss Some receivers see periodic packet loss lasting for approximately sec consecutive packets and occurring sec intervals second effort the area reliable multicast Towsley examines two different approaches providing reliable scalable multicast communication The sender initiated approach places the responsibility for providing reliable multicast the sender which maintains state information all receivers which multicasting This accomplished having receivers return positive acknowledgments ACKs for every correctly received packet and having the sender use timers detect potential packet losses The alternate approach receiver initiated approach shifts most the responsibility for reliable data delivery the receivers Each receiver responsible for detecting lost packets and informing the sender via negative acknowledgments NAKs when requires the retransmission packet the case application consisting single sender transmitting reliably many receivers referred one many application observe through simple analyses that simple receiver initiated protocol which requires receivers return negative acknowledgments NAKs the sender over point point channels provides substantially better performance terms the maximum supportable throughput successfully transmitted messages than sender initiated protocol Further substantial improvement obtained the multicasting NAKs coupled with the introduction random delays prior the transmission NAK the case application where all participants act both senders and receivers referred many many application simple analyses illustrate that the receiver initiated protocol which requires receivers return negative acknowledgments NAKs the sender over point point channels almost doubles throughput over sender initiated counterpart However unlike the one many case the multicasting NAKs the many many scenario does not fare well leading only small increase throughput over the sender initiated counterpart more recent work ours done jointly with Professor Miki Yamamoto Osaka University builds upon this previous work presenting delay analysis the three generic sender and receiver initiated protocols identified our earlier work Our results indicate that protocol has uniformly better delay behavior than the others low packet arrival rates and moderate high loss rates find that the ACK based protocol has significantly smaller delay than either the NAK based approaches also find that the depending the network loss rates either two NAK based protocols once which delivers NAKs point point the sender and one which multicast NAKs receivers has better performance high arrival rates addition these research efforts also have ongoing work the areas multicast flow control and the development and analysis approachs towards relaible multicast that use multiple multicast groups for error recovery purposes Call Admission Multicast Networks This part still under construction References Yajnik Kurose Towsley Packet Loss Correlation the MBone Multicast Network appear IEEE Global Internet Conf London Nov postscript Towsley Kurose Pingali Comparison Sender Initiated and Receiver Initiated Reliable Multicast Protocols appear IEEE Journal Selected Areas Communications postscript kurose gaia umass edu Tue Sep EDT Date Tue Nov GMT Server NCSA Content type text html Last modified Sat Oct GMT Content length Paper Reading List Paper Reading List Return home page Memory Management Peter Denning The Working Set Model Program Behavior Communications the ACM May Richard Carr John Hennessy WSCLOCK Simple and Effective Algorithm for Virtual Memory Management Proceedings the SOSP Operating Systems Review December Ozalp Babaoglu William Joy Converting Swap Based System Paging Architecture Lacking Page Reference Bits Proceedings the SOSP Operating Systems Review December Michael Young Avadis Tevanian Richard Rashid David Golub Jeffrey Eppinger Jonathan Chew William Bolosky David Black Robert Baron The Duality Memory and Communication the Implementation Multiprocessor Operating System Proceedings the SOSP Operating Systems Review November Synchronization and Communication Gregory Andrews Fred Schneider Concepts and Notations for Concurrent Programming ACM Computing Surveys March Butler Lampson David Redell Experiences with Processes and Monitors Mesa Communications the ACM February Hugh Lauer Roger Needham the Duality Operating System Structures Operating Systems Review April Protection and Security Anita Jones William Wulf Towards the Design Secure Systems Software Practice and Experience Frederick Gramp Robert Morris UNIX Operating System Security Bell Laboratories Technical Journal October Gerald Popek Charles Kline Encryption and Secure Computer Networks Computing Surveys December Steiner Neuman Schiller Kerberos Authentication Service for Open Network Systems USENIX Dallas February Kernels David Redell Yogen Dalal Thomas Horsley Hugh Lauer William Lynch Paul McJones Hal Murray Stephen Purcell Pilot Operating System for Personal Computer Communications the ACM February Barton Miller David Presotto Michael Powell DEMOS The Development Distributed Operating System Software Practice Experience April David Cheriton Willy Zwaenepoel The Distributed Kernel and its Performance for Diskless Workstations Proceedings the SOSP Operating Systems Review November Brian Marsh Michael Scott Thomas LeBlanc Evangelos Markatos First Class User Level Threads Proceedings the SOSP Operating Systems Review October Henry Massalin Carlton Theads and Input Output the Synthesis Kernel Proceedings the SOSP Operating Systems Review December Graham Hamilton Panos Kougiouris The Spring Nucleus Microkernel for Objects Summer USENIX Conference Cincinatti June File Systems McKusick Joy Leffler Fabry Fast File System for UNIX ACM Trans Computer Systems August Bruce Walker Gerald Popek Robert English Charles Kline Greg Thiel The LOCUS Distributed Operating System Proceedings the SOSP Operating Systems Review November David Gifford Robert Needham Michael Schroeder The Cedar File System Communications the ACM March Mendel Rosenblum John Ousterhout The Design and Implementation Log Structured File System Proceedings the SOSP Operating Systems Review October Russel Sandberg David Goldberg Steve Kleiman Dan Walsh Bob Lyon Design and Implementation the Sun Network File Systems Sun Microsystems Inc John Howard Michael Kazar Sherri Menees David Nichols Satyanarayanan Robert Sidebotham Michael West Scale and Performance Distributed File System ACM Transactions Computer Systems February James Kistler Satyanarayanan Disconnected Operation the Coda File System Proceedings the SOSP Operating Systems Review October Distributed Systems Andrew Birrell Roy Levin Roger Needham Michael Schroeder Grapevine Exercise Distributed Computing Communications the ACM April Andrew Birrell Bruce Jay Nelson Implementing Remote Procedure Calls ACM Transactions Computer Systems February Rob Pike David Presotto Ken Thompson Howard Trickey Plan from Bell Labs Proceedings the USENIX Conference Experience and Systems Reports Hugh Lauer Observations the Development Operating System Proceedings the SOSP Operating Systems Review December Butler Lampson Hints for Computer System Design Proceedings the SOSP Operating System Review October Reliability and Recovery David Gifford Weighted Voting for Replicated Data Proceedings the SOSP Operating Systems Review Jacques Louis Lions Lennart Lebeck Jean Luc Fauquembergue Gilles Kahn Wolfgang Kubbat Stefan Levedag Leonardo Mazzini Didier Merle Thomson Colin Halloran ARIANE Flight Failure Report the Inquiry Board European Space Agency Report Paris July URL http www esrin esa htdocs tidc Press Press ariane rep html http www wisc edu bart ariane rep html Bruce Walker Richard Kemmerer Gerald Popek Specification and Verification the UCLA Unix Security Kernel Communications the ACM February Technical Writing Donald Knuth Notes Technical Writing Unpublished article Desiree Thalley Know how write the right way Wisconsin State Journal Sunday November Roy Levin David Redell Evaluation the SOSP Submissions Operating Systems Review July Last modified Fri Oct CDT bart 