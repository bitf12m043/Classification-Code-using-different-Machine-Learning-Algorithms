MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Tuesday Jun GMT CORNELLopoly Home Page CORNELLopoly MULVA Inc Jeffrey Moorejmm William Leewwlee Scott Dawsonspdawson Our work longer beta here the alpha release Here our final presentations slides along with screen shot the game And just what this madness have implemented online version the popular Parker Brother board game Monopoly adapted reflect the trends and geography the Cornell community Our implementation has obvious variations from the traditional version order illustrate many the concepts inherent the distributed systems paradigm For more information refer the Project Design Specification document The game played over the Internet requiring Java interpreter running either Solaris WindowsNT not graphically advanced the commercial CDROM version any stretch the imagination However enhancements such real time updates fluctuating interest rates and inflation heightens the excitement game play exposition the modified rules outlines these enhancements our intent illustrate distributed programming concepts way this entertaining media and what learn from this new language Object Oriented Design and Distributed Systems are the three areas computer science that exploited for this project utilized object oriented design skills for the data structures the program also see how theory meets practice practical distributed system and how does tie with Distributed Systems This game server less All player correspondence done via message passing learned concepts various broadcast algorithms support fault tolerance and methods mimicking real time behavior distributed system and how measure success Unlike Dean Witter don measure success one invester time two more players play completing the game according the rules then are business contributing Cornellopoly the expanding population Java applications the Internet and finally how are progressing Week Progress ReportWeek Progress ReportWeek Progress ReportWeek Progress ReportWeek Beta ReleaseMULVA Name Jerry Seinfeld girlfriend which rhymes with part the female anatomy Courtesy the Junior Mint episode Seinfeld Visitors since March MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Feb GMT Robot PicturesSpotRoverRoboCacingRoboKreta BesarWYL Date Tue Jan GMT Server NCSA Last modified Sun Sep GMT Content type text html Content length Java the Java the few people have attempted put Java their The following rough outline the steps necessary move the HMCSupport library and create working CLASSPATH once you have installed the ftp the directories and all their files from home osiris java files and store them directories java lib Acme and java lib HMC Note that you use ftp then entire directories can ftp otherwise individual files would need ftp Look The Whole Internet for discussion ways ftp entire directories Add the line set classpath java lib classes zip java lib the autoexec bat file Note the classes zip stays ziped part the jdk Reboot Note you can send mail system hmc edu the general mail list HMC for any related questions and issues Last modified September mike hmc edu Date Mon Nov GMT Server NCSA Content type text html Last modified Mon Oct GMT Content length Program Program The Hailstone SeriesDue Date This final assignment due Thursday October will accepted Friday October until but later This assignment tricky and you may want get started soon possible IntroductionThe January issue Scientific American contains article describing interesting sequence numbers known the Hailstone Series The series formed like this Pick positive integer odd triple the number and add one even divide the number two Although the numbers bob and down eventually they reach repeating ground state This has been proven for every number about Problem StatementYou will write program generate the Hailstone Series for number between and chosen the user Your program will answer the following questions for each number entered the user How long the series What the largest number the series What the mean average the series More informationFor the first question you should stop counting once the number reached for example entered the starting place then the answer question including the initial input the fourth number the sequence entered then the answer since the sequence simply Question simply asks you keep track the maximum value the sequence For question using the start number the average Note that this not integer Program Design Hints Your main program should work follows should prompt the user enter number quit between and the user enters number outside this range the program MUST INDICATE ERROR AND PROMPT THE USER AGAIN FOR ANOTHER VALUE THE CORRECT RANGE the user enters valid number your program must display the hailstone series the length the series the maximum value attained within the series and the mean value all elements the series Then must prompt the user for the next number This process must until the user enters indicating that would like quit For the first part the program you will need two nested loops The outer loop will repeatedly ask the user for new initial values The inner loop will control the generation the Hailstone Series itself You need devise way terminate the outer loop having the user input will indicate they wish quit long the user enters numbers the valid range the program must print the the hailstones series the length series the maximum value attained the series and the mean value all elements the series You will probably find useful define function that computes the series the length the series and the mean value the elements the series You must use arrays store the elements the hailstone series Your program must contain several functions solve this problem You will receive almost credit you not use functions You might find helpful write function that actually takes number input and returns and the hailstone series array along with the length the series hint Look the function prototype for the function generateHailstoneSeries the skeleton below You have good opportunity write several small functions simple tasks like computing the maximum value the hailstone series array computing the mean Your final program will probably contain least functions Finally have included bare skeleton program get you started the job sample run the program included below include iostream const int TRUE const int FALSE const int MAX LEN Function prototypes some functions you might want write void generateHailstoneSeries int number int series int length int even int prototype already written function int getMaxValue const int int length double computeAverage const int int length void main Function that determines number even int even int return FALSE else return TRUE Skeleton definitions additional functions WRITTEN YOU Your test cases You will required turn the screen output generated from program run which the user looks the Hailstone Series least three numbers from You must include the cases where the user incorrectly type number beyond the specified range Handing the Assignment Please turn both electronic copy your source code cpp and your executable program exe will testing each program with test cases not receive electronic copy your source code and executable you will lose numerous points case your program does not compile run correctly you should turn what you have get some credit your program fails test cases you will receive low score printed copy source code printed copy your program run Items and must stapled together Sample Run Enter number between and quit ERROR ENTER NUMBER BETWEEN and quit ERROR ENTER NUMBER BETWEEN and quit The series The length the series The maximum value attained the series The mean value Enter number between and quit The series The length the series The maximum value attained the series The mean value Enter number between and quit The series The length the series The maximum value attained the series The mean value Enter number between and quit ERROR ENTER NUMBER BETWEEN and quit The series The length the series The maximum value attained the series The mean value Enter number between and quit GradingNote that this program like program worth your grade CORRECT OUTPUT Correctly turned output Correctly handles test cases USER INTERFACE Aesthetic display program output IMPLEMENTATION Correct use loops and arrays Correct use functions parameter passing return calling Smart use functions avoiding redundancy your code DOCUMENTATION Program description Meaningful variable names and useful section comments 