MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Monday Jan GMT Jon hotlistSelections from hotlistPoliticsWelcome the White HouseNational Performance Review Home PageGovernment PoliticsCentral Intelligence Agency Home PageThe Department the Treasury Internal Revenue ServiceU Constitution Table ArticlesCommercialCD ConnectionCommercial Services the NetMother JonesCyberDeals Ordering InfoInternet Shopping NetworkPERIPHERAL PROGlobal Electronic Marketing ServiceInternet MallReferenceReferenceOn line Reference WorksIndex Multimedia Information SourcesThe Jargon File Hypertext Webster InterfaceComputingLinux Documentation ProjectThe Python Programming LanguageLeague for Programming FreedomTcl ResourcesThe tcsh man pageMiscellaneousXerox PARC PubWeb ServerWelcome Danfuzz WorldWorld Wide Web SportsCYBERSIGHTCarnegie Mellon UniversityCALIFORNIABanned Books lineNetsurfer Digest Home PageThe Beer Page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Wednesday Aug GMT net Course Description The MAIN goals this course are research CURRENT issues and their protocols the dynamic environment the Internet and study various implementation strategies building network clients and servers The SECONDARY goals are develop your skills working teams writing research paper giving short oral presentation working large project including some existing code participating class and learning effectively use the Web educational resource oppposed entertainment Date Wed Jan GMT Server NCSA Last modified Fri Dec GMT Content type text html Content length Scott Smith Research Interests Scott Smith Research Interests There has been large body important foundational research done the area programming language semantics goal the practical application this work full featured programming languages languages that have features such memories object orientedness rich notions type exceptions and concurrency Such theory should include its products rich theory equivalence programs well logics programs There are three reasons why this line research important First and most obviously allows full featured languages unambiguously specified and remove flaws from their design not believe will ever able prove all programs correct but certainly should able prove all language designs sound Second semantic approach can effectively used clean inconsistencies language design and provide compiler writers and programmers with concrete notions program equivalence and logical assertions about programs clarify their activities Lastly and the topic that interests most now novel ideas language design and analysis can effectively pursued this framework because possible carefully develop the ideas for extremely small languages and scale them something that not possible working compiler must always objective Some the big challenges remaining beyond scaling existing results include modelling dynamic systems those which dynamically allocate new memory other objects open systems system where not all the computation occurring locally and object oriented systems Active Research Areas Constrained Types for Object Oriented Programming Languages main research interest now the area constrained typing Constrained types are particularly interesting because They naturally generalize Hindley Milner type inference form based subtyping instead type equality The types inferred are very expressive they appropriately type binary methods object oriented programming languages Our OOPSLA paper introduces constrained types with some examples for the full technical details see our MFPS paper More details this work may found the Hopkins Objects Group home page Distributed Object Oriented Programming Another project have been involved with concerns distributed concurrent object oriented computation This project has been performed collaboration with Gul Agha Ian Mason and Carolyn Talcott Here are few features what have accomplished thus far rigorous reworking the Actor model computation Operational semantics executions given Only fair executions considered for unfair executions never arise practice Observational equivalence and methods for proving observational equivalence the presence fairness are defined Explicit dynamic modeling external agents and their interactions The latter two are believe the key contributions little current research addresses these issues Here paper this topic Less Active Research Areas Semantics for Typed Object Oriented Programming Developing sound semantics for typed notions inheritence long standing research problem believe state critical component OOP and thus directly model objects with state Most the current research typing OOP has been for purely functional languages Although this gives good first approximation the problem enough progress has been made this arena that time work directly over language with state Our paper Lisp and Symbolic Computation represents our final statement this topic Towards Complete Operational Semantics The aim this project accomplish degree unification between operational and denotational approaches programming language semantics recasting classic denotational concepts inside purely operational framework These concepts include notions ordering directed set complete partial order monotonicity continuity least fixed point principle finite element omega algebraicity and fixed point induction The purpose this approach give full faithful semantics languages for which denotational semantics fails date this approach has been developed for functional languages and preliminary extensions languages with memories have shown possibilities The problem finite elements for languages with memories currently open however Here paper this topic Asynchronous Digital Circuit Synthesis collaboration with Amy Zwarico have defined formal language for specifying asynchronous digital circuits that based Hoare CSP and verified translation these circuits hardware devices collections gates The translation was proven correct defining formal operational notion equivalence and incrementally translating the specification the circuit small steps that preserve equivalence Numerous informal arguments correctness similar synthesis methods exist but this work the first complete rigorous proof correctness such method Some other features this work include the following The translation defined set rewrite rules broken into five phases new notion translational equivalence defined state how translation preserves meaning when the language itself changing Only fair executions considered for gates are inherently fair This some the first work circuit theory consider fairness Here paper this topic Date Mon Nov GMT Server NCSA Content type text html Last modified Tue Sep GMT Content length COURSE SYLLABUS SECTION COURSE SYLLABUS SECTION Date Topics Notes Sept Intro COurse and Lab Sftwr Office Hours Prog Sept Office Hours Rosh Hashanah Prog Sept Prog Sept Debugger Introduced Yom Kippur Prog Sept Oct Debugger Functions Oct REVIEW FOR EXAM Oct Prog Oct Prog Oct Nov Prog Advanced Debugging Nov Prog Nov REVIEW FOR EXAM Nov Prog Nov Borland Projects Thanksgiving Dec Prog Hanukkah Dec REVIEW FOR FINAL EXAM Dec Finals Week FINAL EXAM Tue Dec 