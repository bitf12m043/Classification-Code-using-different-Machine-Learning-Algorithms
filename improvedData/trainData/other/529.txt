Date Sun Nov GMT Server NCSA Content type text html Last modified Fri Oct GMT Content length Forefronts Teaching Computer Graphics with article Cornell Theory Center This article originally appeared Cornell Theory Center Forefronts newsletter Teaching Computer Graphics and Scientific Visualization using the Dataflow Block Diagram Language DataExplorer Bruce Land Visualization Project Leader Cornell Theory Center Abstract The scientific visualization language DataExplorer from IBM has been found useful undergraduate education vehicle for teaching computer graphics introductory level Although designed for scientific data visualization can used construct student lab exercises computer graphics has been used for two years environment which emphasizes graphics manipulations rotation perspective while not requiring the programming overhead traditional computer languages Introduction Computer graphics topic that requires mathematical programming and artistic skills among others The content the computer graphics fundamentals course Cornell focuses mathematical skills but must include programming illuminate the math The course covers the following topics Construction surfaces explicit polygon lists parametric operations and hierarchical grouping simple objects form complex surfaces Modification objects geometric transforms order position them space and animate them Viewing group objects including clipping window and perspective parallel projection into screen space Rendering polygonal and parametric surfaces hidden surface removal shading lighting anti aliasing well surface property modifications such texture bump mapping Use global illumination models render interactions between surfaces Modeling scientific data for scientific visualization The programming aspect the course attempts give students practical experience with many the techniques taught lecture Lab exercises written cover nine computer graphics topics These exercises include construction polyhedra from vertex and face descriptions construction parametric surfaces including quadric surfaces ellipsoids figures rotation and tensor product surfaces bilinear hierarchical modeling and animation complex objects writing perspective viewing transforms comparing lighting techniques with wire frame flat shaded Gouraud shaded objects illuminated with ambient and point illumination producing variations the standard Phong lighting model including spotlights and bump mapping surfaces image techniques including production texture mapped surfaces image filtering and anti aliasing visualization scalar field heights landscape and vector field flow field and design project produce animation based all the techniques learned All exercises have example programs introduce the concepts and descriptions the manipulations required the student The first two exercises deal with construction objects and are introduction the first exercise students are introduced the notion polyhedron construction with vertex and face lists They are expected design couple polyhedra and perform simple animation one object They experiment with determining the normals the surface The second exercise introduces parametric surfaces Students design quadric surfaces figures rotation and bilinear patches After this lab they can design quite complex single objects Exercise three teaches them how hierarchically combine objects and how concatenate transforms make complex motion They design either wagon that rolls forward stops then turns its front axle and wheels helicopter with main and tail rotors that starts the rotors takes off and flies away prop aircraft that behaves like the helicopter When done correctly the exercise shows them how design parts complicated object props wheels move them and duplicate them for use several times the final construction exercise four students turn off perspective and write their own pseudo perspective transform for simple scene This introduces the use homogeneous coordinates and matrix manipulation The calculation complicated enough introduce the various structuring aids which make the code more readable Exercises five and six explore lighting Students first design landscape lit two simulated suns white dwarf and red giant two different orbits Then they turn off the default lighting model Phong illumination with Gouraud shading and design their own lighting They code lighting model based light positions viewer position and object normals and extend the model produce spotlight depth cueing based intensity Exercise seven introduces image manipulation and filtering Students are asked anti alias simple scene using postfiltering and determine best scheme based available filters and system resource memory CPU time They then edge enhance image Finally they texture map image onto quadric surface parametrically modifying the image pixel coordinates image has extent world space with each pixel having position Exercise eight introduces scientific visualization having the students make judgments based graphical representation fields The first part this exercise identify the geographic location landscape height field then enhance the slope and exposure modifying the program The second part identify the sources and sinks vector flow field They are shown how draw flow lines vector arrow icons and isosurfaces speed They then combine these techniques find the sources and sinks The final design project produce animation hierarchically modeled objects Typical projects have included robot that stands out ocean turns and fires projectile tower the far shore seagull that flies down and plucks fish from the water castle with waving flags and drawbridge car driving through town with rotating signs and street lights human walking simulation the deformation tennis racket strings during ball impact and morphing between faculty face images The complexity and sophistication many the projects can amazing Programming Language the introductory level lack programming tools often interferes with learning graphics operations Typically graphical operations are either provided large library routines that students must learn derive from relatively simple programming projects that students must code from scratch The block diagram interface can customized make visual subroutine library often used graphics routines Students can construct very complex scenes including camera and lighting control short time They can also open various visual subroutines and modify extend them The graphical nature the user interface and its easy extensibility make possible for students rapidly prototype graphics operation see the effects and modify the program The structure that allows such easy interaction described next block diagram point and click programming language designed for producing high quality images based data which may represent objects walls stars fields density electric field can easily extended construct the objects and perform the operations needed for introductory graphics class The block diagram program built modules and wires connecting them module primitive program function that appears the screen block with input and output tabs Wires are dragged with the mouse from outputs inputs group modules can hidden inside another module form user macro System supplied modules include vector and scalar field rendering and geometric operations rotate translate addition and plotting There direct programming support for producing custom MOTIF control panels The Theory Center has added modules make parametric surfaces texture maps bumpmaps spotlights and variety other graphically oriented functions Students are expected design visual programs perform some particular assigned task They are expected produce working programs that are readable and documented visual language has different style organization for readability than text based code but for programs bigger than one screen wide organization less important Any module can have comment field and the Theory Center encourages comment all but the most obvious modules Programs tend build object some kind house defining its parts combining them and then moving them some position Such section code tends small perhaps modules but cryptic unless the designer minimally labels the output the code block supports labeling wires document what flowing through them many cases small code block can made into macro which then appears another module with user chosen name some point objects have combined make higher order structures Careful arrangement the hierarchical structure which all visual helps during program tracing and debugging have found that with all programming providing few examples and programming manual effective way introducing students the subject matter Conclusions allows students concentrate learning the graphics content the course rather than investigating the details programming environment Students can generate code make images fraction the time required language environment encouraging experimentation the time writing course evaluations are not yet available from students but will when this article appears Forefronts Preliminary student feedback indicates satisfaction with vehicle for learning graphics The acquired background computer graphics using already being put use scientific visualization students incorporate their class skills into research projects across campus This year students the course were mostly upper division computer science and engineering majors should possible construct freshman level course using which introduces computer graphics and visualization appropriate mathematical level and whets their appetites for further instruction downside use the classroom that requires graphics workstation such IRIS Indigo SPARC station workstation RISC System not Mac which the hardware most readily available college and university students Hopefully the trend cheaper workstations and more powerful personal computers will continue open new possibilities Designing complex scenes easy enough that many projects put large demand the workstations for CPU and memory During the final project many the students ran out memory while using MByte machines most cases scaling down the resolution texture maps solved the large size but few cases the objects and motions became too complex The lab exercise software plus student lab instructions are available line from anonymous ftp site Cornell University info cornell edu Contact Bruce Land bruce cornell edu for more information MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Thursday Dec GMT Roberto Bayardo Papers Journal Articles Conference Papers Refereed Workshop Papers Technical Reports Journal Articles Roberto Bayardo and Daniel Miranker optimal backtrack algorithm for tree structured constraint satisfaction problems Artificial Intelligence Presents top down algorithm for solving tree structured constraint satisfaction problems linear time and evaluates its average case performance empirically Not available line Conference Papers Roberto Bayardo and Daniel Miranker Processing Queries for First Few Answers Proc the Fifth Int Conf Information and Knowledge Management Rockville Maryland Describes probabalistic method for predicting costs first answer query plans under modified pipelined join execution model cikm Compressed PostScript Roberto Bayardo and Robert Schrag Using CSP look back techniques solve exceptionally hard SAT instances Proc the Second Int Conf Principles and Practice Constraint Programming Lecture Notes Computer Science Springer CSP look back techniques CBJ learning not widely used existing SAT algorithms turn out indispensable for solving instances which are exceptionally hard new procedure define generates such instances consistently Compressed PostScript Procedures used this paper are available the toolkit linked below Click here for brief description its contents ehi tool tar Tar and compressed SPARC executables Roberto Bayardo and Daniel Miranker complexity analysis space bounded learning algorithms for the constraint satisfaction problem Proc the National Conf Artificial Intelligence Analyzes the effects space bounded learning constraint recording schemes the runtime complexity backtrack search aaai Compressed PostScript Roberto Bayardo and Daniel Miranker the space time trade off solving constraint satisfaction problems Proc the Int Joint Conf Artificial Intelligence From the perspective achieving tractable constraint satisfaction restricting constraint graph structure extensive use space may limited benefit ijcai Compressed PostScript Browne Emerson Gouda Miranker Mok Bayardo Chodrow Gadbois Haddix Hetherington Obermeyer Tsou Wang and Wang new approach modularity rule based programming Proc the Sixth Int Conf Tools with Artificial Intelligence IEEE Press Describes purely declarative method for introducing modularity into forward chaining rule based languages and its embodiment the syntax the Venus rule language ictai Compressed PostScript Refereed Workshop Papers Miranker Roberto Bayardo and Samoladas Query Evaluation Constraint Search Overview Early Results Proc the Workshop Constraints and Databases the Second Int Conf Principles and Practice Constraint Programming Lecture Notes Computer Science volume determined Springer Overview various results applying constraint processing techniques query processing lncs Compressed PostScript Technical Reports Bayardo Bohrer Brice Cichocki Fowler Helal Kashyap Ksiezyk Martin Nodine Rashid Rusinkiewicz Shea Unnikrishnan Unruh and Woelk Infosleuth Semantic Integration Information Open and Dynamic Environments Technical Report MCC INSL Microelectronics and Computer Technology Corporation Describes agent based architecture for integrating heterogeneous information bases ever changing network information sources PostScript available through the InfoSleuth Project Roberto Bayardo Dealing with Duplicate Tuples Multi Join Query Processing Technical Report University Texas Austin Dept Computer Sciences May Presents and evaluates several schemes for handling duplicate tuple elimination during optimization and execution large select project join queries Compressed PostScript Roberto Bayardo Enhancing Query Plans for Many Way Joins Technical Report University Texas Austin Dept Computer Sciences March Proposes method for annotating query plans with additional operators order efficiently produce the query result the form directionally reduced acyclic database Compressed PostScript Back home page Date Tue Jan GMT Server Apache Content type text html Content length Last modified Tue Sep GMT CPSC Fall Jianer ChenCPSC Analysis Algorithms Fall Instructor Professor Jianer Chen Telephon Fax Email chen tamu edu Class hours Tuesday and Thursday Office hours Tuesday and Thursday course description lecture notes homework assignments Back the Computer Science Home Page 