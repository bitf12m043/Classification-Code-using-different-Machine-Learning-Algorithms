MIME Version Server CERN Date Sunday Nov GMT Content Type text html Content Length Last Modified Friday Apr GMT Drop publishing with the World Wide Web Drop publishing with the World Wide WebJim Davis and Carl Lagoze Xerox Inc and Cornell UniversityAbstract The goal drop publishing simplify digital publishing over the Internet would like digital publishing non commercial matter technical reports course notes brochures easy sending email now but with the virtues archival storage and easy searching that associate with electronic libraries propose protocol Dienst allow communication between clients and document servers encoding object oriented messages within URL preliminary version this protocol now runs eight sites and describe some its features Next present tools for automating the maintenance document collections Finally discuss the problems had with the Web stands hoping motivate changes that would improve performance digital library systems such ours library with limits However one may sing the praises those who their virtue either defend increase the glory their country their actions only affect worldly prosperity and within narrow limits but Aldus building library which has other limits than the world itself Desiderius Erasmus wrote these words praise his friend Aldus book publisher the century More than years later digital publishing may finally enable fulfill this vision providing universal access all the world information What the way The existing technologies WWW gopher and even anonymous FTP make reproduction and transmission fairly fast and cheap but little nothing help writers write readers find read documents our view the problem that they provide too little structure the document collection All them present basically the same abstraction namely hierarchy files but nothing help the user locate file within hierarchy Every site different Some group reports year others project name but even every site the Internet organized its hierarchy identically would not enough because every site also has its own conventions for naming files indicating data formats and making searchable indices writer who wishes contribute has basically the same problem easy copy file into anonymous FTP area but hard make sure that indexed properly considerate writer might want provide the same document several formats increase the chances accessibility but this nuisance claim what needed new higher level protocol that hides the underlying details and the underlying tools simply library management This paper presents our first steps towards the universal library describe protocol for universal access and the server that implements For those familiar with our server this paper describe not the currently running protocol but rather the one have submitted Internet Draft DIENSTPROT which corrects number design flaws the working version regret any confusion this causes present number tools that integrate with our server make publishing document line relatively easy also discuss the steps took bring large existing collection online from paper Finally since our protocol based the World Wide Web also describe some the problems observed using the hope that others this conference will have solutions can adopt Our focus non commercial publishing requires explanation realize that some content providers will not place their intellectual property the net until clear definitions legal rights and mechanisms for payment and protection are place have nothing contribute these areas Nevertheless there are number providers such universities corporate internal groups for whom these issues are less pressing and believe that can thus make some useful contribution without working the additional issues raised economics Dienst provides uniform protocol for document access Dienst protocol for search retrieval and display documents Dienst models the digital library flat set documents each which has unique name can many formats TIFF GIF Postscript and consists set named parts Dienst supports message passing interface this document model Messages may addressed every document server particular server one document particular part document message encoded into the path portion URL and contains the name the message the recipient and the arguments any message may sent any convenient Dienst server the nearest for example which will execute locally forward appropriate Dienst appears single virtual document collection and hides the details the server distribution Note that the actual implementation does not use object oriented language use message passing only convenient conceptual model Each document Dienst has unique identifier which names each document location independent manner This identifier called DocID serves exactly the same role URN and when URNs are fully specified will adopt them DocId has three components naming convention publisher and number ensure that each DocID unique each component rather the institution that issues each component guarantees that the next component unique thus each naming convention controls namespace publishers and each publisher issues set numbers For each publisher there must least one server handle messages for the documents issued that publisher our view the minimum commitment publisher must make issue document store and deliver the document the network When Dienst server receives message for document locates the closest server for the document publisher and forwards the message Dienst messages address four types digital library services user interface services which present library information format designed for human readability repository services which store the document and support retrieval all part index services which provide search and miscellaneous services which provide general information about server these four services only the first used directly human The others used programs particular other Dienst servers but also other digital library publishing systems For example the Stanford Information Filtering Tool SIFT obtains bibliographic records through the index interface and are currently designing gateway the WATERS WATERS system encourage other developers digital library systems provide both user interface and application interfaces their systems All services except the last are optional given site This allows maximal flexibility the way that particular server implementations interoperate For example one server may exist solely user interface gateway providing transparent access for users particular domain indexes and repositories see this flexible interoperability key the development digital library infrastructure where the collection will span multiple sites and continents Repository servers store documents multiple formats key difference between Dienst and other current digital library systems its ability represent documents multiple formats Most current digital libraries present documents exactly one form PostScript Although PostScript almost always available for newly produced documents there are problems with relying the exclusion all other formats First most older works are only available paper making scanned page images the only practical means bringing the material online describe our experiences doing that below Second looking forward can expect see other document representations become popular Surely World Wide Web conference can claim that HTML will used third reason that for some applications other formats are just better For example one wishes full text indexing document collection the plain text more useful than the PostScript file and one wishes display just single page collection page images may better than searching through PostScript Therefore Dienst conceptual data model allows each document stored one more formats The Dienst protocol includes message that requests document for list formats which available specify formats with MIME MIME Content types Dienst does not support the notion explicit conversion between document formats does System Putz repository willing and able provide document given format should simply list that format even only obtained through conversion service Diversity the rule the Internet and each site supporting Dienst likely store their documents different way The Dienst protocol hides all detail the underlying storage organization this sharp contrast FTP Gopher and bare HTTP where the underlying hierarchy visible Each Dienst repository includes function which maps from DocID and format the actual storage pathname that server This hides both details file system structure and file typing naming conventions from outside users Thus one may request say the second page the TIFF version document from server without needing know where and how stored Index servers support search index server accepts queries some query language and searches for document records that satisfy the query our model index server totally distinct from repository Repository data likely huge but index servers store only meta data which quite modest size The choice query language crucial the power index server did not wish make this choice the Dienst protocol designed with one initial query language and provision for extension support others Every query language based underlying model for the meta data queries The initial query language Dienst assumes minimal data model where documents have author title and abstract addition the publisher and number query may refer any these fields refers more than one then the terms are connected with implicit and Thus one might query for all documents published author Wilson publisher Stanford search request returns document type text dienst response consisting records containing meta information all the matching documents This meta information follows the encoding proposed for Uniform Resource Characteristics URC URC The URC draft proposes fields such title author and Content type and URL all which which are obviously applicable have added number experimental attributes prototype implementation runs eight sites initial version Dienst and prototype implementation were developed part the Computer Science Technical Report CSTR project ARPA sponsored CNRI directed effort create online digital library technical reports from the nation top computer science universities This version was installed the five universities that form the project Cornell CMU Berkeley MIT and Stanford and shortly thereafter Princeton Dartmouth and Rochester Here describe few its features full account may found Dienst One uses Dienst connecting any convenient Dienst server that supports the user interface services using standard Web client This server will display form for searching the collection Unless the user restricts the search single publisher all Dienst servers are searched parallel Each Dienst server made aware all other Dienst servers fetching list all servers from single central meta server Thus when new server comes online other servers become aware after only short time The results from search are displayed list the DocID author title and date for each matching document and include URL for each document Selecting one displays the document more detail including list the available formats obtained described above The user can retrieve the document any the formats Some repositories include page images bit dot per inch GIF files When this the case the user interface service able display the document page time inline the user Web client found that such pages are readable most monitors and saves considerable network bandwidth compared the dpi TIFF images addition some sites also store reduced size thumbnail page images which allow the user quickly browse through document and then click view interesting page say one that contains graphic full page version Although not have any formal user studies anecdotal evidence says that this very powerful and helpful feature The server also allows the user download and print all selected pages the document Local users may print directly while remote users can download PostScript version the document and then print manually Since all documents are not available PostScript the server has the ability translate from TIFF images level PostScript the fly Maintaining the Document Collection Our goal simplify the process which author publishes digital documents Much the work this area the document creation layer that enhancements HTML and HTML editors Our approach allow authors use their traditional text production system LaTeX troff Word etc and then provide tools which they can submit the results that text processing digital library Dienst simplifies digital library maintenance Digital library technology will only propagate beyond the technologically savvy such systems require minimal human intervention especially trained experts Two points are obvious First authors are concerned primarily with writing documents and getting them published Submission digital library should require little more skill than using word processor Second many the organizations that wish publish documents government agencies academic departments small companies have little technical expertise These organizations might tolerate the need for reasonable skill level install digital library system intend address the skill level required install the digital library system future work However they surely will not tolerate the cost systems expert maintain the library Cornell have implemented set tools that mostly automate the process managing digital library The tools are closely integrated with the Dienst digital library server They are similar spirit those implemented for the Wide Area Technical Report Server WATERS system known Techrep but whereas Techrep designed maintain the centralized index and unstructured FTP based document repository that characteristic WATERS the tools described here are tailored for the distributed indexes and structured repositories characteristic Dienst Our design goal was make the digital library maintainable document librarian with relatively low level computer training This serves four major roles the general manager the collection the reviewer document submissions protect against counterfeit document submissions the clearing house for copyright issues and the archiver document hardcopy This system has recently been installed the Cornell Computer Science Department and now the means for all technical report submissions Authors add documents with HTML form The submitter prepares document for submission producing PostScript representation Rather than plethora document formats from variety word processors determined that PostScript represents lingua franca that could generated from virtually all word text processing systems recognize that there will documents that can not represented this fashion but estimate that there number will very few and that techniques for managing them can developed the process matures The author submits document completing HTML form that contains text fields for bibliographic data about the document These fields are the document title author pathname the PostScript file abstract and submitter mail address The submitter can quickly complete this form cutting and pasting text from the document source The document librarian validates submissions the library The document librarian the role gatekeeper the system learns each submission through automatically generated mail message document actually enters the database until the manually checks the submission addition the acts the legal gateway ensuring that the authors complete copyright release form that gives the department permission make the document available over the internet When manual checking and copyright clearing are complete the uses simple command assign DocID the document and signal that the document ready entry into the database The remainder the process fully automated Software that integrated with the digital library server generates the RFC bibliographic entry from the submitter entry checks the validity the postscript file builds the actual database entry and generates the GIF images for online viewing and browsing the document The image conversions this process are done with the Extended Portable Bitmap Toolkit PBMPLUS PBMPLUS consists number filters for conversion between variety image formats TIFF GIF Bitmaps etc and small set portable formats and set tools perform manipulations rotations color transformation scaling the portable format files PBMPLUS has the advantages being free quite reliable usable wide variety graphical formats and quite powerful its basic image manipulating capabilities Document librarian controls document withdrawal library system must able handle author requests for document withdrawal The reason for withdrawal may invalidation the published research newly published results another document For purposes maintaining the integrity collection have made the document librarian the control point for this operation Document withdrawal via simple command replaces the bibliographic file with entry whose only attributes are the document number and WITHDRAWN flag all other bibliographic information deleted This ensures that the DocID not reused for another document Furthermore the withdrawal moves the original bibliographic file and associated image and postscript files location that not accessible the document server Hardcopy sometimes required While electronic document delivery the raison etre our system recognize that publication quality hardcopy sometimes needed The document librarian must produce paper copy for archival storage and for people who not have electronic access our system printing done using package provided Cornell Information Technologies called PUBLISH EZPUB PUBLISH allows users across campus various platforms print central Xerox DocuTech publishing system This publication quality printer that offers very high speed and resolution pages minute dpi and document setup facilities such binding different paper types etc With command the Dienst document management suite the can specify that multiple copies printed the DocuTech The command does automatic setup the print job including formatting standard Cornell Technical Report cover page have just begun use this automated system the Computer Science department Cornell later time will evaluate the effectiveness the system with special attention payed the number documents that require special submission procedure are not translatable postscript Obviously the ratio these high the number submitted documents need rethink the design the system Digitizing existing documents mostly manual task describe above system for almost complete automation the document submission process Cornell faced the additional task converting existing collection digital form While some the tools described above were useful for this task large amount manual intervention was required The Cornell Computer Science Department has been publishing technical reports since September the department had published with average length thirty six pages total over pages The digital record for many these either non existent not easily available format that difficult interpret with current hardware and software for example document formatted extinct copy WordStar that only available floppies for long gone CPM system The common form that exists for all existing documents hardcopy the department maintains archival copies the entire corpus production scanning facility campus allowed the department convert the entire corpus high quality dpi group compressed TIFF images Over nine month period all hardcopy pages were scanned individual TIFF files and downloaded via FTP disk the Computer Science Department Each TIFF file ranges size from around one kilobyte for blank page almost two megabytes for page that contains high quality photographic image The total collection pages images now occupies around gigabytes should noted that scanning collection even modest the Cornell time consuming labor intensive and not without problems Even the most careful scanning technician occasionally misses pages skews pages misses part page due unnoticed fold when the page put the scanner bed These problems are difficult not impossible detect automatically addition any problems that are detected are computationally intensive correct For example simple ninety degree rotation dpi TIFF image due incorrect scanning orientation can take thirty minutes reasonably equipped SPARCstation example illustrates the difficulty correcting scanning problems discovered after all scanning was complete that many our older were scanned from pages that were oriented landscape mode two pages side side The result was TIFF file containing two page images which made correct page mapping impossible the document server While was easy find files with this problem reading the height and width from the TIFF header with publically available TIFF package Leffler reasonably quick correction required handcrafting code split the files Even with the handcrafted code the location and correction process took over week compute time powerful workstation addition manual scanning documents also had manually enter the RFC bibliographic files While would have been easy write translators between RFC and other common bibliographic formats such BibTex refer etc consistent electronic bibliographic format was not available for all the The Web imperfect document viewing technology Basing our system the World Wide has had both benefits and shortcomings The obvious benefit wide availability over publically available browsers The shortcoming that HTML HTTP and Web browsers lack number features important for digital document display and navigation this section enumerate these features with the goal inspiring discussion and enhancement the technologies the Web community Facilities for display compound documents The Web has insufficient mechanisms for displaying documents that consist multiple textual and non textual parts the electronic mail world this issue addressed MIME Multipurpose Internet Mail Extensions MIME Although HTTP uses MIME typing allow browsers map the proper viewer for document documents are allowed have only single MIME type multipart MIME not one them The only facility for multi format documents the ability embed images either GIF Bitmap HTML document Yet there are gross inefficiency problems with image embedding since the HTTP browser must initiate HTTP GET message for each embedded image For document with many embedded images this can lead unacceptable document download times Furthermore there are other types that one might like embed documents for example MPEG clips Ability display line TIFF images Among the many digital image formats GIF JPEG PBM etc TIFF the most flexible and extensible The TIFF specification constantly evolving with the latest being Revision finalized TIFF The most significant evolution from the standpoint reducing network bandwidth image transfers the growing number compression schemes for TIFF images The ability display line TIFF images HTML documents would take full advantage this rich facto image standard and permit immediate display images produced scanners fax machines and most paint and photo retouching programs without computationally expensive conversion GIF format Arbitrary rectangle section from the client Viewing document images the Web would greatly enhanced the user client were able select across arbitrary rectangle the image and transmit the selected coordinates back the server The server could then retransmit zoomed image the selected image the higher resolution were available which often high resolution TIFF image Image zooming important feature when the image being viewed document page that contains figures tables with small fonts Client feedback display capabilities main contribution Dienst that supports the notion multiple formats for the same document The user can select among the available formats and use the view appropriate for that format would prefer the server end chose the best format display the respective client This would possible the client HTTP request contained information the display capabilities the client system especially display depth and size Authentication The ability restrict who able access document essential feature production digital library While our system intended for non commercial publishing limiting access required even this domain say for example documents that should only read members campus community employees corporation this require that server able guarantee the identity those making protocol requests Summary have described system Dienst that simplifies document publishing the Internet This system makes two important contributions First Dienst provides uniform protocol for search retrieval and display documents This protocol addresses flexible document model where each document has unique name can multiple formats and consists set named parts These parts can physical such pages logical such chapters and tables addition the protocol allows full interoperability between distributed digital library servers The result that the user sees single virtual document collection Second Dienst provides set tools that permit easy management digital library These tools automate document submission permit document librarian manage the collection and facilitate the production archival hardcopy plan over the next year build this technology number ways Installation the digital library server too difficult intend implement tools that will auto configure the server The search engine the current implementation primitive intend include more advanced search engines for example full text search make document discovery collection more powerful and easier The current strategy conducting parallel search over all servers does not scale over very large number servers intend use meta information about individual document servers improve the search strategy With this facility one could for example choose search only those libraries that have high probability containing computer science documents plan examine and possibility incorporate current work copyright servers Dienst might used for commercial documents Finally hope use some the current work location independent identifiers refine the method which documents the net are addressed Dienst Acknowledgements This work was supported part the Advanced Research Projects Agency under Grant MDA with the Corporation for National Research Initiatives CNRI Its content does not necessarily reflect the position the policy the Government CNRI and official endorsement should inferred This work was done the Design Research Institute collaboration Xerox Corporation and Cornell University and the Computer Science Department Cornell University References Cohen Danny Cohen Format for mailing Bibliographic Records RFC Dienst James Davis Carl Lagoze protocol and server for distributed digital technical report library Cornell University Computer Science Department Technical Report June DIENSTPROT James Davis Carl Lagoze Dienst Protocol for Distributed Digital Document Library Internet Draft EZPUB Cornell Information Technologies How Use PUBLISH and the Docutech Printer Cornell Information Technologies November Leffler Sam Leffler Public TIFF package Available via ftp from sgi com graphics tiff beta tar MIME Nathaniel Borenstein Ned Freed MIME Multipurpose Internet Mail Extensions RFC PBMPLUS Jef Poskanzer Extended Portable Bitmap Toolkit Available from many anonymous FTP sites including ftp utah edu Putz Steve Putz Design and Implementation the System Document Service Xerox PARC SIFT Online service http sift stanford edu TIFF Aldus Corporation TIFF Revision Specification URC Michael Mealling Encoding and Use Uniform Resource Characteristics Internet Draft WATERS Kurt Maly Edward Fox James French and Alan Selman Wide Area Technical Report Server Published online http www odu edu WATERS WATERS paper psBiographiesJim Davis works for Xerox the Design Research Institute non proprietary consortium Cornell University which which seeks ways improve the engineering design process received PhD from MIT Media Technology Laboratory His thesis the Back Seat Driver was computer program which provided spoken driving instructions the operator car real time Prior that worked research and development number places including Atari Cambridge Research Laboratory the DRI works developing electronic corporate memory His most recent project system for shared group annotation using the World Wide Web also plays electric bass and learning Dutch Carl Lagoze works for the Computer Science Department Cornell University Senior Software Engineer the CSTR project received Master Software Engineering from the Wang Institute Graduate Studies After receiving his degree worked both academia and the commercial world developing tools for the generation language specific editors Over the past two years has discovered the joys digital libraries and the fascinating world information capture and access From the view his non technical friends doing something that information superhighway Lagoze also the proud parent the cutest baby ever and avid cyclist and canoeist contact author davis dri cornell edu MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Tuesday Aug GMT Academic Interests Academic Interests Neural NetworksCognitive ScienceMachine LearningNonlinear DynamicsChaos and ComplexityCoding and Information TheoryEvolutionary Computation Date Tue Jan GMT Server NCSA Content type text html CAS Compiler Design Assignments Assignments for Compiler Design Summer Session Assignment One Click here see the grammar gave class related problem part three Click here see brief summary the hints gave class for this assignment Date Tue Nov GMT Server NCSA Content type text html Last modified Fri Oct GMT Content length Quiz Fall Section SOLUTIONQuiz for Friday October questions points total points the following bit two complement arithmetic calculations Show all work Indicate overflow occurs writing the word overflow next the calculated result Give bit result for the multiplication OVERFLOW change addition negative multiplier change problem and sign extend partial products OVERFLOW points Give algorithm and then write SAL code fragment not whole program that does sign magnitude multiplication Variables and are given values elsewhere the program They contain bit sign magnitude representations The result the multiplication goes variable which also bits and initialized elsewhere the program The code should ignore the possiblility overflow from bits modify variables and Algorithm two complement multiplication the absolute values and Then set the sign bit the result data mask word fff mask word text xor sign figure out sign result bgez abs get absolute value and mask abs bgez multiply get absolute value and mask multiply mul multiplication absolute values bgez sign all done mask set sign bit all done points Show the result addition the following two IEEE single precision floating point values Use round nearest for all rounding align binary points shift the first addend places the right keeping extra digits the least significant end for later rounding the addition the mantissas This value already normalized only rounding left The two values that could round are and The result have exactly halfway between these two representations IEEE round nearest says choose the one that ends Therefore the IEEE single precision result 