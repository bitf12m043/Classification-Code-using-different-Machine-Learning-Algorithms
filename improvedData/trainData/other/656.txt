Date Tue Jan GMT Server NCSA Content type text html Last modified Sun Aug GMT Content length Lecture Lecture Programming Languages MISHRA Programming Languages Mishra New York University Lecture Slide The ADA Programming Language Language Survey Countess Ada Augusta Lovelace First programmer hacker Babbage Analytical Engine Relatively new programming Language developed DoD Currently the only language approved for DoD software project Developed reduce high cost designing writing and maintaining DoD software Major items software are for embedded systems Primary purpose control Incorporated larger systems Large software lines code Long lived systems years Continuously evolving Slide The Design History HOLWG High Order Language Working Group was established investigate problems developing common language for DoD List requirements STRAWMAN WOODENMAN TINMAN IRONMAN Revised IRONMAN and finally STEELMAN Design Competition Winner Jean Ichbiah Cii Honeywell Bull Ada ISO Standard Analysis Technical Queries ARG Ada Rapporteur Group Resulted AIs Ada Issues DOD and ANSI established Ada project Feb Ada Core Language Specialized Annexes Slide Quick Overview Ada Strong Typing Scalar Composite Access Private Derived Representation Specification Standard Control Constructs Structured Language Pascalish Subprograms Procedures Functions Program Structuring Facilities Packages Generics Polymorphisms Extends the concept type and functional abstractions Exceptions Separate Compilation Tasking Rendezvous Slide Quick Overview Ada Object Oriented Programming Program Libraries Replaces Ada flat structure hierarchy Visibility Control and Program Extension without recompilation Interfacing Graphical User Interface GUI Program Call back Tasking Static Monitor Slide Ada Type System Programmer Defined Types Set values Applicable set operations and set properties accessible via attributes Type Definition type identifier type definition Type Binding variable type Attributes name attribute identifier Slide Examples type DAY MON TUE WED THU FRI SAT SUN Enumeration Type TODAY DAY TOMORROW DAY CURRENT DAY DAY HOURS WORKED array DAY FIRST DAY LAST INTEGER TODAY FRI then TOMORROW DAY SUCC TODAY for CURRENT DAY DAY FIRST DAY LAST loop end loop Slide Primitive Scalar Types Discrete Types Enumeration Types Character type iii Boolean Types Integer Types Real Types Fixed Point Types Floating Point Types Note Integer and Real types together form the numeric types INTEGER Predefined integer typesSYSTEM MIN INT SYSTEM MAX INT Operation Arithmetic operations Logical operations Slide Discrete Types Note Characters Boolean are predefined enumeration types Characters ASCII characters Booleans FALSE TRUE All discrete types are ordered FALSE TRUE Discrete type values can used for indexing iteration over loops Attributes Discrete Types POS Position Number SUIT POS HEARTS VAL Inverse POS SUIT VAL HEARTS SUCC PREDT FIRST LAST Slide Real Type Floating Point Accuracy fixed relative error bound type WEIGHT digits Values have accuracy digits Fixed Point Accuracy fixed relative error bound type VOLTAGE delta range Values have accuracy least fine Some AttributesFX Fixed Point DELTA LARGE Floating Point mantissa has digits DIGITS MANTISSA EMAX SMALL LARGE EPSILON Slide Derived Type Specific Type Constraints Range Constraints for scalar Examples subtype BYTE SIZE INTEGER range subtype CAPS CHARACTER range subtype identifier parent type range constraint Object Declaration constant INTEGER range abs identifier mutability type constraint init value Range constraint can tested runtime CURRENT INPUT not CAPS then Slide Assignment Statement Types must match Same type name Not structure Ada uses name equivalence Type checking compile time Type mismatch Program considered illegal Subtype constraints Compatibility condition type type Constraint checking run time Violation raises constraint exception Program not illegal Slide Examples subtype NATURAL INTEGER range INTEGER LAST INTEGER FLOAT NATURAL INTEGER range INTEGER LAST illegal INTEGER type conversion legal legal legal INTEGER legal constraint exception constraint exception Slide Arrays Arrays Ada Fixed Size Type may unconstrained definition But bounds must given object declaration Elements are all same subtype Permits Assignment Equality Testing Slicing subtype NATURAL INTEGER range INTEGER LAST type SHORT STRING array CHARACTER type STRING array NATURAL range CHARACTER NAME STRING Slide Array Assignment Assigning array Legal type same type has same number elements then copied into positionally Otherwise constraint error exception raised declare STRING STRING begin end Array Attributes Slide Array Indexing Slicing Array Indexing STRING Array Slicing arrays only array object concatenation opn Array Aggregates type SYM TAB array CHARACTER range INTEGER TABLE SYM TAB TABLE TABLE others Slide Records Records Ada Heterogeneous Components need not same type Fields are accessed component names CAR CAR MAKE Variant Records Tag discriminant fields cannot changed run time Permits Assignment and Equality Testing type CAR MAKE FORD HONDA subtype CAR YEAR INTEGER range type CAR MAKE CAR MAKE YEAR CAR YEAR end record CAR CAR Slide Records Contd Records may nested initialized declaration record may assigned record provided they have same type CAR Record Aggregates YOUR CAR CAR YOUR CAR CAR MAKE YEAR Slide Variant Records Similar PASCAL variant records Except Type declaration only defines template When object declared discriminant value must supplied type VEHICLE TAG CAR TRUCK type VEHICLE TAG VEHICLE TAG record YEAR MODEL YEAR case TAG when CAR COLORS COLOR SCHEME when TRUCK AXLES NATURAL end case end record YOUR TRUCK VEHICLE TRUCK REFRIGERATOR VEHICLE Illegal There may more than one discriminant But they must all discrete types Discriminant can used uninitialized constraint type BUFFER LENGTH NATURAL record POOL STRING LENGTH end record Slide Access Types Allow manipulation pointers Allow control object creation type STRING PTR access STRING type STRING PTR access STRING STRING PTR STRING PTR new STRING new STRING Constraint Error new STRING Illegal new STRING all BUD new STRING MUD all all new creates new object that can designated the access type Slide Recursive Types type NODE Incomplete Declaration type NODE PTR access NODE type NODE record DATUM CHARACTER NEXT NODE PTR end record Slide Generalized Access Types Inherent Access declared objects Not just objects created allocators type INT PTR access all INTEGER INT PTR aliased INTEGER Access Note Designated variable must marked aliased Access attribute only applicable object whose lifetime least that the access type Avoids dangling reference problem type CONST INT PTR access constant INTEGER CIP CONST INT PTR aliased constant INTEGER CIP Access Access restricted read only Slide Control Structures Assignment Statements DISCRIM TABLE TABLE VECTOR Conditional Statements then end case when then when when others null elsif then end case else end Slide Control Structures Iteration Clause Iteration Statements Basic Loop loop Statements repeated end loop Iteration Clause Execution basic loop terminates when The iteration completed loop exit statement executed SUM SUM for loop for reverse loop SUM SUM SUM SUM end loop end loop SUM SUM while loop loop SUM SUM exit when SUM SUM end loop end loop Last Slide Complete Ada Program with PACKAGE procedure TEMPERATURE CONVERSION use PACKAGE Convert temp Fahrenheit Celsius FAHRENHEIT TEMP CELSIUS TEMP FLOAT begin GET FAHRENHEIT TEMP CELSIUS TEMP FAHRENHEIT TEMP PUT CELSIUS TEMP end TEMPERATURE CONVERSION End Lecture Bud Mishra Thursday October 