Date Tue Nov GMT Server NCSA Content type text html Last modified Tue Oct GMT Content length WARTSWARTS Wisconsin Architectural Research Tool Set Mark Hill James Larus Alvin Lebeck Madhusudhan Talluri and David Wood Computer Sciences Department University Wisconsin West Dayton Madison warts wisc edu Wisconsin Architectural Research Tool Set WARTS collection tools for profiling and tracing programs and analyzing program traces WARTS currently contains QPT and QPT Program profiling and tracing system CPROF Cache performance profiler Tycho and dineroIII Cache simulators EEL Library for editing executable files Fast Cache Framework for memory system simulators WARTS distributed with the full source and small amount documentation The tools WARTS are copyrighted and distributed under license copy the license available ftp wisc edu ftp pub warts license can obtained writing the address above WARTS available without charge for university researchers and available other researchers for modest research donation Contact warts wisc edu for more details also maintain list changes and improvements WARTS programs CPROF The CPROF system cache performance profiler written Alvin Lebeck and David Wood that annotates source listings identify the source lines and data structures that cause frequent cache misses The CPROF system consists two programs Cprof uniprocessor cache simulator and Xcprof windows user interface Cprof processes program traces generated QPT see above and annotates source lines and data structures with the appropriate cache miss statistics Xcprof provides generalized windows interface for easy viewing annotated source files The performance current RISC processors very sensitive cache miss ratios Programmers compiler writers and language designers must explicitly consider cache behavior fully exploit program performance potential CPROF provides detailed information about program cache behavior through full cache simulation annotating lines source code and data structures with the corresponding number cache misses CPROF helps the user focus problematic data structures and algorithms CPROF aids the programmer identifying types transformations that can improve program cache behavior classifying cache misses compulsory capacity conflict Note This product contains software developed the University California Berkeley and its contributors Our experience using CPROF tune this subset the SPEC benchmarks detailed Alvin Lebeck and David Wood Cache Profiling and the SPEC Benchmarks Case Study IEEE Computer vol Oct Tycho and DineroIII Tycho and dineroIII are uniprocessor cache simulators written Mark Hill The simulators report the behavior one more alternative cache designs response input trace provided the user with QPT trace list the memory references that program workload makes while executing Both simulators are written use the same ASCII trace format and have been distributed dozens companies and universities The first simulator tycho simultaneously evaluates many alternative uniprocessor caches but severely restricts the design options that may varied Specifically with one pass through address trace tycho will produce table miss ratios for caches many sizes and associativities provided that all caches have the same block line size prefetching and use LRU replacement Tycho used for example with the SPEC benchmark suite examine numerous caches Tycho most useful for reducing the size large cache design space second version tycho tychoII provides higher performance with the option binary trace input and several other optimizations Madhusudhan Talluri TychoII however more complex than tycho and has not been widely used The second simulator dineroIII evaluates only one uniprocessor cache time but produces more performance metrics traffic and from memory and allows more cache design options varied write back write through LRU random replacement demand fetching prefetching DineroIII distributed for instructional use with popular graduate computer architecture textbook DineroIII most useful for carefully studying few alternative cache designs Mark Hill and Alan Jay Smith Evaluating Associativity CPU Caches IEEE Trans Computers December Jeffrey Gee Mark Hill Dionisios Pnevmatikatos Alan Jay Smith Cache Performance the SPEC Benchmark Suite appear IEEE Micro August John Hennessy and David Patterson Computer Architecture Quantitative Approach Morgan Kaufmann San Mateo California Last modified May James Larus larus wisc edu 