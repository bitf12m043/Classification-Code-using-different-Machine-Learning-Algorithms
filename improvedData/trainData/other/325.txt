MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Thursday Feb GMT Optimal Video TransmissionOptimal Video TransmissionBy Mishaal AlmashanAdvised Dexter KozenMEng Project Fall Computer Science Department Cornell UniversityTable ContentsProject TitleIntroductionQuick Overview MPEG HistoryCompression AlgorithmMPEG FramesMotion VectorsProblemAim this ProjectResearch Sources NotesLinks Relavent TopicsDemo output current mpeg weigh RedsNightmare mpgmpeg weigh reads MPEG video file and parses the frames extract the motion vectors blocks within the frames determines how much sweeping pan occured averaging out all the motion vectors into single vector and caculating how far the referenced frame The PanIndex then would proportional the motion vector and inversely proportional the distance the referenced frame frames CMT ExtensionIntroduction This project will improve upon existing prioritization algorithm for bandwidth constrained video transmission The object determine which frames video sequence drop optimize perceptual continuity the received sequence The algorithm will modified take the rate motion into account when prioritizing frames for transmission that frames with more motion are less likely dropped algorithm was developed that would drop the least critical frames video stream when the transmission bandwidth narrow The algorithm described Efficient Algorithms for Optimal Video Transmission was proved optimal for most video but when comes video with lot scenery motion panning and scanning fails the aim this project account for the rate motion and assign weights the frames drop the least weighted frames and still preserve perceptual continuity will explore and study the motion vectors MPEG encoded video and try determine from that how critical the frame Quick Overview MPEG History The Moving Pricture Expert Group MPEG comitee group under the International Standards Organization ISO started effort draft standard for digital video and audio compression Eventhough standard for video compression used teleconferencing and telephony applications had existed CCIT Recommendation MPEG realized that relaxing the constraints very low delay and focus low bit rate can achieve good quality video the range Mbits Compression Algorithms September draft proposal was agreed upon the members the group This draft describes video compression that uses block based motion compensation for temporal redundancy and transform domain Discrete Cosine Transform based compression for spatial redundancy Motion compensation occurs predicting motion between macroblocks frames the temporal direction motion vectors then the prediction error macroblocks the frames can compresssed using the redundancy the spatial direction with DCT The resulting DCT coefficients are quantized drop the unnecessary precision This qautization often results the coeffecients zero These coefficients along with the motion vectors components quantization values and other parameters are then Huffman coded using fixed tables The DCT coefficients have special two dimentional Huffman table that would code the non zero value and the run length zeros The motion vectors and components are also subtracted from the last one coded DPCM MPEG FramesThe standards called for random access fast forward and reverse searches reverse playback and audio visual synchronization This required reference frames which are called Intraframes These frames are sill images having dependency any other frames the other hand Predicted frames depend past frames reconstruct during decoding Each macroblock these frames can come with either vector and difference DCT coefficients the last frame can intra coded just like frames The last type frames the Bidirectional frame which can depend past and future frames The macroblocks frames can any the following four types Intracoded dependency Backward dependency which block referenceing block the pastForward dependency which block referencing block the futureAverage which block the difference the average both past and future blockFigure MPEG FramesThese dependencies are better illustrated Figure One can see how frames depend past frames while frames can depend both the future past These dependencies mean that when decoding MPEG frames cannot decoded until the depended opon frames are decoded This might require the decoder decode future frame order decode current frame Motion Vectors Motion Detection Motion Estimation Problem with the Current AlgorithmAs described before the current algorithm treats the frames equally The weighing procedure used involves weighing frames according the the frame type and the frame dependecies for example when frame used reference for multiple frames would weighted heavier than frame with one frame dependence Such algorithm optimal the sense data throughput but the aim have transmission that perceptually acceptable Currently there way knowing what information frame contains Therefore The maximum number frames are sent not the most perceptually critical frames This fault causes the video reception look jittery This especially true when there panning the scence Aim this ProjectKnowing that MPEG video frames carry motion vectors and that frames with more motion are perceptualy ciritcal can use these vectors motion detectors This allows distinguish these frames and hence weigh them accordingly The aim this project extract the motion vectors and somehow use them weigh the different frames The old algorithm would then take into account these new weights produce squence frames that are more perceptually acceptable Research Sources Notes Dexter Kozen Yaron Minsky and Brian Smith Efficient algorithms for optimal video transmission Technical Report Cornell University May Gall Didier MPEG Video Compression Standard for Multimedia Applications Communications the ACM April Patel Ketan Smith Brian and Rowe Lawrence Performance Software MPEG Video Decoder Rowe Lawrence Patel Ketan Smith Brian and Liu Kim MPEG Video Software Representation transmission and Playblack University California Berkeley February CCIR Recomendation Links Relavent Topics Usenet Frequently Asked Questions about MPEG MPEG Home Page Table Contents References Links other Topics Home Page Oct Mishaal Almashan Cornell University MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Wednesday Apr GMT Parallel Infrastructures for Applications Parallel Infrastructures for Applications Dates Monday April Tuesday April Place East Conference Room TAY Texas Institute for Computational and Applied Mathematics Taylor Hall The University Texas Austin Austin Organization This workshop organized Doug Cline Associate Director Computation Center High Performance Computing Facility Austin Robert van Geijn Associate Professor Department Computer Sciences Sponsors Texas Institute for Computational and Applied Mathematics Austin Department Computer Sciences High Performance Computing Facility the Austin Computation Center Center for Subsurface Modeling Cray Research The University Texas Austin Texas Instutute for Computational and Applied Mathematics Department Computer Sciences High Performance Computing Facility and Center for Subsurface Modeling are organizing meeting April and encourage interaction the areas High Performance Parallel Scientific Computing between the University Texas the major MPP computer vendors and industry This meeting will have three components Presentations from researchers parallel computing related research Presentations from vendors and industry numerical libraries for requiring parallel computation Round table discussions Facilities are the process finalizing block hotel rooms the Double Tree Suites Austin Texas The room charges will plus tax The block rooms this price will held until March Double Tree Suites Hotel West Street Austin Phone FAX Note the Double Tree Hotel town well Please don confuse them Registration There will registration fee payable the meeting cover the cost refreshments lunch dinner and administrative costs For students the registration fee will which will include lunch Please prepared write check Directions the workshop NEW Tentative Schedule List attendees Please contact rvdg utexas edu you intend attend and would like make presentation Date Tue Jan GMT Server Apache Content type text html Content length Last modified Mon Jan GMT CalendarCS CalendarWinter Week Lecture Topics Reading Week Jan Intro Abstraction Data Models The Pascal Data Model Pascal Storage Allocation Week Jan Dynamic Allocation Objects Iteration Sec Inductive Proofs Sec Complete Induction Sec Week Jan Proving Properties Programs Sec Recursive Definitions Sec Recursive Methods Sec Week Jan Execution Recursive Calls Merge Sort Sec Proving Properties Recursive Programs Sec Quicksort EXAM Feb covering and lectures Week Feb Measuring Running Time Sec Big Sec Analyzing Program Running Time Sec Week Feb Bounding Running Time Sec Analyzing Programs with Procedure Calls Sec Analyzing Recursive Procedures Sec Analysis Merge Sort Sec Week Feb Solving Recurrence Relations Sec Trees Basic Terminology Sec Data Structures for Trees Sec Week Feb Recursions Trees Sec Structural Induction Sec Binary Trees Sec Binary Search Trees Sec Week Mar AVL Trees Binary Tree Class Priority Queues and Partially Ordered Trees Sec Heap Sort Sec Week Mar Lists Sec Stacks Sec Queues Sec EXAM Mar covering through Week Mar Longest Common Subsequences Sec Character Strings Sec Sets Basic Definitions Operations Sec Operations Sets Sec Week Mar Implementation Sets Sec Probability Sec Hashing Sec Week Mar Apr Relations and Functions Sec Implementing Functions relations Sec Binary Relations Sec Week Apr Infinite Sets Sec Counting Sec Permutations Sec Selections Orderings Assignments Sec Week Apr Distribution Objects Bins Sec Review FINAL Section Friday April Class FINAL Section Wednesday April Class Aho Alfred Ullman Jeffrey Foundations Computer Science Edition Computer Science Press Norman Theodore First Course Object Oriented Programming BYU Bookstore Packet Date Tue Nov GMT Server NCSA Content type text html Last modified Sun Nov GMT Content length GradesGrades GRADES SORTED LAST FOUR DIGITS Number parens after program grade late days used for that program CLASS AVERAGES 