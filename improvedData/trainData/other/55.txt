MIME Version Server CERN Date Monday Dec GMT Content Type text html Content Length Last Modified Monday Mar GMT Fall Course Materials Fall Foundations Artificial Intelligence Course Materials HandoutsCS Lecture NotesCS Homeworks and SolutionsCS Handouts and Project InformationCS Lisp LabsCS Presentation ScheduleCS Handouts Tentative Course Syllabus last modified Lecture NotesIntroduction Sep Defining Artificial Intelligence Sep Knowledge Representation Semantic Networks and FramesProblem Solving Search Sep State Space Search Iterative Deepening Sep Heuristic Search hill climbing simulated annealing Sep Heuristic Search beam search best first search Sep Optimal Search Sep Adversarial Search Sep Alpha Beta Pruning Rule Based Reasoning Sep History Game Playing Components Rule Based Systems Sep CLASS Sep Algorithms for Forward and Backward Chaining Sep CLASS Sep Conflict Resolution Expert Systems Machine Learning Oct Introduction Machine Learning Oct Instance Based Learning Decision Tree Induction Oct Learning Search Oct FALL BREAK Oct The Version Space Algorithm Oct Neural Nets backprop Oct Neural Nets Intro Genetic Algorithms Oct Genetic Algorithms Oct MIDTERM Knowledge Representation and Inference Oct Representing Knowledge First Order Logic Oct Inference First Order Logic Oct Resolution Theorem Proving Oct Logical Reasoning Systems Planning Nov Planning Introduction Nov Partial Order Planning Nov Hierarchical Decomposition Uncertain Knowledge and Reasoning Nov Abduction and Bayes Rule Nov Belief Networks Nov Constructing Belief Networks Nov Inference Belief Networks Natural Language Understanding Nov Ambiguity Language Stages Processing Nov Syntactic Analysis State Space Search Nov CLASS Nov THANKSGIVING BREAK Nov Bottom Chart Parser Nov Semantic Analysis Conceptual Analysis Dec Conceptual Analyzers Today CIRCUS The Problem Inference Dec Inference and Scripts Putting All Together Dec NLP and Learning and Planning and Selected Project Presentations Dec Selected Project Presentations Homeworks and Solutions This section intentionally left blank Handouts and Project Information Course Syllabus and Project Information Project Ideas and Proposal Format Final Project Submission what where when etc Examples code with good procedural and data abstraction well good consistent indentation Courtesy Wayt and Oumi Mehrotra gene lisp genetic lisp Getting Started with the Project will easier you write your code stages result you have turn your code for review regularly whether not running your final grade based these intermediate code reviews Here how suggest working the code for some reason you think that your particular project doesn fit well into the structure below let know and create personalized schedule that does First think about the major modules that your project requires and the knowledge structures rules state descriptions board representations that you need including any related constructor functions and accessor functions described Winston our main text Implement the modules stubs lisp functions that have substantive code but that specify all the necessary parameters and that make calls the appropriate module stubs Write the code implement your generic knowledge structures completed for code review Oct Get the system running from beginning end soon possible just simple example This will invariably require making many simplifying assumptions completed for code review Nov Design and implement the inference engine control strategies needed for your system specific search strategy rule interpreter move generator learning algorithm completed for code review Nov Incrementally remove the simplifying assumptions adding the necessary code Evaluate the system appropriately project end Common Lisp The Language Guy Steele Common Lisp Resouces from CMU Repository including the Lisp FAQ Lisp LabsLab Sep Lists taking lists apart firing Lisp due Sep Lab Sep More primitives edit eval loop procedures due Sep Lab solution Shows how declare global variables example reasonable indentation and documentation Lab Sep Conditionals recursion procedural abstraction due Sep Lab solution Example reasonable indentation Lab Oct Data abstraction mapping iteration due Oct Lab Oct debugging structures CLOS due Oct Return home page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Friday Jul GMT Resources For Computer Sciences Welcome the Main Page The following pages contain links several sites all over the Internet They are intended provide resources for computer science educators all levels Table ContentsComputer ScienceProgramming Languages Formal Theory Functional Programming Constraint Programming Logic Programming Current Programming Language Research Lists Programming Languages Resources Programming Language Related Newsgroups Operating SystemsComputer Network and Data CommunicationArtificial Intelligence Software Engineering Institutes Newsgroups Object Oriented References Research Ethics Social Issues Discussion Ethics and Social Issues Related Newsgroups Management Information Systems Academic Programs Literature Other MIS Oriented Organizations Research Documents Education Resources Computer Resources Tutorials Software Teaching Tools Resources Other Sites Newsgroups Tutorials Gopher Internet Mosaic World Wide Web HTML Women Issues Women Associations Universities Women Engineering and University Departments Australia Canada Germany Mexico United Kingdom USA Yahoo Departments list Organizations Associations Companies Index computer related Organization Associations and Companies Miscellaneous Software WWW Software Libraries Other Software Sites Games Feel free send comments and suggestions Last Update July Number accesses this page since June NOTE This page was created with Nestcape Ver may look different when accessed with other browsers Date Tue Jan GMT Server NCSA Content type text html Last modified Wed Feb GMT Content length Paradox QBE Tutorial Introduction Query Example QBE query language which used Borland Paradox database management system and explained Section Korth and Silberschatz Database System Concepts the course textbook The instructions included this tutorial are based Paradox for DOS and Paradox for Windows There are some differences between the DOS and the Windows versions but they will clearly pointed out Start Paradox runs the IBM Compatibles the open lab TMCB There are two versions Paradox available the labs DOS Paradox can found under the PARADOX directory After entering the Paradox directory you can run Paradox typing paradox the prompt Hint the DOS version displays important function keys and actions they perform the bottom row the screen These function keys can great help when you not sure what next Working with the DOS version faster and probably best for simple tasks Windows Paradox can found under the PDOXWIN directory There Paradox group window with icons click Click the icon entitled Pad The user interface menu design and online help are available Also QBE queries can stored disk for later retrieval However runs typical windoze speed slower than the DOS version Creating Tables this section will show how create relations tables and add tuples relations Paradox The following SQL command creates the table relation scheme students CREATE TABLE students name Char PRIMARY KEY SID NUMBER PRIMARY KEY address CHAR similar concept followed Paradox method for creating tables Identify the attributes and their data types and the key attributes any Give the table relation scheme name Creating Relation Schemes Paradox Windows Select File New Table from the menu bar File followed New and then Table The table type Paradox for Windows the default Enter the following The field name The type Alphanumeric Short Number integer and Date with the format The size for alphanumeric types only Specify whether not key attribute All key attributes must the top the field list the student example SID and name are the combined primary key they should listed the first two fields specify that the field key part key press any key the keyboard while this column click the mouse button this column while the cursor positioned the column Click the Save button and enter the name the file All tables are automatically given the file extension extension not specified recommended use the default extension DOS Select from the menu bar Create Enter the name the table created Similar step the Windows version enter the field name and the field type Data types are the same DOS Windows However the data type size and key attribute area all entered the Field Type column Hence attribute part primary key alphanumeric type with size characters the Field Type Press DoIt save the table Note Paradox requires the key fields come first Adding Tuples TableWindows Select File Open Table from the menu bar Pick the table you want insert data into Select Table Edit Data from the menu bar press Enter the data the appropriate columns When finished entering data select Table End Edit press The table with the new values automatically saved when edit session ended DOSIf the table edited not present the desktop Select Modify Edit form the menu bar Enter the name the table edit Insert the data the appropriate columns Press DoIt save the table the table already visible the desktop then there need open the table Just click the table and press allow editing the table and hit save modifications made the table Building Queries Building queries QBE Paradox similar the ones given the textbook with some exceptions which will discussed this section Bringing Skeleton Tables Before QBE query can built the skeleton tables for each relation involved the query must selected Windows Select File New Query from the menu bar window will appear with the names available tables Select the table involved the query there are other tables involved the query select Query Add Table from the menu bar select more tables involved the query Repeat step for each table you wish query DOS Select Ask from the menu bar and enter the names the tables involved the query Repeat this for all tables involved the query Performing ProjectionsWindows and DOS Select the table containing the attributes which you want project the table already the desktop click anywhere the table otherwise open Using the arrow keys the keyboard the mouse select attribute field which you want project Hit the key click the little white box the field and check will appear the field remove the check hit the key that field again Repeat steps for any other fields which you want project Performing SelectionsWindows and DOS Select the table containing the attributes which you want select the table already the desktop click anywhere the table otherwise open Select the attribute fields using the arrow keys the mouse Enter the comparison operator followed the comparing value either constant another variable Valid relational comparison operators include NOT and the optional Performing Joins Windows and DOS Select table joined the table already the desktop click anywhere the table otherwise open Select attribute field joined Enter variable into the field Variables must preceded underscore Windows the variable will appear red and the underscore not shown Repeat steps for the other tables whose attributes you want join Performing Set QueriesQBE uses the SET command with EVERY the attribute field perform such queries Find the employee who makes more money than all others Find the customer who has ordered none the books For this type query will need first create set tuples for comparison and compare the set another table then perform other selections and projections after grouping explained the following example Suppose wish find all employees who work for all departments First need create set all the departments Dno the Department location table this follow the steps below Select the Dep loc table Type SET into the field under the table name Select the field Dno grouped set tuples Enter the variable dno into the field Now need compare this set Dno with the departments the employee table find all the employees who work all none the departments this continue follows Select the Employee table Select the Field Dno the Employee table compare with the set Enter EVERY into the field followed the variable dno now have the following query specification where represents the check mark The first table establishes the set Dno and the second table prints the names employees associated with EVERY Dno the set Dep loc Dep Name Dno SET dno Employee Name Emp Dno EVERY dno The set comparison operators are ONLY EVERY and EXACTLY ONLY The values the group contain only members the defined set For example Which customers have ordered only one book the Travel Series values the group are the defined set For example Which patients Ward haven exhibited any symptom seen the patients Ward EVERY The values the group include all members the defined set For example Which Students have taken all the courses required for major chemistry EXACTLY The values the group exactly match the members the defined set combines ONLY and EVERY For example Which customers have ordered all the books the Travel Series and others Performing Multiple Sub queries the Same Table Each Table skeleton has multiple horizontal lines where you can perform multiple sub queries that table After entering the first query table use the arrow move the next line perform second sub query This can repeated for more queries that same table Suppose for example that want query all Employees who are not supervised compute scientist This would involve two queries the Employee relation One select all computer scientists that are supervisors and another compare each employee with that set computer scientists that are supervisors The following query demonstrates how the Employee table can used twice query Emp Emp Sup Degree eno NOT Computer Science eno Executing and Saving QueriesWindows the query not the desktop needs read from file click File Open Query the menu bar and select the QBE file opened Execute the query the desktop select Query Run from the menu bar DOS Queries cannot loaded and saved and hence queries must built the desktop Press DoIt execute the chosen query Server Netscape Enterprise Date Wed Nov GMT Content type text html Course Outline ECE INTRODUCTION COMPUTER ARCHITECTURE Fall TENTATIVE COURSE OUTLINE denotes Additional material Course Account ece Thu Sep CDT 