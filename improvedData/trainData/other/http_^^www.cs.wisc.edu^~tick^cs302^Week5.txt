Date Wed Dec GMT Server NCSA Content type text html Last modified Sun Oct GMT Content length Section Lecture Notes Weeks Lecture Notes Week Topic Formatted input and output Reading and writing files Text Chp Notes Formatted OutputSo for have been using unformatted output PRINT Total TOT prints Total with extraneous spaces front the number The specifies use the default output format print the items the line Alternatively replace the with the label FORMAT statement which describes how print the items PRINT Total TOT FORMAT prints Total The FORMAT statement should immediately follow the PRINT statement The items the FORMAT statement are called edit descriptors and describe the appearance the line Each item the PRINT statement has corresponding edit descriptor the FORMAT statement specifying how print Edit DescriptorsThe first item the FORMAT statement describes the line spacing The most common single spacing specified FORMAT The edit descriptor depends the type the value being printed INTEGERFw REALAw CHARACTER strings insert spaces between items INTEGER IwINTEGERs are printed right justified columns the INTEGER shorter than columns wide then printed with leading blanks indicated TOT PRINT Total TOT cents FORMAT prints Total cents Negative INTEGERs are printed with leading minus sign the INTEGER longer than columns wide doesn fit the width specified then are printed instead TOT PRINT TOT FORMAT prints REAL dREALs are printed right justified columns and rounded decimal places MASS PRINT MASS FORMAT prints sure allow space for the sign negative and decimal place both which take additional column each CHARACTER AwCHARACTER strings are printed right justified columns the string shorter than columns then printed with leading blanks indicated CHARACTER NAME NAME Christopher PRINT NAME FORMAT prints Christopher the string longer than columns then left justified and the characters the end are truncated PRINT NAME FORMAT prints Christop Use with width specified print the string the same number columns its declared length PRINT NAME FORMAT same Insert Spaces nXSpaces blanks can inserted between any two items the PRINT statement PRINT Hello there world FORMAT prints Hello there world PRINT StatementThe edit specifiers can inserted directly into the PRINT statement without using separate FORMAT statement and label NAME Christopher PRINT NAME The edit descriptors are enclosed brackets and apostrophes Formatted InputUnformatted input All the data the line has read into variables Multiple values the same line must separated spaces Strings must entered enclosed apostrophes the format the input data does not match these requirements then formatted input must used instead Example multiple values separated hyphen Please enter today date IMPORTANT Formatted input specifies which columns are read and which are skipped Use FORMAT statement with edit descriptors specify the type and width each value read READ MONTH DAY YEAR FORMAT Note line spacing specified for formatted input Edit DescriptorsSame descriptors formatted output INTEGERFw REALAw CHARACTER strings skip characters between values INTEGER IwRead only the next digits INTEGER value READ NUM FORMAT User enters NUM User enters NUM Only digits are read Any additional digits are ignored REAL dRead only the next digits REAL value where the last digits are the right the decimal point READ PRICE FORMAT User enters PRICE WARNING The decimal place optional missing the computer uses determine where should have been User enters PRICE the user does enter decimal point then over rides the value User enters PRICE Only digits are read Any additional digits are ignored CHARACTER AwRead the next letters CHARACTER string and store them exactly entered CHARACTER NAME READ NAME FORMAT User enters Kilroy junior NAME Kilroy not specified then read the same number characters the declared length the variable READ NAME FORMAT User enters Kilroy junior NAME Kilroy Note The string not enclosed apostrophes READ NAME User enters Kilroy NAME Kilroy Skip Characters nXSkip over characters the input comma hyphen CHARACTER NAME READ NAME YEAR FEES FORMAT User enters Kilroy Joe NAME Kilroy Joe YEAR FEES Reading and Writing FilesInteractive processing reads data from the keyboard and prints the results the screen Batch processing reads data directly from file disk and stores the results another file disk OPEN StatementBefore you can read write file must opened The OPEN statement specifies the name the file assigns unit nummber and specifies whether the file will read from written OPEN UNIT FILE MYDATA STATUS OLD OPEN UNIT FILE RESULTS STATUS NEW read from file STATUS OLD write file STATUS NEW Any unique number can used for the UNIT number except and which are reserved for the keyboard and screen Reading From FilesUse modified READ statement read from file rather than the keyboard Note comma before the list variables READ unit number variables READ Must OPEN the file before you can read from Can also read formatted data from files READ FORMAT the line contains more data than read then the rest the line ignored the line contains less data than read the the next line also read Writing FilesUse the WRITE statement write file rather than the screen Note comma before list items WRITE unit number items WRITE The answer Must OPEN the file before you write Can also write formatted data files WRITE FORMAT Batch ProcessingCan read write several files the same time Each file must have unique unit number OPEN UNIT FILE DATA STATUS OLD OPEN UNIT FILE DATA STATUS OLD OPEN UNIT FILE RESULT STATUS NEW READ NUM READ NUM WRITE NUM NUM Can still read from the keyboard and write the screen the same time READ NUM PRINT Please enter number READ NUM WRITE NUM NUM you are reading from file you don need prompts redundant End File writing When you have finished writing everything output file write special end file marker the end END FILE UNIT Must the last thing written the file CLOSE StatementWhen you have finished using either input output file then CLOSE READ NUM READ NUM WRITE NUM NUM END FILE UNIT CLOSE UNIT CLOSE UNIT CLOSE UNIT Usually these are last few statements your program before the STOP and END End File reading Unlike the keyboard where the user can always keep typing eventually all the data file will read When there more data read the computer will reach the end file marker Generally you want something special when this happens for example exit loop modified READ statement jumps CONTINUE statement when reaches the end file marker OPEN UNIT FILE DATA STATUS OLD SUM Add all the numbers the file WHILE TRUE READ END NUM SUM SUM NUM END Reached the end file print the sum CONTINUE PRINT SUM CLOSE UNIT STOP END Normally the CONTINUE the first statement after the end END loop Similar GOTO statement exit the loop Exits the loop when the READ statement executed and there more data read not immediately after the last number read Copyright copy Modified from Gareth Bestor bestor wisc edu Last modified October 