Date Mon Dec GMT Server NCSA Content type text html Last modified Wed Mar GMT Content length Lab Laboratory Using virtual camera Introduction This exercise introduces the concept virtual camera The virtual camera set transforms which takes representation set objects and arranges for them shown window analogy film camera transforms the world into fixed size image viewed from certain point with certain focal length lens For virtual camera will need specify where the camera where pointed the width the field the camera and perhaps other parameters which real camera cannot have clip planes variable aspect ratio Procedure First you need download several example files this click each the filenames shown below When the text window opens use the save option put the file your own directory Name each file with the same name shown below CameraIntro net CameraIntro cfg cameraINscene net cameraINscene cfg Open the program CameraIntro net and its control panel When you execute you will see that two image windows are opened One controlled the familiar Image module The other controlled Camera and Display module The Camera module gives you explicit control the viewing parameters Whereas the image module always points the scene default explicit Camera can point anywhere you want and can controlled the program itself the control panel switch the selectors the Animate position and run the sequencer The position the Camera the from parameter and the direction are now function time The contents the two compute modules which control the camera are shown here Bugs found the program fragment hyperlink replace approxUP with norm approxUP the second compute module expression Assignment Model sitting table next simple still life Model camera floating space chassis lens tube lens Define interactors control the position look point direction and zoom angle the camera Use these interactors orient the camera space and control Camera module produce the image the camera would see Put the image the front the modeled shown the image below The cameraINscene program mirror very similar the set You will need convert the control interactors into rotations and translations the camera The Transform module allows you rotate arbitrary set basis vectors program fragment helps explain how take the three input vectors from and convert them camera rotation matrix Your program does not need show the recursive image the camera happens looking the screen See image below right more important able control the camera space and show the resulting image than make fancy set camera model Some results from Some results from prepared demo your program during section for maximum minutes You will graded the correctness the camera control and the readability the program You must document your code Layout small groups modules which fit one screen and connect them other groups with transmitters You should use transmitters receivers macros and comments the Notation field each module that you and the grader can understand the program Control panels any should well organized labeled and with the appropriate numeric ranges The Lab grading guide will filled out consultant during section evaluate your work Back Main Page Lab Last modified Land Copyright Statement MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Tuesday May GMT Architectural and Logic Synthesis Architectural and Logic Synthesis The abstracts papers members this group the above area are listed below Please use the email addresses the end each abstract get further details Chen and Wong Retiming for FPGA Logic Module Minimization Proceedings the IEEE International Conference Computer Design October consider the problem minimizing the number logic modules for Actel Actel sequential circuits make use the fact that flip flop the only destination its driving combinational block then both the flip flop and the combinational block can put sequential module Retiming technique applied minimize the number registers that can not merged with combinational blocks formulate the problem integer linear program show that the constraint matrix the integer program totally unimodular result can solve our logic module minimization problem optimally solving the linear relaxation the integer program Contact yaoping utexas edu Honghua Yang and Wong Edge Map Optimal Performance Driven Technology Mapping for Iterative LUT Based FPGA Designs Proceedings the IEEE International Conference Computer Aided Design Nov consider the problem performance driven lookup table LUT based technology mapping for FPGAs using general delay model the general delay model each interconnection edge has weight representing the delay the interconnection This model particularly useful when combined with iterative technology mapping process where the actual delays the placed and routed circuit are fed back the technology mapping phase improve the mapping based the more realistic delay estimation Well known technology mappers such FlowMap and Chortle only minimize the number levels the technology mapped circuit and hence are not suitable for such iterative technology mapping process Recently Mathur and Liu studied the performance driven technology mapping problem using the general delay model and presented effective heuristic algorithm for the problem this paper present efficient technology mapping algorithm that achieves provably optimal delay the technology mapped circuit using the general delay model Our algorithm non trivial generalization FlowMap key problem our algorithm compute feasible network cut such that the circuit delay every cut edge upper bounded specific value implemented our algorithm LUT based FPGA technology mapping package called Edge Map and tested Edge Map set benchmark circuits Contact yanghh utexas edu Yung Ming Fang and Wong Simultaneous Functional Unit Binding and Floorplanning Proceedings the IEEE International Conference Computer Aided Design November device feature size decreases interconnection delay becomes the dominating factor system performance Thus important that accurate physical information used during high level synthesis this paper consider the problem simultaneously performing functional unit binding and floorplanning Experimental results indicate that our approach combine binding and floorplanning superior the traditional approach separating the two tasks Contact fang cerc utexas edu Shashidhar Thakur Wong Shankar Krishnamoorthy and Moceyunas Delay Minimal Decomposition Multiplexers Technology Mapping International Workshop Logic Synthesis May Technology mapping requires the unmapped logic network represented terms base functions Technology decomposition the step that transforms arbitrary networks this form Typically such decomposition schemes ignore the fact that certain circuit elements can mapped more efficiently treating them separately during decomposition Multiplexers are one such category circuit elements They appear very naturally circuits the form datapath elements and result synthesis CASE statements HDL specifications control logic Mapping them using multiplexers technology libraries has many advantages this paper give algorithm for optimally decomposing multiplexers minimize the delay the network present the results mapping networks decomposed such scheme Actel and lsi libraries which are rich multiplexers Experimental results indicate that the quality the mapped circuits measured terms area delay and routability greatly improved when compared Huffman tree based AND decomposition scheme Contact thakur utexas eduShashidhar Thakur and Wong Simultaneous Area and Delay Minimum LUT Mapping for Exact NetworksInternational Conference Computer Design October address the technology mapping problem for lookup table FPGAs The area minimization problem for mapping bounded networks consisting nodes with most inputs using input lookup tables known complete for The complexity was unknown for and The corresponding delay minimization problem under the constant delay model was solved polynomial time the flow map algorithm for arbitrary values study the class bounded networks where all nodes have exactly inputs call such networks exact give characterization mapping solutions for such networks This leads polynomial time algorithm for computing the simultaneous area and delay minimum mapping for such networks using input lookup tables also show that the flow map algorithm minimizes the area the mapped network well for exact networks then show that for the mapping solution for bounded network minimizing the area and delay simultaneously can easily obtained from that exact network derived from eliminating single input nodes Thus the area minimization problem for input lookup tables can solved polynomial time resolving open problem Contact thakur utexas edu Date Tue Jan GMT Server Apache Content type text html Content length Last modified Tue Nov GMT Hand Program Hand Program Thomas Wallis Handin experimental program that wrote working from idea some source code Gopalakrishnan gave Make sure you have your terminal type set You can use the command this when you log you can use this command setenv TERM Handin has severe problems otherwise Handin works the following manner special account created the system for your class Your grader and you both have the password the students don program called handin installed the bin directory that account The student invokes the program like this account bin handin class assign file Example bin handin myprog Handin checks several things that you your grader need set the home directory for the class account there should file called students This lists the student usernames for your class one per line spaces tabs punctuation etc You your GTA must enter this data into the file subdirectory mode must created for each assignment number etc Assignment numbers must integers handin must installed setuid the grading account the bin subdirectory that You may have optional file called assignments dat the home directory the class account has the following format assignment due date comment The assignment must integer see above Due date MUST the format MMM YYYY FEB Comment can free form columns special characters please Semicolons are the delimiters this file One assignment per line Syntax important the handin parser very simple and will bomb bad data trusted files this file exists DUE DATES will ENFORCED ALL assignments Here how the program works briefly The student runs the handin program bin handin aaa Note that the userid and the classID must match handin looks the subdirectory usr users User classes for the students file the student not that file handin won let the student hand anything handin looks for subdirectory for the assignment number doesn exist then handin won let the student hand anything handin looks for the source files sees they are ordinary files that suit the syntax filenames must consist dots dashes underscores etc also checks see the student owns the file they are handing very simple check for attempted cheating Some versions handin limit the number files handed one command line five other versions increase this limit twenty files per command line watch out for wildcards the assignments dat file exists then due dates are enforced the file lists due date FEB when the comes around students will not able hand that particular assignment anymore handin creates subdirectory for that student the assignment subdirectory example usr users User classes the home directory for the grader account usr users User classes the home dir for assignment usr users User classes jones where all the files handed user jones The subdirectory and all the files there are owned the grader account not jones that where the suid comes jones cannot access this directory the files they are chmoded file handin log created usr users User classes also owned showing when student handed each file student hands file twice for the same assignment the handin program will detect that the file has already been handed and will ask the student they want overwrite This program EXPERIMENTAL Some classes have used already with trouble reports guess this good news The information accessible from this server provided good faith but neither the Wichita State University nor the Computer Science Department takes any lega responsiblity whatsoever for the accuracy content data displayed this server Please notify any error dectected Thank You 