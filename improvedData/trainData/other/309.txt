MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Wednesday Nov GMT Class List Fudan Classmate List Picture the Class China Section Huang XuanJing fudan cnYe DanJin csli fudan Zhao Jiehkcc macau ctm netBao Lulbao fudan cnMao DiLin dlmao fudan cnWu ChengRong cwu fudan cnYe XiaoMeng sherman fudan cnLin ssysc public sta net cnZhao Bin ssysc public sta net cnHua LiXin Shanghai People Insurance Company Pudong BranchFan Lei fanshi public sta net cnZhang Yiming wind public sta net cnHuang Bangyu ben psh ben jade pks pfu Current mail Wang Haibo wang psh Chen Ying ying chen VNET IBM COM Xie Jiebullsha public sta net Liu Jun stefan public sta net cnLee Yie liyege usa net yglee sotecnet sic Wang pub zjpta net cnXu JunJie jimmyxu attmail comWu XueBo XUE China comHua YiXing Ask ChengRong WuShen asunaro public sta net cnLi Shen Computer department Bank Communication Head Office Xian Xia Road Shanghai Tel Japan Section Zhang YiQiang Henry henry pfu Address NANAKUBO UNOKE MACHI KAHOKU GUN ISHIKAWA KEN JAPAN ZIP CODE Tel home Fax home mail henry nsknet Tel office Fax office Singapore Section Zhang XiaDong zhangxd cehgp com Fan Shiqing sqfan elm ncs com Zhu Chang Ask Shiqi Fan USA Section JianMing SLC Tel jwu swai comJiang Nan njiang cis ohio state edu Zhang LiXin MEB dept Univ Utah lizhang utah eduDu Fan dufan cps msu eduLin Ling llin eng eduZhou yzhou uic edu Tan Lei Raymond lei rhine duke edu raymondt microsoft comTang WeiYu wtang ICS UCI EDUWang HaiHong whh wisc eduSong SunTian eagles public sta net esong spartan cis temple eduYan Zhimei mayy informix com Cheng Xun Home Santa Ynez Apt Colegio Goleta Home Birthday Oct Nov Office xun ucsb edu Xiang YuanYuan yuanyuan utexas edu Guo HaiYing hguo crowechizek comJin Jingjing wpi edu Yan yye indiana edu Address Henderson Apt Bloomington Phone Yingjunyyu eecs wsu edu Zhou LiDong ldzhou Cornell EDU send mail all Last updated Nov Please send comment and report changes ldzhou Cornell EDU MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Tuesday Aug GMT What Cognitive Science What Cognitive Science Well would not enough for book define the term Cognitive Science relatively new academic decipline touching quite number areas Philosophy Mathematics Computer Sciences Anthropoloy Linguistics Neurobiology Architecture and Psychology Its aim discover the essence human intelligence and how could simulated formal computation like that the computer lot researhes have been going since the understand that paragraph two would not satisfy your curiosity please click the following icons and exploring more your own Goodluck CogSci WWW Directory Institute Neuroinformatik German National Research Center for Information Technology GMD Artificial Intelligence Research Division FIT German Research Center for Artificial Intelligence Knowledge Representation and Reasoning group IRST ITC Italy UTCS Neural Networks Research Group UTCS Machine Learning Research Group Laboratory University Chicago INRIA France School Cognitive and Computing Sciences USB Enterprise Integration Laboratory University Toronto Canada Artificial Intelligence Center AIC SRI International Neuroengineering and Neuroscience Center NNC formerly CTAN Yale Decision Theory Group Microsoft Research Association for Computational Linguistics ACL Date Tue Jan GMT Server NCSA Content type text html CAS Compiler Design Syllabus Syllabus for Summer Session Instructor Wayne Snyder Office MCS Office Phone email snyder Office hours Tues Wed Thurs Prerequisites and Equivalent see instructor Time and Place MTWR room MCS Textbook Compilers Principles Techniques and Tools Aho Sethi and Ullman required and Lex Yacc Levine Mason and Brown Reilly Associates Inc recommended for the project shall occasionally hand out notes topics such attribute grammars and attribute evaluation which are not covered sufficiently formally the text will also occasionally make materials such handouts and assignments available over the World Wide Web Assignments and Tests There will approximately problem sets assigned during the course midterm and cummulative two hour final There will also programming project which you will start yourself and finish groups the project implement small compiler for subset Pascal using the compiler construction tools available Unix Lex and Yacc The project will broken into pieces due separately Your final grade will determined approximately follows problem sets project midterm final makeup tests will given and there will penalty day for late assignments and projects Projects and assignments are due the due date under office door Topics This course introduction one side the rather large field the implementation programming languages will only cover the theory compiler design for imperative languages For the most part will follow the textbook covering the major part chapters time permits will cover some material chapter well the past this course has emphasized theory over practice since that interest and have not spent much time code generation This time will try save some time earlier covering fewer topics lexical analysis and parsing and spending more class time code generation for hypothetical machine The project will reflect the material covered and will try get the point actual code generation for Pascal programs without structured data procedures Note You should periodically read your mail and look the main web page get messages about changes office hours corrections homeworks projects etc will try answer mail sent timely fashion but this not always possible haven responded mail message within hours catch after class office hours instead Date Tue Nov GMT Server NCSA Content type text html Last modified Wed Sep GMT Content length Assignment HandoutCS Assignment Introduction Due Date Time Thursday October IntroductionThe purpose this first programming assignment provide experience with Unix using editor emacs doing simple programming and using the gnu compiler and its debugger gdb have provided partially written but fully specified program Your job complete and thoroughly test the program More specifically the program implements abstract data type ADT for handling bounded integer sequence IntSequence Your JobThe IntSequence ADT will represent sequence integers stroring the numbers array integers The internal representation consists the current length the sequence plus statically sized array integers that hold the sequence current contents The IntSequence type supports five operations each which takes the integer sequence its first argument void clear IntSequence seq void append IntSequence seq int value int length IntSequence seq void printN IntSequence seq int number void sort IntSequence seq The clear operation initializes reinitializes sequence empty contain zero elements The append operation puts new value the end sequence The length operation returns the number elements currently sequence The printN operation prints the first values sequence where the number values argument the operation The sort operation sorts the integers sequence into ascending order make your job simple and clear possible have provided three files intseq intseq and prog The file intseq contains complete specification the ADT you should not edit this file The file prog contains complete main routine that serves test driver for your ADT implementation you should not edit either Your job make copy the file intseq which contains stubbed out functions for the ADT operations and add the actual implementation code You can then debug and test your code using gdb and the driver routine prog have provided small set test data files but you should add more test cases find the important cases that our files fail exercise How SortTo write the sorting function you should use very simple sorting scheme known insertion sort This algorithm sorts array data stepping through the array element time and keeping everything the left the current element sorted understand how this approach works think the array being laid out from left element right element assuming that the array contains elements the algorithm steps through the array from left right each step the current element copied out the array and inserted into its appropriate place the sorted subarray the left the position that was copied from Inserting the element requires that all elements with greater values than the element slide one position right make space efficiency hint The tasks finding the appropriate insertion point for the current element and sliding greater elements the right can combined This can done scanning left from the position from which the current element was copied sliding each element one space the right its value exceeds that the current element The insertion point will known and spot will open when you either find lesser value bump into the left end the array What Turn InYou must turn copy all source files including intseq and the other files needed compile your program file named README that explains exactly what should compile your files into executable program that can run listing your test cases Everything must turned electronically paper copies are not acceptable have created directory for each student turn his her assignment The following command copies file into student handin directory filename public handin prog username You should replace filename with the name the file you want submit and replace username your login name REMEMBER late assignments will accepted Thus important that you start working soon and finish time However partially finished programs are far better than programs all sure turn whatever you done even you don finish the assignment However finishing should not problem for anyone this first programming assignment you can finish this assignment which simple warm exercise you should seriously think your decision take this course The remaining assignments will all considerably more challenging Finding Using Our FilesFiles for live the directory public html The three files that provide and the test data files are subdirectory this directory called assign You should make yourself copy the file that you will modifying intseq Assignment subdirectory your home directory make subdirectory for this purpose the private subdirectory your home directory private create subdirectory there mkdir assign and assign You can then copy the code file public html assign intseq For the other two files you should create links our files public html assign intseq that you will always using the same definitions and initial test data files everyone else 