MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Monday Mar GMT Resolution Independent Video Language ACM Multimedia Electronic Proceedings November San Francisco CaliforniaA Resolution Independent Video Language Jonathan SwartzDepartment Computer Science Upson Hall Cornell University Ithaca swartz cornell edu Brian SmithDepartment Computer Science Upson Hall Cornell University Ithaca bsmith cornell eduhttp www cornell edu Info Projects zeno rivl rivl html This work supported funding for the Xerox Design Research Institute and the Air Force under contract ACM Copyright Notice Table ContentsABSTRACT INTRODUCTION THE RIVL LANGUAGE Image Operations Sequence Operations THE RIVL INTERPRETER Implementation Image Computing Implementation Sequences Memory Management RELATED AND FUTURE WORK REFERENCESAbstract common video processing programmers still implement video programs manipulations arrays pixels This paper presents language extension called Rivl pronounced rival where video first class data type Programs Rivl use high level operators that are independent video resolution and format increasing program portability simplifying code reuse and reducing development time This paper also describes Rivl interpreter and the strategies the interpreter uses optimize Rivl programs These optimizations include classical programming language optimizations such common subexpression elimination and out order execution image and video specific optimizations such computing only those images that will affect the output and optimized memory manager Introduction order support the development multimedia applications programming languages should include audio video and images true data types just characters text and numerical values are true data types today languages The operators multimedia language should format independent that video and images different formats can easily intermixed like integers and floating point numbers most modern programming languages The operators multimedia language should resolution independent that high low resolution input data produces better worse results just like single and double precision floating point numbers produce more less accurate results numeric computations Platform independence and code reuse will useful side effect multimedia programming languages and just optimizing and parallel compilers can take existing programs and make them run faster optimizing multimedia compilers will speed multimedia programs Rivl pronounced rival language extension and optimizing system designed with these goals mind Rivl provides video data type and video operators that are format and resolution independent Format independence means that MPEG video can freely intermixed with JPEG Postscript and uncompressed images Resolution independence means that operations Rivl cut the first five seconds the video clip are well defined whether the film resolution frames per second the image size These features relieve the programmer tedious low level details and allow runtime system execute Rivl program quickly low resolution data for crude output for prototyping debugging and slowly high resolution data for more refined output Rivl approach video manipulation has significant advantages over current approaches Rivl programs are easier read write and maintain than their low level counterparts Rivl code platform independent Rivl expresses video and image editing operations format and resolution independent way Rivl separates the description video operations from their implementation allowing the Rivl runtime system improve the execution efficiency Rivl programs have implemented interpreter for Rivl extension the Tcl language approach that allows easily embed Rivl other applications This paper describes the design and implementation the Rivl language the Rivl interpreter and its optimizer The rest the paper organized follows Section illustrates the Rivl language through series examples Section discusses the Rivl interpreter and how optimizes image and video operations Section reviews related work and concludes with current status and future research directions The Rivl Language This section illustrates Rivl programs through series examples Since Rivl extension Tcl Rivl programs have access all the primitives the Tcl language Rivl extends Tcl with two data types images which represent still images and sequences which represent video segments timestamped set images Table lists some the Rivl primitives for manipulating images and sequences The table divided into five classes Input output Currently supported formats include pgm ppm JPEG MPEG and Postscript Geometric The image operations this class move and resize the image the sequence operations speed slow down and temporally shift the sequences Assembly This class provides cut and paste type operations images and sequences Conversion This class provides functions convert between images and sequences and map image operations over the frames sequence Transforms Image transforms used this paper Sections and contain examples that clarify the use image primitives and sequence primitives respectively Table Image and sequence primitives Type Image Sequence Description operations operations Input Output read seq read Read image sequence from disk write seq write Write image sequence disk Geometric trans seq shift Translate image space shift sequence time scale seq scale Scale image space scale sequence time rotate Rotate image around its center Assembly crop seq crop Crop the specified region make new image sequence concat seq concat Concatenate multiple images sequences end end overlay seq overlay Overlay multiple images sequences place Conversion ims seq seq ims Convert between list images and sequence seq map Apply script each image the sequence Transforms fade Fade the image specified percentage resample Resample the image specified size blur Apply blur filter the image mask Make transparent all pixels below certain intensity Image Operations Consider the following Rivl fragment set image scaleC image expr set image rotateC image expr Program Whirlpool effect image Rivl image and floating point value between and The first line calls scaleC shrink image about its center factor and assigns the result image The second line calls rotateC rotate image about its center and again stores the result image Figure shows the effect this fragment with several values The repeated use set this fragment cumbersome remedy this problem borrowed idiom from Scheme any operator with the character appended destructively modifies its first argument Taking advantage this notation can rewrite program scaleC image expr rotateC image expr Notice that the destructive operation omits the front its first argument whereas the non destructive form requires the This artifact caused the way Tcl implements pass reference point discuss related paper More complex effects can constructed using Tcl constructs for looping branching procedure creation and recursion The Rivl program figure creates fractal Sierpinski Gasket from arbitrary image Figure Output from program for Figure Fractal program and output for Sequence Operations sequence the Rivl abstraction for video can thought set time stamped images Like image commands sequence commands can composed express new operations For instance common video editing operation assembly when two sequences are connected and written The following Rivl fragment assembles the first seconds the sequence raiders mpg and the sequence bobo mpg writing the result out mpg all files are MPEG format set raiders seq read raiders mpg set bobo seq read bobo mpg seq crop raiders seq write seq concat raiders bobo out mpg important primitive Rivl seq map seq map applies image effects sequences executing given script for each image sequence and combining the resulting images into new sequence Seq map similar map Scheme For example consider the command seq map clip resample Seq map evaluates the template command resample each image clip substituting the current image wherever appears the template The results are gathered and returned new sequence Thus this command returns new sequence containing thumbnail versions the images clip Sometimes rather than applying the same operation each image sequence desirable vary the operation over time For example consider the operation fading sequence black This effect can achieved calling fade each image the sequence with parameter that decreases over time this case seq map must call procedure with parameter that indicates the time the image being modified this end seq map performs the following additional substitutions Substitute the time stamp the current image seconds Substitute the length the sequence seconds Substitute the relative time the current image divided Using this mechanism fade black can expressed seq map clip fade expr When combined with sequence assembly operations seq map simplifies the expression effects that are often used transitions between two parts movie For example the procedure figure connects two sequences with transition The first parameter transition script passed seq map MovieA movieB are the two sequences joined and duration the time seconds apply the transition effect Thus connectWithTransition fade expr jack jill connects two sequences jack and jill with five second fade proc connectWithTransition transition movieA movieB duration set lengthA seq length movieA set lengthB seq length movieB Untouched parts first and second movie set begin seq crop movieA expr lengthA duration set end seq crop movieB duration lengthB Apply timed effect end first movie overlay with beginning second movie set mid seq crop movieA expr lengthA duration lengthA set mid seq crop movieB duration set middle seq overlay seq map mid transition mid seq concat begin middle end Figure Procedure connect two sequences with arbitrary transition The Rivl language extension thus provides powerful notation for programming with video Rivl high level semantic description video operations also allows the interpreter optimize the execution Rivl programs The next section describes these optimizations The Rivl Interpreter This section discusses the implementation the Rivl interpreter the first two subsections discuss the efficient implementation image and sequence operations the third subsection discuss memory allocation issues for video computing and describe Rivl custom memory management system Implementation Image Computing There are two ways optimize still image computing First must make sure that individual image operations such scales rotations etc are efficient These issues have been addressed length the graphics literature and good algorithms are readily available Second must intelligent about which operations call what order achieve our final result feature Rivl that allows exploit the second type optimization lazy evaluation also known demand driven execution Rivl only computes video data when needed for output display The result that computation time Rivl can plan more intelligent computing strategy than each command were executed immediately and independently The Rivl interpreter alternates between two modes operation graph construction mode and graph evaluation mode graph construction mode the interpreter evaluates Rivl programs recording and storing operations directed acyclic graph DAG whose edges correspond images and whose nodes correspond primitive operations scale overlay This process typically very fast since image operations are recorded but not executed effect the DAG represents dynamic instruction trace the Rivl program execution Consider the following program which overlays scaled and rotated version the image tiger jpg onto the image flowers jpg set tiger read tiger jpg scaleC tiger rotateC tiger set flowers read flowers jpg blur flowers overlay tiger flowers write out jpg Figure shows the graph created this program Both scaleC and rotateC are implemented with pair translations surrounding scale rotate the translations move the origin the scale and rotate operations the center the image Figure Sample image graph call write triggers the graph evaluation mode principle the Rivl interpreter traverses the graph from inputs output computing intermediate images until the output image computed But before computing the images the interpreter perform several optimizations Two optimizations graph restructuring and result region calculation are described below Graph restructuring The first optimization modifies the graph its output equivalent but the computation more efficient Such modifications include combining swapping adjacent nodes For example figure contains six adjacent affine transformations Rivl collapses these nodes into single affine transform figure This optimization improves both the computation speed and the quality the final image reducing the number times the image resampled Result region calculation The second optimization introduced Shantzis compute only those regions each intermediate image that affect the final result our example program only small portion flowers visible the final result figure right sufficient read and blur only this portion Rivl calculates regions for intermediate images for every edge the DAG the have region the need region and the result region The have region edge the region pixels provided the edge left node The need region edge the region pixels needed the edge right node Finally the result region the intersection have and need This intersection contains all the pixels that both have defined values and affect the final output image Only the pixels inside the result region need computed Figure shows the regions computed for each intermediate image our example graph particular only small region calculated for each the two lower images Following these optimizations the Rivl interpreter computes the graph result image writes the image disk and returns processing commands graph construction mode Figure Restructured image graph Result regions Implementation Sequences Our implementation sequences borrows many ideas from our implementation images since many still image optimizations prove especially beneficial for sequence computing will use scrolling titles sample task motivate this section The following program adds scrolling credits the last seconds second minute movie set credits ims seq mask read credits seq map credits trans expr seq scale credits seq shift credits expr set raiders seq read raiders mpg set outseq seq map credits raiders overlay seq write outseq out mpg Program Adding scrolling credits the end movie The titles are stored Postscript program that generates long image The mask function makes the titles background transparent The program converts the image one second sequence credits scrolls credits upwards over time using seq map and scales and shifts credits the desired time range sec The final seq map overlays the titles onto the raiders movie and the result written the file out mpg Like image commands sequence commands are stored graph called the sequence graph until the sequence computed response seq write command Figure shows the sequence graph for program which each node corresponds with one line the program The sequence graph used generate set image graphs that correspond the sequence individual frames Figure Sequence graph for scrolling titles Suppose want compute the frame the output sequence time perform two passes over the sequence graph backward pass and forward pass the backward pass compute timestamp for each edge edge timestamp indicates the time value that edge that influences output frame traverse the graph each seq scale and seq shift node encounter potentially alters the timestamp The top figure shows the timestamps computed for the forward pass build image graph corresponding output frame traverse the sequence graph each seq read and seq map node encounter adds node the image graph seq read uses the timestamp determine which frame read seq map uses the timestamp when substituting values for and The bottom figure shows the image graph computed for compute the whole sequence repeat the image graph generation algorithm for all relevant output times increment fps where fps the desired frame rate frames sec the output sequence For program ranges from The resulting graphs are merged into single compound image graph shown figure Figure Generating the image graph for Figure Image graph for entire sequence The optimizations section are used process the compound image graph produce the output images along with two additional optimizations image subgraph reuse and direct transfer detection Image subgraph reuse figure the subgraph containing read credits and mask replicated many times more efficient use single subgraph with multiple output edges shown figure this way the pixels credit are read and masked only once and the various trans nodes share common input general Rivl detects and merges redundant image subgraphs whenever possible form common subexpression elimination Direct transfer detection our example the first seconds raiders mpg appear unchanged the output obvious optimization avoid unnecessary decompression and compression copying the compressed data directly the output formats such MPEG direct copying not always possible every frame since MPEG sequences contain frames that are encoded differences from other frames and cannot decoded isolation However MPEG streams are often divided into groups pictures GOPs usually frames long that are independent from other GOPs When reading and writing MPEG Rivl transfers groups pictures directly whenever possible Figure Image graph for entire sequence with shared subgraph Memory Management addition optimizing image and sequence calculation the Rivl interpreter contains custom memory management module cache previously computed images and cope with very large images understand the utility caching images consider the evaluation the graph figure The output the mask node used many times advantageous cache this image The Rivl memory manager detects this case freeing each image only when longer needed the current graph evaluation Another issue whether store images after graph evaluation ends Interactive applications Rivl often require repeated evaluations slightly changing graph Because the language restricts the way image graphs can modified the image associated with edge remains accurate for the lifetime the graph and can cached Unfortunately have special knowledge about which images cache for future graph evaluations principle the user can access any edge that was ever created Mistakenly discarding data nonfatal since can always recompute the data but such mistakes hurt performance address this issue Rivl provides priority command allow applications set the priority image The memory manager discards low priority images and keeps high priority images memory For instance video editor built using Rivl calls priority raise the priority displayed images that the results special effects can quickly viewed are looking into algorithms and heuristics for automatic priority adjustment For example images generated expensive operations and images that have been referenced repeatedly the past are candidates for high priority The initial implementation Rivl treated images indivisible memory buffers Unfortunately this representation performed poorly for large images The Rivl memory manager divides large images into non overlapping pages manageable size figure Pages are handled independent entities the memory manager allowing image cached parts addition large images with considerable blank space are efficiently represented set non contiguous pages figure Figure Dividing large image Representing sparse image illustrate the utility Rivl memory management policy consider the execution the scrolling titles program program under standard memory model which the entire image read into virtual memory buffer for the duration the program Assuming color image this requires storage contrast Rivl accomplishes the task follows The title region divided into ten equally sized pages given Rivl current maximum page size Rivl allocates loads and masks each page data only when necessary The results each call mask are cached for future requests Rivl discards pages soon they are longer needed The memory footprint enough for Rivl hold two pages once summary the Rivl interpreter uses variety strategies optimize execution Rivl programs They are Graph restructuring Combining reordering nodes the graph for speedResult region calculation Computing only the parts image that affect the outputDirect transfer detection Copying compressed data directly the output when possibleImage subgraph reuse Sharing common subexpressions the image graphImage caching Caching images they are needed later the graph evaluationImage subdivision Dividing large images into manageable pieces Related and Future Work Many commercial packages are available that provide software libraries image manipulation functions Some use demand driven execution achieve similar optimizations those mentioned section These include the Pixar system described Shantzis and Silicon Graphics ImageVisionLibrary Holzmann Popi allows image transformations specified with concise expressions run time mechanism that permits rapid prototyping new image primitives are adapting this idea Rivl None the above mentioned systems provide language support for motion video Some systems Data Explorer Khoros provide graphical programming environment where image programs are expressed flowcharts Although this way expressing image operations improvement over pixel manipulation the limitations flowcharts for expressing complex programs are well known Furthermore the support for motion video operations these systems limited non existent Matthews Gloor and Makedon VideoScheme combines Apple QuickTime movie player with Scheme based video manipulation language VideoScheme the user works with objects close the underlying implementation video data such pixel arrays and frames This low level access gives users considerable flexibility creating new image operations For example algorithms for detecting cuts video can easily built out pixel array primitives contrast Rivl high level abstraction allows exploit delayed computation for improved efficiency and its resolution independence makes programs more portable Rivl implemented with lines code and lines Tcl code has been ported the Sun HPUX and Linux operating systems Rivl has been used build simple video editor Rivl and its editor can found http www cornell edu Info Projects zeno rivl rivl html The Rivl language still evolving are extending the core set Rivl primitives support other types video processing such image analysis computer vision and morphing With the right primitives hope build rapid prototyping environment for exploring video content processing are also building parallel implementation the Rivl interpreter using workstation clusters this implementation Rivl program will run quickly using low resolution images small cluster slowly using high resolution images small cluster and quickly using high resolution images large cluster The interpreter will automatically parallelize the Rivl program using both coarse grained parallelism one image one process and fine grained parallelism one image multiple processes References Aho Sethi and Ullman Compilers Principles Techniques and Tools Reading Mass Addison Wesley Data Explorer software package IBM Foley Computer Graphics Principles and Practice second edition Reading Mass Addison Wesley Holzmann Gerald Popi Bell Laboratories Murray Hill Gall MPEG video compression standard for multimedia applications Communications the ACM April Vol Num Matthews James Peter Gloor and Fillia Makedon VideoScheme Programmable Video Editing System for Automation and Media Recognition ACM Multimedia Proceedings Pennebaker JPEG still image data compression standard Van Nos and Reinhold New York Poskanzer Jef The Extended Portable Bitmap Toolkit PBMPLUS Postscript Adobe Systems Incorporated Mountain View Shantzis Michael Model for Efficient and Flexible Image Computing SIGGRAPH Proceedings Ousterhout John Tcl and the Toolkit Addison Wesley Massachusetts Rasure and Kubica The Khoros Application Development Environment Experimental Environments for Computer Vision and Image Processing editor Christensen and Crowley World Scientific Silicon Graphics Inc ImageVision Library Silicon Graphics Inc Mountain View Swartz Jonathan and Smith Brian RIVL Resolution Independent Video Language Submitted the Tcl Workshop July Toronto http www cornell edu Info Projects multimedia rivl tcl Footnotes The Rivl image type unrelated the Tcl canvas image type Date Tue Jan GMT Server NCSA Last modified Fri Dec GMT Content type text html Content length Research CommitteesResearch CommitteesThis page contains links the committee membership all committees that report the Vice President for Research The names committee members are linked their entries the Directory Advisory Committee Classified Research Committee Objectivity ResearchDigital Information Science and Communications ResearchInstitutional Animal Care and Use CommitteeInstitutional DNA Biohazards CommitteeInstitutional Review BoardIntellectual Property CommitteeRadiation Safety CommitteeResearch Safety Advisory CommitteeResearch Infrastructure Enhancement Committee RISE Advisory Committee Classified ResearchDr Marye Anne Fox Vice President for Research ChairDr John DollardDr Sheldon Ekland OlsonDr Harry FairDr John HowellMr Wayne KuenstlerMrs Patricia OhlendorfDr Michael PestoriusDr Peter RileyCommittee Objectivity ResearchDr George Huber ManagementDr Peter Riley Associate Dean College Natural SciencesDr John Howell Associate Dean for Research College EngineeringMs Patricia Ohlendorf Office the Executive Vice President and ProvostMr Wayne Kuenstler Office Sponsored ProjectsDigital Information Science and Communications ResearchDr Marye Anne Fox Vice President for Research ChairDr Judy Langlois PsychologyDr Ellen Wartella Dean College CommunicationDr David Hillis ZoologyDr Allen Bard Chemistry and Biochemistry Ben Streetman Electrical and Computer EngineeringDr John Breen Civil EngineeringDr Mark Yudof Vice President and ProvostDr Jim Browne Computer ScienceInstitutional Animal Care and Use CommitteeDr Paul Gottlieb Microbiology ChairDr Karen Artzt ZoologyDr Lee Baker Electrical and Computer Eng Claud Bramblett AnthropologyMs Carol FarmerDr Roger Farrar Kinesiology and Health EducationDr Jerry Fineg Director Animal Research CenterDr Terrence Monk PharmacyDr Tim Schallert PsychologyDr Richard Willis Human EcologyInstitutional DNA Biohazards CommitteeDr John Robertus Chemistry and Biochemistry ChairDr Jerry Fineg Animal Resource CenterDr David Garcia President CEDRA CorporationDr Paul Kreig ZoologyMr Thomas McGarity LawDr Maureen McReynolds City Austin Rasika Harshey MicrobiologyInstitutional Review Board Clarke Burnham Psychology ChairDr Lawrence Abraham Kinesiology and Health EducationDr Lynn Crismon PharmacyDr Rodger Dalston College CommunicationDr Ray Johnson Student Health CenterDr Diane Schallert Educational PsychologyMs Paulette Braeutigam Office the ProvostDr Ruth McRoy School Social WorkDr Beverly Hall School NursingMr Larry Mejia Seton East Community Health Center Intellectual Property CommitteeDr Austin Gleeson Physics ChairMs Paulette Braeutigam Technology Licensing CoordinatorMr Dudley Dobie Office General Counsel System Linda Hayes Asst Dean for Research College EngineeringDr Dale Klein Associate Dean for Research and Adm College Engineerin gDr William Koros Chemical EngineeringMr Wayne Kuenstler Ofc Sponsored ProjectsMr Mark Lemley LawMs Renee MallettDr James McGinity PharmacyMrs Patricia Ohlendorf Vice ProvostDr Juan Sanchez Associate Vice President for ResearchMr Joe Powell Associate Vice President for Business AffairsDr Bob Sanders ZoologyMr Lee Smith Assistant for Business AffairsDr John Mike White Chemistry and BiochemistryRadiation Safety Committee Eldon Sutton Zoology ChairDr Gerald Hoffman PhysicsDr Dale Klein Associate Dean for Research and Adm College Engineering Stephen Monti Vice ProvostDr Jon Robertus Chemistry and Biochemistry Juan Sanchez Assoc Vice President for ResearchDr Bernard Wehring Mechanical EngineeringMr John White Radiation Safety Officer Gary Monroe Director Environmental Health and SafteyResearch Safety Advisory CommitteeDr Dean Neikerk Electrical and Computer Engineering ChairDr Coyle Kinesiology and Health EducationDr Boyd Hardesty Chemistry and BiochemistryMr Timothy High ArtDr James Kehrer PharmacyDr Gary Monroe Environmental Health and SafteyDr Stephen Monti Vice ProvostMrs Patricia Ohlendorf Vice ProvostDr Peter Riley Associate Dean College Natural Sciences Juan Sanchez Assoc Vice President for Research Eldon Sutton ZoologyMr Michael Vandervort Associate Vice President and Business Manag erMr Joe Ward Vice President for Business AffairsDr John Howell Assoc Dean College EngineeringDr Grant Willson Chemical EngineeringDr Desmond Lawler Civil EngineeringDr Karl Frank Ferguson Structural Research Lab Chip Rogers OEH SPaul Szaniszlo MicrobiologyResearch Infrastructure Enhancement Committee RISE Juan Sanchez Associate Vice President for Research ChairDr Suzanne Barber Assistant Professor Electrical and Computer Engineering Thomas Barnes III Director McDonald Observatory Alan Campion Professor and Chair ChemistryDr Alejandro Delozanne Professor PhysicsMr Randy Ebeling Director Data ProcessingDr John Howell Associate Dean for Research College EngineeringDr George Huber Associate Dean for Research College BusinessMr Wayne Kuenstler Director Office Sponsored ProjectsMs atherine Miller Director Office AccountingMr David Odom Contracts and Grants Manager Office AccountingDr Alba Ortiz Associate Dean for Academic Affairs Research Education Joe Powell Associate Vice President for Business AffairsDr Peter Riley Associate Dean for Research Natural SciencesDr Brian Roberts Associate Dean for Academic Affairs Research Liber ArtsDr Roy Schwitters Professor Department PhysicsMr Floyd Self Director Purchasing OfficeMr Michael Vandervort Associate Vice President and Business ManagerMr Joe Ward Associate Vice President for Business Affairs Mark McFarland General Libraries Electronic Information Programs OfficeMr John Rishling Associate Director Physical PlantMr Sid Sanders Assistant Director Physical Plant Top Page The Research Web Austin Central Server www lib utexas edu Last Modified Dec Date Wednesday Jan GMT Server NCSA MIME version Content type text html Last modified Wednesday Nov GMT Content length Personal BackgroundMy Personal BackgroundStill trial version here bear with grew Westlake Ohio suburb Cleveland Ohio much maligned city was suburb much like any other suburb will leave that Though life not profoundly interesting number times life can classified defining moments and personality Those who know may ask Was Steve always Computer Geek The answer can only yes suppose first defining moment must early grade school when aunt bought first computer The rest computing nature self evident Also can not neglect mention years Geek Training that have been influential Geek Training Gifted Talented grade school years through junior high are much blur The end junior high and years through high school also mark defining moment for when met first love Those who know the story also know why was quite influential attitudes and beliefs miss her influence life quite bit and still learning how get around the world without her The transition time between high school and college was also very turbulent time and glad have met completely different group friends this time especially one Vicki Fairchild She was very special and times felt our souls were intertwined somehow Unfortunately repeating pattern life that such strong close friendships seem dissolve rather quickly rather unexplainably and with much pain Will Remember You Vicki hope you have dealt with our distance better than The latest defining moments have occurred Hiram College know different person would have been without the influence Henry Hall should that Herny dorm know sounds odd that building would have much influence but and the people attracted definitely did was hour quiet dry dorm which conjures images uptight people living morgue However was nothing all like that Because the residents aversion heavy drinking and the rural nature Hiram amusements and diversions other than the ordinary had created Some the stranger moments were Toilet Paper Fights Pit Soccer and Salt Ball The huge often approaching violent tickle fights and the wild Power Outages deserve mention also However the most important part Henry Hall the most special was the almost living Henry Lounge There quiet kind magic about the Lounge This was gathering place for large group the residents Henry simple apparently mundane lounge However went way beyond place watch True the only time the was off was the aforementioned power outages but generally people weren there watch became community microcosm society perhaps but society that generally worked well You see you could always count someone being the lounge Someone you could talk vent merely with whether you knew them not Conversation always ranged between deep serious discussions and frivolous oddball talks Many philosophical and intellectual discussion has occurred there including the nature people ghosts logic emotion the post Frankenstein brain argument Not always was the conversation pleasant often was also discussing betrayal friendship and resistance change well griping against the administration classes Other negative aspects such the Viper Crew that all are part some way another also manifested Emotions were often high both ways healthy and unhealthy Generally however the Lounge shaped and adapted most people Because its strange and eclectic nature the first place many people lives where they can truly themselves without fear that unusually unique thing and perhaps the most important Often people did not know who they really are until the Lounge they have the freedom explore themselves their personality and their beliefs the shadow Lucifer the candy machine Every year the lounge was different but still held the magic Change inevitable but hope that Henry lounge will never lose its persistence and its life There have been many people from Henry that have meant very much you know who you are hope remain contact with all you Dan Toth deserves special note because was not from Henry sometime wonder and are actually one person some alternate universe somewhere Finally come girlfriend Betsy hope add here the future picture her and perhaps have her add some information about herself have been dating since the Winter things are going well between even through the painful distance between Hiram and Rochester Hopefully will together again soon Many important people and events have left out for did not feel like writing autobiography this time however feel like mentioning early friend Tony Skelley and people have known and stayed contact with since grade school Sean Lehlbach and Charlotte Lee the way hope you Henry people like this background and feel this more interesting than before know hear about otherwise smile Some more information about included future date such musical interests fantasy sci favorites and other such things patient Return Table ContentsLast Updated September Steve Haley 