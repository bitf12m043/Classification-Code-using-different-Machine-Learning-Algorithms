Date Mon Nov GMT Server NCSA Content type text html Last modified Wed Sep GMT Content length Style GuideCS Style GuideIntroduction you are aware compilers not care what your source code looks like long correct syntax for the language why does matter what the source code looks like matters because humans will also reading your source code this class your program needs easily understood you and your instructor grader other environments your program will need understood other members your programming team members testing team and programmers who will maintaining your code after you leave project Thus good programming style important ingredient good software engineering The more readable your code the more efficient the software production process will Think your source code document describing your implementation Like writing paper article blueprint you have the freedom make choices regarding how present your document However you also know that you stay within the guidelines popular convention for the type document you are creating then people reading your document will have easier time understanding There tension between your creative freedom and the conventions dictating your style your responsibility find appropriate balance What Style Style the format layout program commented source code the context will concentrate the following aspects Indentation Placement Curly Brackets Whitespace Comments Identifier Names IndentationFixed Width Indentation Almost all indentation occurs fixed width intervals usually using interval single tab two more spaces The following example program indented four spaces per indentation Program The Bean Counter int main int number beans Number beans from user const double bean weight Average bean weight grams cout number beans number beans cout don care how much you indent but you must consistant your indenting you indent two spaces from level level you must indent two more spaces from level level Furthermore you indent two spaces anywhere your code you must indent two spaces everywhere your code Level The following items begin level Preprocessor directives include iostream Function Headers and Class Headers Global Variables and other global declarations Level Other statements are indented Indent once for being function and once more for each control statement the statement nested within Always indent whether not the control statement uses curly brackets not necessary indent case labels within switch statements and public private labels within class definitions but you may you wish see below beans bacon beans bacon else beans bacon beans else bacon while while beans bacon beans while beans while beans bacon switch switch number beans case cout switch switch number beans case cout Placement Curly Brackets There are several common styles used for lining curly brackets The most important thing consistant you use one style anywhere your code you must use the same style everywhere your code Option header body body Option header body body Option header body body Whitespace Vertical Whitespace program should have two more blank lines between functions Furthur should have single blank line break statements within function into logical units Function Eat Beans Description Notice how there are two blank lines between this function and the next function void Eat Beans void cout Horizontal Whitespace There should single space between most operators and their operands For example like this int cout But some operators like and unary generally not take horizontal whitespace like this beans Not like this beans Comments Program Header Each program should have block comments the top the file that contains the main function These comments must contain the name the program your name your course and section the date and your email address addition you must include brief summary the program that describes what the program does what kinds inputs are necessary and any bugs deficiencies Program The Bean Counter Name Gregory Sharp Class Section Date Jan Mail greg wisc edu Description This program calculates the number navy beans the known universe based user estimate the universal navy bean constant File Header Every other file multi file program should have header The file header should include description what contained the file and how the code the file relates the rest the program Program The Bean Counter File Bean Description Class definition the Bean class Function Header Most functions should have header The function header explains the inputs outputs and side effects the function well short description what the function does Function Count Beans Inputs Weight beans tons Outputs Number beans Description Calculates the number beans based the average weight navy bean sea level int Count Beans double weight return int weight Bean Average Weight related group small functions can share single comment Function User Input Routines Description These utility routines control simple user inputs int getInt char prompt int cout return char getYN char prompt char cout while cout return Comments Object Definitions Most objects need comment describe what the variable does double weight weight beans tons double mass mass beans However temporary variables loop variables and input variables should not have comment int Loop variable doesn need commment for bean set weight Comments Embedded the Code Comments should embedded code for the following reasons introduce logically distinct section code explain unusual coding technique The following example function which contains embedded comments Function Count Beans Description First take sample the beans database aproximate the weight and then use this estimate the total number the carton Return the number beans int Count Beans Carton carton Sample the beans database get the average weight int double average Average weight within sample for Identifier Names Naming Conventions Most identifiers including most variables and all functions and classes should have descriptive name The name need not long but must relate the semantic meaning the identifier like this double starting location time velocity double location starting location time velocity Not like this double double But the other hand you should use short letter identifiers for temporary variables loop variables and input variables like this int for And finally please use all capital letters for constants like this const int MAX BEANS Not like this const int max beans Last modified Sat Sep CDT Greg Sharp greg wisc edu http www wisc edu greg greg html 