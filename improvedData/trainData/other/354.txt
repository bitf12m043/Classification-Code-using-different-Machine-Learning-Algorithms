MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Thursday Jan GMT World Wide Web Homepage FingerWFingerBy Posse Software John Belizaire beli cornell eduJulian Pelenur julian cornell edu Mauricio Aguilar Alvarez mauri cornell eduWFinger search form Please fill out one more the following WWW Server req Last Name First Name UserId start your search clear the form fields Notes Wfinger searches the entire www server takes time min www cornell edu Great Last Revised Thu Nov EST Any comments suggestions beli cornell edu julian cornell edu mauri cornell edu MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Wednesday Nov GMT Interesting WWW Pages Work Related Berkeley NOW Project UCLA Division MIT Media Labs Brian Bershad Univ Washington Seattle Stanford Home Page Kevin Jeffay Group UNC Univ Arizona Home Page Research Projects RSI Related Useful Information about Computer Related Repetitive Strain Injury Date Tue Jan GMT Server Apache Content type text html Content length Last modified Wed Aug GMT ResearchResearch Groups Publications Faculty Research Interests Related DepartmentsResearch GroupsColumbia Automated Vision EnvironmentComputer Graphics and User Interfaces LaboratoryDatabase Research GroupDigital LibrariesDistributed Computing and Communications LaboratoryInformation Based ComplexityKnowledge Representation and Reasoning GroupMobile Computing LaboratoryNatural Language Processing GroupParallel and Distributed Intelligent Systems LaboratoryProgramming Systems LaboratoryRobotics LaboratoryPublicationsTechnical Report ArchiveFaculty Research Guide HTML PostScript SEAS Bulletin Pages PostScript Faculty Research Interests Below you will find list areas which Columbia active research together with pointers into the Faculty Research Guide the information the guide not sufficient for your purposes please contact the revelant faculty member Algorithms combinatorial Alfred Aho Zvi Galil Algorithms numerical Joseph Traub Henryk Wozniakowski Artificial Intelligence Mukesh Dalal John Kender Asynchronous Circuits Self Timed Systems Steven Nowick Stephen Unger Collaboarative Work Gail Kaiser Combinatorial Modelling Jonathan Gross Complexity Theory Zvi Galil Computer Aided Design Logic Circuit Steven Nowick Computer Modelling Peter Allen Computer Vision Peter Allen John Kender Shree Nayar Cryptography Zvi Galil Databases Alfred Aho Mukesh Dalal Kenneth Ross Gail Kaiser Salvatore Stolfo Declarative Languages Kenneth Ross Digital Libraries Alfred Aho Steven Feiner Kathleen McKeown Distributed and Parallel Computing Alfred Aho Daniel Duchamp Gail Kaiser Salvatore Stolfo Joseph Traub Yechiam Yemini Financial Computation Joseph Traub Graph Theory Zvi Galil Jonathan Gross Graphics Steven Feiner Shree Nayar Hardware Verification Steven Nowick Information Based Complexity Joseph Traub Henryk Wozniakowski Knowledge Representation and Inference Mukesh Dalal Salvatore Stolfo Limits Scientific Knowledge Joseph Traub Logic Design and Synthesis Steven Nowick Stephen Unger Machine Learning Salvatore Stolfo Mobile Computing Daniel Duchamp Gail Kaiser Multimedia Applications Alfred Aho Daniel Duchamp Steven Feiner Leana Golubchik Kathleen McKeown Natural Language Processing Kathleen McKeown Networks Yechiam Yemini Numerical Analysis Joseph Traub Henryk Wozniakowski Operating Systems Daniel Duchamp Robotics Peter Allen John Kender Shree Nayar Scientific Computation Joseph Traub Henryk Wozniakowski Social Implications Technology Stephen Unger Software Development Environments Gail Kaiser Software Engineering Alfred Aho Gail Kaiser Steven Feiner User Interfaces Steven Feiner Virtual Worlds Steven Feiner Related Departments and Research Centers The Department Computer Science very active many collaborative research projects with other departments and research centers throughout the university The following list links such institutions Center for Advanced TechnologyCenter for New Media Center for Research Information AccessCenter for Telecommunications ResearchContinuous Algorithms and Complexity Foundations Computational MathematicsDepartment Electrical EngineeringDepartment Industrial Engineering and Operations ResearchDepartment Medical InformaticsDigital Design LabInstitute for Learning TechnologiesOther Departments the School Engineering and Applied ScienceGeneral Academics Research People Admissions Date Tue Nov GMT Server NCSA Content type text html Last modified Sun Nov GMT Content length Mail List ArchiveCS Mail List Archive Auto generated hideous Perl script Sat Nov Table ContentsBetter CVS documentation Timer Hint Please Sign for Project Meetings Obnoxious Flame Project Design Documents Office hours clarification Office hours calculators midterm Addendum Limits Message Routing Requirements Summarized Limits network configuration About the Draft Design due This Friday The Authoritative AAL Service Interface Ready Design document evaluation form aal send Blocks Until When Using Multiple Sockets addendum Using Multiple Sockets What Protocol State Machine Error Warning Codes Midterm Exam TCP Spec What struct aal sap You Must Tell Your Groups Today Initialization Hooks Added AAL Service Interface Clarification SAP aal conn desc etc Project Groups First Assignments Change office hours this week Policy Remedial Questions Error network congif Caching Virtual Circuits Questions Routing Alg Error network congif The Slides are Fixed Process Spawning Script now Available Information Solaris Threads Class Notes Slides from Friday Talk line Mail Your Project Groups Project Description Line Handimg hard copy Clarification Assignment due Time Assignment due Time Solaris BSD Equivalences Sample Makefile Parallel Mail Archive REVERSAL undergrads Project Undergrads Sending Structures Handing the First Assignment Buffer size recvfrom How You Get The Size File Message Just Chars why Worry About Network Order Note inet ntoa Using the HTML Mail Archive inet ntoa struct hostent and struct addr Handling Invalid Address Can Just Send struct Clarification Assign Interface and where Look for Files TCP Protocol not Appropriate for Datagrams Compiler Warnings for Sample Code Assignment Deadline Besaw Sample Client Server Code Now Available Better CVS documentation Date Sat Nov From Benjamin Teitelbaum list alfred wisc edu Subject Better CVS documentation Sender owner list wisc edu you have been considering using CVS but have had trouble getting through the man pages check out the info documentation much better info from emacs Timer Hint Date Wed Oct From Benjamin Teitelbaum list alfred wisc edu Subject Timer Hint Sender owner list wisc edu Don knock yourselves out trying implement some elaborate timer mechanism Solaris has cond timedwait function that allows you wait condition variable for bounded amount time This effectively gives you very clean way set timeout that you can later cancel ACK arrives Consider the attached demonstration this feature Note this not necessarily good example how write code just demo cond timedwait The source and executable for this are course lhl public project timerDemo include include include include include enum State IDLE REQUEST PENDING ACKED Connection control block class class connectCB public Construct CCB with given timeout connectCB char int timeout name state IDLE mutex new mutex ackArrivedCV new cond Destructor connectCB delete mutex delete ackArrivedCV Set the connection retransmitting necessary void establishConnection int attempt int wakeReason mutex lock mutex Send initial connection request state REQUEST PENDING sendConReq attempt Set timeout value struct timespec timeoutTime timeoutTime sec time NULL timeout timeoutTime nsec Wait for ACK timeout whichever comes first note while needed because Mesa semantics while state REQUEST PENDING wakeReason cond timedwait ackArrivedCV mutex timeoutTime timout occured retransmit and reset timeout wakeReason ETIME wakeReason ETIMEDOUT sendConReq attempt timeoutTime sec time NULL timeout printf Thread done ACK arrived name mutex unlock mutex Process ACK void ack mutex lock mutex state ACKED cond signal ackArrivedCV mutex unlock mutex Get the connection state State getState State retVal mutex lock mutex retVal state mutex unlock mutex return retVal Private methods private Send connection request message void sendConReq int tryNum printf Thread sends connection request name tryNum Private data private State state const int timeout char name mutex mutex cond ackArrivedCV public thread thrID connectCB ccb void establishConnectionStub void cCB connectCB connect connectCB cCB Just call the class function for the given object connect establishConnection return main ccb new connectCB thr create establishConnectionStub void ccb ccb thrID ccb new connectCB thr create establishConnectionStub void ccb ccb thrID sleep ccb ack sleep ccb ack sleep thr exit Please Sign for Project Meetings Date Sun Oct From Benjamin Teitelbaum list alfred wisc edu Subject Please Sign for Project Meetings Sender owner list wisc edu would like schedule individual meetings with each project group this week discuss and return your draft designs All office hours will canceled accommodate minutes meetings with each group Meeting slots are available and and you should sign electronically follows View ben public signup sched txt and consult your group members pick available time slot Edit ben public signup sched txt quickly enter your group into time slot Please please not mangle this file write back ages after you load into your editor this system degenerates into chaos have resort paper signup sheet Meetings will held one our offices conference room can get one the later case there will forwarding notes left our office doors See you all soon Ben and Srinivasa Obnoxious Flame Project Design Documents Date Sat Oct From Benjamin Teitelbaum list alfred wisc edu Subject Obnoxious Flame Project Design Documents Sender owner list wisc edu Just because are still working our way through the draft project specifications does not mean that you should slack off your project Indeed judging what have seen far many you still have lot design work Here are few general comments that apply most the specifications have seen This document suppose SPECIFICATION not casual discussion issues set annotated header files You must provide the full details your system structure algorithms key data structures and packet formats Anyone reading the spec especially the members your project team should know exactly how the system supposed built and who doing what Furthermore the end the semester your project doesn work your specification the main proof that have that you were least the right track Many you clearly have clue how make FSM description protocol suggest looking the TCP state diagram the book and following these general guidelines every state should have name make clear what the diagram describes and break complex protocols into cases for example show FSM for establishment corresponding the roles played connection request initiator the destination node end point and intermediate node label which state the start state every arc should have two labels the event that causes the transition and the action take Testing plans and implementation schedules were woefully sketchy come with plan build and test your project incrementally that you will guaranteed able demonstrate least some subset your project that works Don wave your hands about anything for example you plan use the TCP checksum algorithm describe Hope this helps Office hours clarification Date Tue Oct From Srinivasa Narayanan list wisc edu Subject Office hours clarification Sender owner list wisc edu office hours tomorrow will Sorry confused you previous mail nsp Office hours Date Tue Oct From Srinivasa Narayanan list wisc edu Subject Office hours Sender owner list wisc edu will not available from tomorrow Instead will available from the changes office hours for tomorrow nsp calculators Date Mon Oct From Lawrence Landweber list parmesan wisc edu Subject calculators Sender owner list wisc edu You may not use calculators for the test midterm Date Sun Oct From Lawrence Landweber list parmesan wisc edu Subject midterm Sender owner list wisc edu The material from the text covered the exam Chapter Chapter but not Chapter but not addition all material discussed class plus notes handed out and documents purchased DOIT will included Addendum Limits Message Date Wed Oct From Benjamin Teitelbaum list wisc edu Subject Addendum Limits Message Sender owner list wisc edu more than nodes network more than links per node more than connections passing through terminating node addition you may make one other assumption node ever more than hops away from any other node Routing Requirements Summarized Date Wed Oct From Benjamin Teitelbaum list alfred wisc edu Subject Routing Requirements Summarized Sender owner list wisc edu the algorithm must detect link failures caused node failing one end link route exists through the network from connection request from must succeed note that the underlying does not necessarily have follow the shortest path all times virtual circuit exists between and and node goes down the middle and there alternative route from then the connection must stay alive from the perspective AAL client technically speaking should stay alive from the perspective ATM client Note that tear the down and rebuild from endpoint just long the higher system layers don notice that anything has happened there alternative route from then the connection closed and AAL clients informed per the service interface specification Limits network configuration Date Tue Oct From Srinivasa Narayanan list wisc edu Subject Limits network configuration Sender owner list wisc edu Many you have been asking about the size the network and stuff You can assume the following limits more than nodes network more than links per node more than connections passing through terminating node ben nsp About the Draft Design due This Friday Date Tue Oct From Benjamin Teitelbaum list alfred wisc edu Subject About the Draft Design due This Friday Sender owner list wisc edu will over your document carefully checking that your design reasonable and complete Although the final version your design document counts for portion your project grade you WILL NOT GRADED the draft version This just good opportunity get early feedback from before you waste time and effort pursuing bad flawed design The Authoritative AAL Service Interface Ready Date Sun Oct From Benjamin Teitelbaum list alfred wisc edu Subject The Authoritative AAL Service Interface Ready Sender owner list wisc edu course lhl public html fall src aal link successfully with our FTP FTPd you must support this interface There have been few changes and elaborations the tentative interface described the handout please check this file out carefully Design document evaluation form Date Fri Oct From Srinivasa Narayanan list wisc edu Subject Design document evaluation form Sender owner list wisc edu The evalution form for the project design document available online postscript form nsp aal send Blocks Until When Date Fri Oct From Benjamin Teitelbaum list alfred wisc edu Subject aal send Blocks Until When Sender owner list wisc edu aal send only has block the calling thread until the data the packet buffer has been enqueued AAL that point the packet buffer can reused but the application layer cannot assume that the data actually arrived you want aal send block until all sent data has been acknowledged that too Using Multiple Sockets addendum Date Thu Oct From Benjamin Teitelbaum list alfred wisc edu Subject Using Multiple Sockets addendum Sender owner list wisc edu Pretty much the only acceptable reason for using multiple sockets per node you want more realistic simulation the physical links the link layer your system There will out band communication allowed between nodes for which link not specified the configuration file Using Multiple Sockets Date Thu Oct From Srinivasa Narayanan list wisc edu Subject Using Multiple Sockets Sender owner list wisc edu For those you who wanted use multiple sockets for the ATM layer here our protocol The virtual nodes have port number will guarantee that these port numbers will always integer which multiple This will enable you use multiple sockets Just sure that the port number for your extra sockets are not multiples nsp What Protocol State Machine From Benjamin Teitelbaum Date Wed Oct list alfred wisc edu Subject What Protocol State Machine Sender owner list wisc edu See page your textbook for example Error Warning Codes Date Wed Oct From Lawrence Landweber list parmesan wisc edu Subject Error Warning Codes Sender owner list wisc edu Some you have notes your code citing error codes the full list these can referenced via the class web page next the line for the assignement Date Wed Oct From Lawrence Landweber list parmesan wisc edu Sender owner list wisc edu apologize for again forgetting bring the assignments You can come office pick yours Midterm Exam Date Tue Oct From Lawrence Landweber list parmesan wisc edu Subject Midterm Exam ben parmesan wisc edu lhl parmesan wisc edu nsp parmesan wisc edu Noland Wednesday October TCP Spec Date Tue Oct From Lawrence Landweber list parmesan wisc edu Subject TCP Spec Sender owner list wisc edu The TCP spec available online via the class web page http www wisc edu TCP This for friday and next week What struct aal sap Date Fri Oct From Benjamin Teitelbaum list alfred wisc edu Subject What struct aal sap Sender owner list wisc edu SAP simply the name particular service particular host The data structure used represent SAP struct aal sap and you can count looking like this complete coming soon Host type this could just the node number from the network configuration file typedef int host AAL service identifier type typedef int aal servID AAL Service Access Point SAP typedef struct host hostID aal servID servID aal sap You Must Tell Your Groups Today Date Fri Oct From Lawrence Landweber ben wisc edu Subject You Must Tell Your Groups Today list alfred wisc edu Sender owner list wisc edu Students Let emphasize ben request there are people for whom not have group info Could each those people please send their status ben before friday Please whether you are currently group Initialization Hooks Added AAL Service Interface Date Wed Oct From Benjamin Teitelbaum list alfred wisc edu Subject Initialization Hooks Added AAL Service Interface Sender owner list wisc edu addition the AAL service interface calls listed the project handout there will initialization hook for you set worker threads and shared data structures all your layers void aal init You must support this call but precisely does totally you just hook for you use The main thread our main will this Call aal init Create FTPd server thread Create FTP client thread sleep The only thing missing from the prototypes the AAL service interface functions the error codes that must supported will have these ready for you next week Clarification SAP aal conn desc etc Date Wed Oct From Benjamin Teitelbaum list alfred wisc edu Subject Clarification SAP aal conn desc etc Sender owner list wisc edu Srinivasa has made nice diagram that shows the sequence events connecting server also should clarify some the terminology have been using course lhl public html fall project sap eps Project Groups Date Wed Oct From Benjamin Teitelbaum list alfred wisc edu Subject Project Groups Sender owner list wisc edu Groups one There are you and you know who you are Please find group ASAP and mail your members names and usernames Groups two need another person Edwin Sutanto edwins Henny Dwiyono dwiyono Groups three Ming Amir Roth amir Glenn Ammons ammons Scott Colville sec Brian Swander swanderb Tim Flechtner flechtne Abhinav Gupta agupta Ashish Thusoo ashisht Shrinivas Ashwin sashwin Zhenyu Liu zhenyu Konstantinos Dovrolis konstant Moncef Elaoud moncef Luke Blanshard luke Jennifer Shi shi Taxiao Wang twang Narayanan Anand narayana Shyamsundar Nuggehalli shyamsun Andrew Therber andyt Chris Weaver weaver Shilpa Lawande ssl Gopalakrishnan raji John Edwards edwards Johannes Gehrke johannes Krzysztof Zmudzinski zmudzin Andrew Miller miller Dan Schuster schuster Erik Yoder yoder Kurt Wiedenhoeft wiedenho Eric Groth groth Paul Salmon pdsalmon Daniel Goemans goemans Peter Mateja mateja Randal Ramig randal Zhenhai Lin zhenhai Liping Zhu liping Dan Yao dyao Baicheng Liao bail Xuelin xuelin Tim Fliss fliss Shad Aumann aumann Mike Payne mpayne Tricia Powers powers Ming Yin Mak Newton mak Chi Man Sizto Jason chi man Chi Yan Liu Alice chil Brad Thayer brad David Sundaram Stukel sundaram Kurt Froehlich froehlic Sivasankaran Chandrasekar schandra George Varghese joev Chan Wai Kei Stephen waic Susan Chiang susanc Eleanora Suran suran Oguz Yetkin yetkin Irvin Tsang irvin Shang Zou zou Chi Cheng Chu chi chen Luis Ulloa ulloa Kin Chan kinc Kam weng Cheong kamweng Zhe Wang zhe Haihong Wang whh Jin Zhang Thomas Dever dever Jim Auer auer Kristin Martens martens Haris Stewart haris Byron Yeung byron Soma DasGupta soma Yau Chan yau Ching lun chinglu Rong Wang rongw Dan Schuster schuster Andy Miller miller Erik Yoder yoder Date Wed Oct From Benjamin Teitelbaum edwins wisc edu list alfred wisc edu reply message from Edwin Sutanto Tue Oct CDT Subject FSM Missing from Slides Sender owner list wisc edu Ehmm Ben your postscript project overview slides still has that meesing FSMs know hand pasted the FSM Look page http www wisc edu fall project see what those slides First Assignments Date Tue Oct From Benjamin Teitelbaum list alfred wisc edu Subject First Assignments Sender owner list wisc edu will done grading Friday Monday the latest Date Tue Oct From Benjamin Teitelbaum swanderb wisc edu nsp maggie wisc edu list alfred wisc edu reply message from Brian Swander Wed Sep CDT Subject Interactions Between the Garbler and Signalling Routing Sender owner list wisc edu have question about the garbler and arbitrary protocols Does the garbler only effect the ATM packets going out meaning our signalling packets and routing packets are uneffected does the garbler garble everything much more realistic potentially garbles all ATM payloads but will never garble ATM cell header Therefore yes you need worry about signalling and routing protocol cells being garbled the garbler does garble everything then how will deal with the arbitrary structure our signal and routing packets need come with signalling and routing protocols that communicate completely within the secure from garbling the header ATM packets meaning that all send are ATM packets but use the payload type the header tell how interpret that header You won able squeeze all your routing and signalling info the ATM cell header You will have checksum CRC computation for these cells You could put this the payload use the CRC field the ATM cell header your design choice What seems the best solution allow arbitrary packets whatever size like sent for our signalling and routing protocols These will lost and garbled will The question are the first bytes garble proof Would need some sort CRC check the rest Should just send signalling and routing info byte chuncks careful here Your signalling and routing protocols will communicating through ATM cells not packets which the word have been using describe the AAL data transfer unit believe that answered your other questions previous comment Change office hours this week Date Sun Sep From Srinivasa Narayanan list wisc edu Subject Change office hours this week Sender owner list wisc edu Please note the following change office hours for this week Monday shifted mts earlier from the normal hours Wednesday cancelling compensate for that will hold office hours from Thursday Sorry for the inconvenience nsp Policy Remedial Questions Date Sun Sep From Benjamin Teitelbaum list alfred wisc edu Subject Policy Remedial Questions Sender owner list wisc edu are here help you with questions about networking and with the course project not teach you which prerequisite debug your programs for you Questions like the compiler says what basic questions about the programming language like this what const method getting strange error like this code where const instance class called method that only prints the contents bvect call non const method int bvector print with const object will given last priority Since there steady stream valid questions about the project this means that questions like those above will probably never answered you have questions like these suggest buying book like the Scott Meyers books studying man pages reviewing your notes Sorry for the obnoxiousness Error network congif Date Fri Sep From Benjamin Teitelbaum luke blanshard vnp com list alfred wisc edu Subject Error network congif Sender owner list wisc edu How you expect handle erroneous configuration files like the one you started with Should barf just ahead and allow any connection that present either direction You can assume errors the configuration file Date Thu Sep From Benjamin Teitelbaum haris wisc edu nsp sol wisc edu list alfred wisc edu reply message from Haris Stewart Mon Sep Subject Will Suspend Nodes Cause the Garbler Insane Sender owner list wisc edu you said that for the project you bringing down nodes killing those processes and perhaps restarting them wondering this really what you plan should expect that you might either the following well suspend the process the node goes unresponsive but later floods the network with packets that are way too late and should ignored until that node gets with the times All will kill nodes and perhaps restart them You don have worry about node being suspended and then later restarted causing really old cells transmitted insane garbeler the garbeler just goes insane and the node just spits packets out onto the network that are total garbage with recoverable ATM packets Again ignore packets until the offending node works again the problem course that either these above options not only will mean routing virtual circuits around dead bad nodes but may mean increased useless traffic that has dealt with The garbler will not insane will introduce constant amount noise across all links Caching Virtual Circuits Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Caching Virtual Circuits Sender owner list wisc edu Another minor point cache virtual circuits once they are found for the sake efficiency and try them first the completely unnecessary This doesn make sense First all where would you cache Each node only knows local part not the whole thing Secondly even you bent over backwards cache they might not valid your routing tables have changed Questions Routing Alg Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Questions Routing Alg Sender owner list wisc edu Graph algorithm How optimal does our routing have have use shortest path algorithm and need consider its complexity For example have route before timeout occurs should search for the next best circuit What the network large the shortest path algorithm isn exactly lightning fast What assumptions can make about the size the network more important that your routing algorithm discover routes detect that can not route between two end points than that find optimal routes course you have worry about loops Vis vis your last question let say the network will contain most nodes and you can set your timeout values accordingly Error network congif Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Error network congif Sender owner list wisc edu The network congif you gave the following Here sample network configuration file The syntax should clear Comments must begin with Node sol links Node sol links Blank lines are Node sol links Node sol links Shouldn Node also connect back Node like Node sol links Absolutely right Sorry about that The Slides are Fixed Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject The Slides are Fixed Sender owner list wisc edu The project overview slides are fixed thanks Shad Aumann The link still the same place the course page Note that you have set the ghostview orientation Seascape view them right side Software Engineering talk slides coming soon Process Spawning Script now Available Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Process Spawning Script now Available Sender owner list wisc edu The script that automatically invokes copy your project running each node mentioned the network configuration file here http www wisc edu fall project moa Please read the comment the top for usage information and see how the script constrains your command line syntax also placed sample network configuration file this directory that you might find useful lives here http www wisc edu fall project network config you find problem with the script please let know right away Thanks Information Solaris Threads Date Wed Sep From Benjamin Teitelbaum list alfred wisc edu Subject Information Solaris Threads Sender owner list wisc edu There lots information here http www sun com sunsoft Products Developer products sig threads resources html including good FAQ and pointers various papers about threads have also downloaded the Solaris Multithreaded Programming Guide which mentioned class pages long have and put course lhl public html fall project solThreads Still pages long you might want look through see useful you before you print out Class Notes Date Tue Sep From Lawrence Landweber list parmesan wisc edu Subject Class Notes Sender owner list wisc edu There are sets notes available for purchase DOIT Bit Oriented Link Protocols Logical Link Control Spec Spec Spec will cover these the order above beginning next monday Slides from Friday Talk line Date Mon Sep From Benjamin Teitelbaum list alfred wisc edu Subject Slides from Friday Talk line Sender owner list wisc edu Since many folks have requested them have put the slides from Friday presentation the project line They are available through the course page either Powerpoint format Postscript However the Postscript messed least when viewed through Ghostview landscape slides are printed across portrait pages there are any Postscript Windows gurus out there who can generate correct Postscript from either file please send the correct Postscript and tell how you did Thanks Mail Your Project Groups Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Mail Your Project Groups Sender owner list wisc edu When you have group three together please mail ben your names and usernames Thanks Project Description Line Date Thu Sep From Benjamin Teitelbaum list alfred wisc edu Subject Project Description Line Sender owner list wisc edu Postscript version the project now available from the home page you have time please look this over before tomorrow morning when will present the project lecture Handimg hard copy Date Wed Sep From Srinivasa Narayanan list wisc edu Subject Handimg hard copy Sender owner list wisc edu For those you who are worrying about how turn hard copy late night You can slip your hard copy under Ben office door room You dont need key get room Thanks nsp Clarification Assignment due Time Date Tue Sep From Benjamin Teitelbaum list alfred wisc edu Subject Clarification Assignment due Time Sender owner list wisc edu You mean midnight the day after Midnight this evening tomorrow Deadline Wed Sep CDT you still want the hard copies handed during class tomorrow not then when ever you don hand tomorrow morning class put your hard copy one our mailboxes the floor slip under one our office doors Thanks Assignment due Time Date Tue Sep From Benjamin Teitelbaum list alfred wisc edu Subject Assignment due Time Sender owner list wisc edu Because very important that everyone get the first assignment working the deadline for submitting midnight tomorrow Solaris BSD Equivalences Date Tue Sep From Benjamin Teitelbaum list alfred wisc edu Subject Solaris BSD Equivalences Sender owner list wisc edu Some the library calls the sample code including bzero are BSD specific and that why you may have trouble finding them Solaris derived mainly from System and has other ways doing things For your convenience have appended chart below mapping the BSD calls their Solaris equivalents BSD Possibilities Standards Notes srandom seed srand seed ANSI Also some older UNIX srand seed SVR non ANSI signal sigset SVR systems calls not SunOS restarted but bytes returned else EINTR sigaction POSIX but extensible implementation sigvec sigaction POSIX sigblock sigprocmask POSIX sigset SIG HOLD sighold SVR sigsetmask sigprocmask POSIX sigset sigrelse SVR sigpause sigsuspend POSIX setjmp sigsetjmp POSIX longjmp siglongjmp POSIX statfs statvfs SVR bcopy memmove ANSI BSD bcopy handles overlapping areas correctly does memmove but not memcpy bzero memset ANSI index strchr ANSI rindex strrchr ANSI getwd getcwd POSIX getrusage open ioctl The getrusage information and whole lot more can found the prusage structure Use the PIOCUSAGE ioctl See the example below and the proc man page for detail gethostname sysinfo HOSTNAME SVR See sysinfo for many other possible values getdtablesize sysconf OPEN MAX POSIX See sysconf for many other values available via sysconf strptime See code from Kevin Ruddy below timelocal mktime wait rusage waitpid POSIX wait waitid SVR wait See org Schilling wait emulation code below usleep nanosleep POSIX See nanosleep Solaris see libposix For Solaris see the example below Sample Makefile Date Tue Sep From Benjamin Teitelbaum list alfred wisc edu Subject Sample Makefile Sender owner list wisc edu Simple Makefile rebuild client and server programs Modify suit your needs DEFINES INCPATH CFLAGS Wall INCPATH DEFINES LDFLAGS CLIENT client common SERVER server common SRCS client server common client CLIENT CLIENT client LDFLAGS server SERVER SERVER server LDFLAGS CFLAGS Parallel Mail Archive Date Tue Sep From Benjamin Teitelbaum list alfred wisc edu Subject Parallel Mail Archive Sender owner list wisc edu just learned that the lab now automatically archiving course mail with Hypermail The lab archive lives http www wisc edu lists classes list and nicely threaded message subject will keep the current mail archive that generated Perl script running since easy filter out messages that are irrelevant FAQ looking for project partner the Internet China etc The bottom line you want see archive all the messages look http www wisc edu lists classes list and you want see moderated archive look http www wisc edu mail archive html REVERSAL Date Mon Sep From Lawrence Landweber list parmesan wisc edu Subject REVERSAL Sender owner list wisc edu concede goal was not break friendships split hairs status will devise single project for all will blend the two versions were planning undergrads Date Mon Sep From Lawrence Landweber list parmesan wisc edu Subject undergrads Sender owner list wisc edu Since sending the note have received requests regarding mixed teams special students non majors etc The system that will adopt that teams that are made undergrads will implement fewer functions This change for undergrads will not trivialize the project just make bit less work Since EVERY student the class has had equivalent and proficient programming there reason distinguish between majors goal help the over the students who are undergrads and who are likely taking more courses than grad students Note that projects are NOT graded curve every team will get what deserves independent what done others the class would thrilled have all projects would disappointed have all projects Project Undergrads Date Mon Sep From Lawrence Landweber list parmesan wisc edu Subject Project Undergrads Sender owner list wisc edu indicated class today teams undergrads will not have implement much protocol functionality for the term project will teams containing grad students For this purpose undergrad team one where ALL three members are classified undergrads bus etc Special students will count grad students Sending Structures Date Mon Sep From Srinivasa Narayanan list wisc edu Subject Sending Structures Sender owner list wisc edu One more note sending structures Seems like some people are still having doubts why one shouldn send the structure such sorry earlier messages this were cryptic present concrete example below This should help you have any doubts Lets define sample structure struct pkt short type long data Define variable type pkt struct pkt pkt Lets assume that the address pkt the Sun Sparcs the size pkt will bytes Bytes and will for the field type bytes and are not used bytes will used for the field data The reason that some machines long inetgers are required aligned double word boundary Hence bytes and cannot used for the field data However all machines not have this requirement The same structure pkt when defined the Vectra will have size only bytes before assuming pkt starts address Byte and will used for the type field and bytes will used for the data field because there requirement for the long field aligned double word boundary assuming that your client runs the Sols and the server runs the Vectras imagine what will happen you just send the structures across the network Thanks nsp Handing the First Assignment Date Sun Sep From Benjamin Teitelbaum list alfred wisc edu Subject Handing the First Assignment Sender owner list wisc edu When you are absolutely done with Assignment please copy your source code well makefile build your client and server programs course lhl public handin Note that you have insert access but not write delete access this directory certain that you are done before you copy your code over Also for our grading convenience please have your makefile generate client executable named client and server executable named server and NOT COPY EXECUTABLES OBJECT FILES INTO YOUR HANDIN DIRECTORY should able into your handin directory type make and see two executables called client and server created that can test you need tutorial using make have look http www wisc edu make html Also please hand paper copy your assignment class Wednesday per the Requirements section the assignment Let know you have any trouble with the hand process Buffer size recvfrom Date Sat Sep From Srinivasa Narayanan list wisc edu Subject Buffer size recvfrom Sender owner list wisc edu also have one question what happens you only read part packet when you specify within the recvfrom buffer small then the packet size Since datagram protocol and not stream didn think possible read part packet and then come back with another call read the later part While have tried yet seems that should read nothing only the first part and through the rest away Now stream protocol think make sense only get few bytes time What you think Right reading parts time works only for Streams For Datagrams the buffer size smaller the recvfrom call will throw away the rest the packet How You Get The Size File Date Fri Sep From Benjamin Teitelbaum edwins wisc edu list alfred wisc edu Subject How You Get The Size File Sender owner list wisc edu another question how you get the size file get with stat int stat const char path struct stat buf Message Just Chars why Worry About Network Order Date Thu Sep From Benjamin Teitelbaum yetkin wisc edu list alfred wisc edu nsp sol wisc edu Subject Message Just Chars why Worry About Network Order Sender owner list wisc edu there anything that dictates the structure the packets More specifically there something drastically wrong with making the packet just array characters that bytes long and putting the integers the appropriate fields ASCII characters this still have worry about network host order when sending these packets the level the sendto recvfrom library calls the packets you send are just arrays characters you point out However you still need worry about Endian ness because you know that those first two characters really represent integer and you aren careful they will represent the wrong integer the byte mirror image the other end yes you still have worry about network and host order Hope that helps Note inet ntoa Date Thu Sep From Srinivasa Narayanan list wisc edu Subject Note inet ntoa Sender owner list wisc edu doing the following address inet ntoa hostp addr and get error about incompatible type argument inet ntoa What exactly the thing should place there hostp was declared struct hostent hostp the first argument inet ntoa should type struct addr the addr list field struct hostent defined char and hence addr which define for addr list will type char But the pointers addr list addr list etc are really pointers structures type addr you should type cast them before using the inet ntoa function The inet ntoa call would look like inet ntoa struct addr hostp addr Using the HTML Mail Archive Date Wed Sep From Benjamin Teitelbaum list alfred wisc edu Subject Using the HTML Mail Archive Sender owner list wisc edu Please note that there mail archive hanging off the course web page http www wisc edu mail archive html Any general interest mail sent the class list archived here You will probably find the archive useful loosely organized FAQ that you can first when you have questions inet ntoa struct hostent and struct addr Date Wed Sep From Srinivasa Narayanan list wisc edu Subject inet ntoa struct hostent and struct addr Sender owner list wisc edu have been geeting questions regarding the inet ntoa function the hostent structure and struct addr The hostent structure and addr structures are different The hostent structure has list pointers structures type addr this the addr list field the hostent structure The inet addr could just thought byte value which stores the internet address some form The inet ntoa function converts the internet address from this form dotted decimal form You could read the first few pages Chapter the book Stevens Unix Network Programming get more information these nsp Handling Invalid Address From Srinivasa Narayanan Subject Handling Invalid Address siman wisc edu Jose Siman Date Wed Sep CDT list wisc edu Reply from Jose Siman Sep Mailer ELM version MIME Version Content Type text plain charset ASCII Content Transfer Encoding bit Sender owner list wisc edu What should case the client sends ADDR request with invalid address what should the server return For instance client vega wisc edu ADDR invalid wisc edu The server won able translate invalid wisc edu should the server print error Should exit Should respond the client with some special error message The server should respond the client with error message use the type and string fields convey error message back the client for the server could set the type field value indicating Error condition and send the error message the string field The server should NOT exit Can Just Send struct From Srinivasa Narayanan Subject Can Just Send struct geery wisc edu Andrew Geery Date Wed Sep CDT list wisc edu Reply from Andrew Geery Sep Mailer ELM version MIME Version Content Type text plain charset ASCII Content Transfer Encoding bit Sender owner list wisc edu have quick question about assignment You said the end your presentation that couldn simply take our packet struct and send because the integer fields wouldn network order But transform them into network order using htonl hntos before put them into the packet structure can simply send the the packet structure packet pack type htons packet filesize htonl strcpy packet name sendto packet Does that work correctly works but not sure that the proper order That would take care the host and network byte order problem But then the assignmnet specifies that the packet should have byte field followed byte field followed string with maximum length This defines the packet size maximum bytes you send the packet structure such you would not sending data the same format the specifications because you not know the internal structure packet What the machine which receives data interprets the packet structure different format than the machine which sent the packet the packet thats sent across the network should match the specification EXACTLY The first bytes should the short field the NEXT bytes should the data field and You should aware what goes into EACH byte the packet which sent which doesn happen when you send the packet structure Clarification Assign Interface and where Look for Files From Srinivasa Narayanan Subject Clarification Assign Interface and where Look for Files list wisc edu Date Wed Sep CDT Mailer ELM version MIME Version Content Type text plain charset ASCII Content Transfer Encoding bit Sender owner list wisc edu Here are answers some questions got need convert the string that the user inputs the command line using htons Since this character string and not short long Since the string just sequence single byte characters integers involved Will the user input number for the request type for ADDR for FILEZISE need expect ADDR and FILESIZE typed this way all capital letters should send ADDR and FILESIZE too the server can use numbers distinguish between them internally The user will type ADDR FILESIZE not number like The user may type them lowercase too addr filesize However when sending the type the server you should use short integer distinguish them thats what the byte type field the packet for Just give examples heres what typical client requests will look like client sol wisc edu ADDR krusty wisc edu the first sol wisc edu the name the where the server running ADDR the request type and krusty wisc edu the name the you want find the internet address for The filesize request will look like client sol wisc edu FILESIZE testfile FILESIZE the request type and testfile the name the file the user requests FILESIZE have look for the existance this file within our home directory What exactly that should this case not clear the handout when says print the file name and the file size error the file doesn exist Also you actually mean file our home directory how deep our account should look for the file every directory Lets make this real simple You can assume that the filename specified relative with respect the current working directory the server all you have stat system call providing the name the file which you got the string field the argument stat TCP Protocol not Appropriate for Datagrams Date Wed Sep From Srinivasa Narayanan list wisc edu Subject TCP Protocol not Appropriate for Datagrams Sender owner list wisc edu There was question about using TCP the protocol for the type Datagrams SOCK DGRAM Using TCP for datagrams will not work for the following reason TCP protocol which provides connection oriented protocol which provides byte stream semantics Datagrams definition imply connectionless approach and also the semantics are different from Streams For Datagrams message boundaries are preserved which not the case streams apologise for not being clear this topic class nsp Compiler Warnings for Sample Code Date Wed Sep From Srinivasa Narayanan list wisc edu Subject Compiler Warnings for Sample Code Sender owner list wisc edu note the sample programs you compile the sample client and server programs with the Wall option you will see lot warnings saying implicit declaration function This means that the appropriate header files for those functions are not included You should try AVOID these warnings including the appropriate header files when you your assignment The man pages for system call library function usually specify the files which should included nsp Assignment Deadline Date Tue Sep From Srinivasa Narayanan list wisc edu Subject Assignment Deadline Sender owner list wisc edu The Deadline for assignment Wednesday September Apart from the code and script output you will also need hand your executables electronically will give more instructions how that separate mail Thanks nsp Besaw Sample Client Server Code Now Available Date Mon Sep From Srinivasa Narayanan list wisc edu Subject Besaw Sample Client Server Code Now Available Sender owner list wisc edu One student had asked there was sample client server code which could compile and run see how the stuff works have made the sample client and server the Besaw tutorial available public assign You could use the following commands get the client and server executables gcc Wall client lsocket lnsl client gcc Wall server lsocket lnsl server After this you could run the server server the just sample port you should able use any run the client follows client xxx where xxx name the where the server running sol wisc edu after this whatever you type the client should displayed the server line line There were bugs the code which appears the tutorial have fixed them However cannot guarantee full correctness seems work well when tried Anyway this just give you feel for the assignment nsp 