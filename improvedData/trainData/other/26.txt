MIME Version Server CERN Date Sunday Nov GMT Content Type text html Content Length Last Modified Wednesday Nov GMT Fall Study Guide Fall Automata and Computability Theory Final Exam Study Guide The final exam will hours open book and notes All questions are roughly equal weight The exam will comprehensive covering all material have covered the course including material tested the two prelim exams Roughly equal weight will devoted each the three parts the course will ask you one formal proof and will probably undecidability proof There may also essay question The primary source the online lecture notes Suggested supplementary readings are taken from the text Hopcroft and Ullman Introduction Automata Theory Languages and Computation Addison Wesley the appropriate sections are indicated beside each topic addition these specific topics you will need have good general understanding what means for set regular context free recursive and the capabilities finite automata pushdown automata and Turing machines and how describe sets using regular expressions and context free grammars Finite Automata and Regular Expressions finite alphabets strings decision problems Sigma operations strings and sets state transition systems DFAs delta regular sets closure properties the product construction nondeterminism and NFAs the subset construction transitions patterns and regular expressions converting regular expressions finite automata and vice versa Pumping Lemma for regular sets formal statement use Pumping Lemma show nonregularity the quotient construction DFA state minimization Myhill Nerode relations two way finite automata Pushdown Automata and Context Free Languages CFGs and CFLs definitions and examples right and left linear grammars Chomsky and Greibach normal forms PDAs formal definition examples configurations acceptance empty stack and final state converting NPDAs CFGs and vice versa Pumping Lemma for CFLs Parsing Cocke Kasami Younger algorithm closure properties CFLs DCFLs Turing Machines and General Computability general computability Turing machines Church Thesis universality configurations and recursive sets Variants the nondeterminism enumeration machines decidable and semidecidable problems universal TMs diagonalization undecidability halting and membership decidable and undecidable problems reductions Rice Theorem VALCOMPS and undecidable problems for CFLs Other formalisms type grammars Post systems recursive functions while programs lambda calculus combinator logic Goedel incompleteness theorem home page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Sunday Nov GMT Programming Assignment Programming Assignments Programming assignment Programming assignment Programming assignment Programming assignment Programming assignment for Week Programming assignment Programming assignment Programming assignment Extra Credit optional for Programming assignment Programming assignment Programming assignment Send comments criticisms suggestions new links additions etc dwip utexas edu home TAs description discussion sessions news articles newsgroup programs study guides test solutions Date Tue Jan GMT Server NCSA Content type text html Last modified Fri Jul GMT Content length Split CSplit Berkeley Division Split parallel extension the programming language that supports efficient access global address space current distributed memory multiprocessors retains the small language character and supports careful engineering and optimization programs providing simple predictable cost model This stark contrast languages that rely extensive program transformation compile time obtain performance parallel machines Split programs what the programmer specifies the compiler takes care addressing and communication well code generation Thus the ability exploit parallelism locality not limited the compiler recognition capability nor there need second guess the compiler transformations while optimizing the program The language provides small set global access primitives and simple parallel storage layout declarations These seem capture most the useful elements shared memory message passing and data parallel programming common familiar context Split currently implemented the Thinking Machines Corp the Intel Paragon the IBM and the Meiko and under development the Cray All versions are built using the Free Software Foundation GCC and the message passing systems available each machine Faster implementations are underway for the Meiko using the Elan libraries and for networks workstations using Active Messages has been used extensively teaching tool parallel computing courses and hosts wide variety applications Split may also viewed compilation target for higher level parallel languages Available documentation for Split includes the following Parallel Programming Split which introduces the language through example PostScript version Introduction Split tutorial introduction Split Implementing Split the Meiko Preliminary ResultsSplit ReleasesDownload the Split distribution for your platform Meiko only other platforms soon added Related projects include The Mantis Parallel Debugger Applications include Connected ComponentsSorting Back Division Home Page Date Tue Nov GMT Server NCSA Content type text html IEEE RAS Technical Committee Robot Motion and Path Planning IEEE RAS Tech Committee Robot Motion Path Planning Groups active motion planning research This partial list people and organizations involved research automatic motion planning this time one name for contact noted given for each organization The areas covered include both theory and applications motion planning methodology robotics computational geometry control systems CAD CAM design etc Those interested adding deleting correcting information this list please send your messages lumelsky engr wisc edu the future may want provide more than just names and addresses please add few words about your group the name the group your position nature work any software that your group can post that people can try available Web link page with more information expect this list grow both volume and diversity information provides For example one section add bulletin events that are interest this group those interested posting such information please send Advices how can make this page more effective are most welcome AUSTRALIA Australian National University Canberra Jon Kieffer jon kieffer anu edu CANADA McGill University Montreal Vincent Hayward hayward cim mcgill Simon Fraser University Burnaby Kamal Gupta kamal sfu FRANCE INRIA Grenoble Christian Laugier laugier imag LAAS CNRS Toulouse Laumond jpl laas GERMANY German Aerospace Research Establishment Wessling Hirzinger gerd hirzinger dlr GREECE National Technical University Athens Kyriakopoulos kkyria central ntua INDIA Centre for Artificial Intelligence Robotics Bangalore Vidyasagar sagar cair ernet ITALY Universita Roma Sapienza Allessandro Luca adeluca giannutri caspur ISRAEL Technion Haifa Ehud Rivlin JAPAN University Tokyo Suguru Arimoto arimoto arimotolab tokyo University Nagoya Toshio Fukuda nucc nagoya SPAIN Jaume University Castellon Angel del Pobil pobil inf uji SWEDEN University Linkoping Bernt Nilsson berni ikp liu UNITED KINGDOM Oxford University Stephen Cameron stephen cameron comlab USA California Institute Technology Pasadena Joel Burdick jwb robby caltech edu Carnegie Mellon University Pittsburg Michael Erdmann cmu edu General Electric Research Center Schenectady Hsuan Chang changhs crd COM Sandia Labs Albuquerque Yong Hwang hwang isrc sandia gov Stanford University Robotics Lab Jean Claude Latombe latombe stanford edu University California Berkeley John Canny jfc ernie berkeley edu University Illinois Champaign Urbana Seth Hutchinson seth uiuc edu University Massachusetts Amherst Roderic Grupen grupen umass edu University Minnesota Minneapolis Maria Gini gini umn edu University Wisconsin Robotics Lab Madison Vladimir Lumelsky lumelsky engr wisc edu Back Robotics Lab Home Page 