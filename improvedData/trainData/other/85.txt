MIME Version Server CERN Date Wednesday Nov GMT Content Type text html Content Length Last Modified Tuesday Jun GMT Cornell Course Home Pages Spring Course Home Pages These are links the home pages for number courses many cases there are class notes problem sets and other course information available although they may only available registered members the course Introduction Computer Programming introduction elementary computer programming concepts Emphasis techniques problem analysis and the development algorithms and programs The subject the course programming not particular programming language The principal programming language The course does not presume previous programming experience Programming assignments are tested and run interactive stand alone microcomputers Computers and Programming Intermediate programming high level language and introduction computer science Topics include program development proofs program correctness program structure recursion abstract data types object oriented programming data structures and analysis algorithms the principal programming language Structure and Interpretation Computer Programs challenging introduction programming languages and computer science Topics include recursive and higher order procedures performance analysis algorithms proofs program correctness probabilistic algorithms symbolic hierarchical data abstract data types polymorphic functions object oriented programming infinite data types simulation and the interpretation and compilation programs Introduction Scientific Computation introduction elementary numerical analysis and scientific computation Topics include interpolation quadrature linear and nonlinear equation solving least squares fitting and ordinary differential equations The Matlab computing environment used Vectorization efficiency reliability and stability are stressed Special lectures parallel computation and high performance Fortran Introduction Digital Systems and Computer Organization Web course material includes course info lecture notes homeworks project info and hopefully even lecture videos Topics covered the course include representation information machine assembly languages particular PowerPC processor organization interrupts and memory hierarchies combinatorial and sequential circuits data path and control unit design RTL and microprogramming Data Structures Lists trees graphs arrays and other forms data structure and their implementation Relationship between language and data structure emphasizing abstract data types Dynamic storage allocation and memory management Detailed study searching and sorting methods Analysis determine the more efficient algorithm given situation Computer Graphics and Visualization introduction the principles interactive computer graphics and scientific visualization Topics include surface modeling animation perspective transformations hidden line and hidden surface algorithms lighting models image synthesis and application scientific data analysis Practicum Computer Graphics Programming assignments dealing with interactive computer graphics and visualization scientific data Introduction Database Systems This three credit course covers the fundamentals database systems and information retrieval The database part the course deals with traditional structured data The relational model the main model used this part The information retrieval part this course concentrates how manipulate textual information which largely unstructured Introduction Analysis Algorithms Techniques used the creation and analysis algorithms Combinatorial algorithms computational complexity completeness and intractable problems Advanced Language Implementation This class will survey modern techniques for efficient implementation advanced programming languages such SML Java Haskell Scheme and Modula Practical Distributed Systems Practical issues designing and implementing distributed software Topics include local and wide area network protocols replicated data dynamic reconfiguration monitoring for and reacting failures recoveries distributed computation synchronization and techniques for expressing coarse grained parallelism the application level Practicum Distributed Systems you were using Java enabled browser you would have seen some animated text scrolling here The practical aspects distributed systems are studied through the design and implementation significant system Projects are available the area distributed agents network and resource management fundamental network protocol research hot new network protocols real time communication distributed virtual reality Java distribution Java applications CSCW distributed simulations distributed data management and distributed multiplayer games High Performance Computer Systems you were using Java enabled browser you would have seen some more animated text scrolling here This course discusses the design high performance processors including techniques such superscalar superpipeled RISC processors bit instruction set extensions cache coherency processors and more The Web page contains all lecture notes problems sets and readings available electronically the term progresses all course projects will described there too Software Design for High Performance Architectures Sophisticated software technology required exploit the enormous computing power modern high performance architectures like pipelined VLIW superscalar and parallel architectures The objective this course study these architectures and master the compiler and runtime systems technology required deliver high performance the applications programmer emphasize technology relevant computational science applications such dense and sparse matrix techniques and iterative and direct solvers using these examples throughout the course Machine Vision introduction computer vision Topics include edge detection stereopsis motion and optical flow and extracting shape from images Students will implement several the algorithms covered the course addition research project Natural Language Understanding This course introduction natural language understanding subfield artificial intelligence whose primary concern the computational study language use The course covers all aspects natural language processing including semantic interpretation syntactic analysis discourse processing text summarization natural language generation language acquisition knowledge acquisition memory models and statistical methods ambiguity resolution Seminar Natural Language Understanding Covers current topics natural language understanding computational linguistics and relevant areas machine learning Meets once week for hours present and discuss recent papers the field well ongoing natural language understanding research the department Information from previous semesters Information from previous semesters may retained for while but don surprised certain links don work Fall Spring Summer Fall MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Jan GMT More about More About Myself Huiqun Liu Education Student present University Texas Austin Department Computer Sciences Tsinghua University China Department Computer Science Harbin Institute Technology Department Computer Science Publications Redirection based Scalable Web Servers Technical Report Bell Labs August Model based sensor planning strategy using rules Active feature prediction and detection Proceeding IEEE International Conference Computer Vision and Pattern Recognition Seattle Washington June CAD model based robot vision system Proceedings International Conference Signal Processing Beijing Vol Sensor Planning Strategy robot vision system SPIE Boston Sensor planning strategy using rules model based active vision system Asian Conference Computer Vision Japan Nov Object recognition and localization strategy using sparse structured light images Conference Directions Research Intelligent Robot Vision Systems China Sept Contact Information mail hqliu utexas edu Phone Address Campus Department Computer Sciences Taylor The University Texas Austin Austin Home Address Street Apt Austin This page last modified May For comments you are welcome send email hqliu utexas edu Server CERN Date Tue Jan GMT Content Type text plain Content Length Last Modified Mon Sep GMT Name Username Known Mail Address Blau Seth sdb sdb nyu edu Carr Richard rrc Diament Judah Michael jmd Elkin Vadim Fuh Paul pqf Hanna Adel amh nyu edu Hertzmann Aaron Phillip aph Huggins Patrick psh psh nyu edu Jawalekar Raju rvj rqj nyu edu Jermyn Ian Hyla ihj jermyn nyu edu Kim Jae Hwan jhk Llaurado Ramon rql Newman Joshua Amiel jqn Pao Hsing Kuo hkp Raskin Gabriel Carl gcr rask nyu edu Sceniak Michael mps sceniakm acf nyu edu Singer Eric Lee els els nyu edu Xiangyang xqw wux acf nyu edu Server Dienst MIME version Content type text html Correctness Algorithm for Reconstituting Program from Dependence Graph Correctness Algorithm for Reconstituting Program from Dependence Graph Thomas Ball Susan Horwitz and Thomas Reps July Given arbitrary program dependence graph the algorithm ReconstituteProgram determines whether the graph fIfeasible fIi the dependence graph some program and produces such program ReconstituteProgram currently used for program integration and has the potential used other algorithms that manipulate program dependence graphs This paper corrects minor error that was the original definition ReconstituteProgram and proves that the new version the algorithm correct How view this documentDisplay the whole document one the following formats HTML bytes You are granted permission for the non commercial reproduction distribution display and performance this technical report any format BUT thispermission only for period forty five days from the most recenttime that you verified that this technical report still available fromthe Computer Science Department the University Wisconsin Madison underterms that include this permission All other rights are reserved theauthor Search NCSTRLThis server operates Madison Computer Sciences Technical Reports Send email www wisc edu 