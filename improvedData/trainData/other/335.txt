MIME Version Server CERN pre Date Sunday Nov GMT Content Type text html Content Length Last Modified Tuesday Jun GMT CoNote small group annotation experiment CoNote Annotation homepage Jim Davis davis dri cornell edu Dan Huttenlocher dph cornell edu The annotation system experiment how people can collaborate when working with set shared documents allows group people share set documents and make comments about the documents which are shared with the other members the group annotation document comment question about the document Annotations can also refer other annotations For example they can answer questions refute arguments About annotationan explanation the project example example CoNote taken from problem set from the Fall course You can add notes here but you can see realistic example Note that this example taken from the middle problem set you won see the context that the students did see The names have been changed protect privacy see demonstration version User Guide Author Guide Administrator Guide Related work bugs and future plans Obtaining the code plan release the code but there are restrictions you must agree The first test annotations for Cornell course support annotated course notes and problem sets now have few measurements usage Help wanted would also like have someone implement faster Jim Davis davis dri cornell edu Sept MIME Version Server CERN Date Wednesday Jan GMT Content Type text html Content Length Last Modified Tuesday Nov GMT UTCS Student Organizations UTCS Organizations ACM Student Chapter GRACS MCSSO UPE Computer Honor Societygripe utexas edu MIME Version Server CERN Date Wednesday Jan GMT Content Type text html Content Length Last Modified Friday Dec GMT ECMP ProjectsECMP Logic Design Digital SystemsInformation Electronics WorkbenchGeneral Hints for Using EWBAccessing EWB Smith LabLinks Official LIT instructions for Accessing EWB over CWRUnetAlternative Methods for running EWB under Windows Alternative Method for running EWB under Windows Bad News for MacIntosh Users Here link back the ECMP home page Joan Carletta carletta ces cwru edu Date Tue Nov GMT Server NCSA Content type text html Last modified Thu Oct GMT Content length Programming Assignment Programming Assignment Due September the start class Contents Introduction Suggestions Scanning Commands Using Threads Exceptions Grading Other Stuff Introduction The purpose this assignment introduce you Java programming You are implement simple shell command interpreter that behaves similarly the UNIX shell When you type command response its prompt will create thread that will execute the command you entered Multiple commands can chained together single line separated ampersand characters Your shell will create thread for each individual command and prompt for more user input when they have all finished Unlike the real shell your program only has deal with handful built commands cat file Print the contents the named files System out one after the other cmp file file Check whether the two files have identical contents and print appropriate message System out sort file Print the lines file sorted lexicographic order exit Terminate the program You should also terminate reaching end file System You needn implement pipes direction standard input and standard output but you must able handle arbitrary number commands per line each with arbitrary number arguments separated arbitrary amounts white space blanks tabs although only cat takes more than two arguments Suggestions Your public static void main procedure your primary class will quite simple will infinite loop that prints prompt reads line other courses program with infinite loop considered bad thing but Operating systems the norm parses breaks into its constituent commands starts new thread handle each the different commands and then waits for all the threads finish before printing the next prompt Scanning For scanning you may find easier read the entire line into String object The System object type InputStream can read either single bytes arrays bytes You could represent input line array bytes but you will find much easier use String instead You may want look into the class DataInputStream figure out how read line into String Tokenizing String made almost trivial using the StringTokenizer class found java util Commands For the cat command you should look the class FileInputStream see how read data from file cmp will similar cat but this time the contents the two files will compared For sort efficient sorting algorithm not required anything that works You might want adapt the insertion sort used introduce Java the discussion sections Some the classes that might help you here are the DataInputStream class and the Vector class Using Threads Your primary class will read command from user and then will create thread carry out the command will then wait until the thread has finished before continuing its own execution There are two ways start threads Java The first derive your class from the Thread class and then override its run function see the text The second use the Runnable interface Here you create class that implements this interface You then pass reference this class into the constructor new thread object The former perhaps easier understand conceptually but the latter more general You may choose either method for this assignment Exceptions Java requires you place within try block any methods that might cause exception Following the try block catch clause catch clauses that will used catch any exceptions that have been thrown see chapter for more details the syntax these statements Your code should deal with exceptions appropriate manner For example exceptions such attempting open file that does not exist should result message the user and the continuation the program More serious exceptions may require error message followed program termination using System exit Grading Hand your source program and transcript terminal session which demonstrates your shell ability perform specified see script sure that you use test data adequate exercise your program capabilities You should follow all the principles software engineering you learned and including top down design good indentation meaningful variable names modularity and helpful comments You will graded not only the basis correctness but also programming style and completeness test data Other Stuff For those you writing your programs the Solaris machines you might consider using makefile aid compilation Those you using DOS may want look into doskey little program that provides for easy command manipulation Feel free send any other work saving methods you find the and will distribute them the class solomon wisc edu Thu Oct CST Copyright Marvin Solomon All rights reserved 