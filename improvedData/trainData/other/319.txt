MIME Version Server CERN Date Sunday Nov GMT Content Type text html Content Length Last Modified Sunday Nov GMT Trefethen numerical ODE PDE textbook Finite Difference and Spectral Methods for Ordinary and Partial Differential Equations Lloyd Trefethen Cornell University This page textbook was written during and used graduate courses MIT and Cornell the numerical solution partial differential equations The book has not been completed and indefinite hold while attend other projects However the part that written quite polished form including many exercises and suitable for classroom use Copies can obtained sending dollars pounds sterling this sum includes postal charges Prof Trefethen Dept Computer Science Upson Hall Cornell University Ithaca USA LNT cornell edu Because figures and other complications not all the book PostScript would not possible make fully available the Web Introductory material pages megabytes Excerpts from the text pages megabytes Return Trefethen homepage MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Tuesday Aug GMT Reports Robert van GeijnNumber times this page has been accessed since July Reports Robert van Geijn Almadena Chtchelkanova Carter Edwards John Gunnels Greg Morrow James Overfelt Robert van Geijn Towards Usable and Lean Parallel Linear Algebra Libraries Department Computer Sciences University Texas May Almadena Chtchelkanova John Gunnels Greg Morrow James Overfelt Robert van Geijn Parallel Implementation BLAS General Techniques for Level BLAS Department Computer Sciences University Texas Oct Edwards Geng Patra and van Geijn Parallel Matrix Decompositions have been doing all wrong Department Computer Sciences University Texas Oct Brian Grayson Ajay Shah and Robert van Geijn High Performance Parallel Strassen Implementation Department Computer Sciences The Unversity Texas June Prasenjit Mitra David Payne Lance Shuler Robert van Geijn and Jerrell Watts Fast Collective Communication Libraries Please Department Computer Sciences The Unversity Texas June Robert van Geijn and Jerrell Watts SUMMA Scalable Universal Matrix Multiplication Algorithm Department Computer Sciences University Texas April Also LAPACK Working Note May Geng Oden and van Geijn Massively Parallel Computation for Acoustical Scattering Problems using Boundary Element Methods Texas Institute Computational And Applied Mathematics TICAM Report Aug Greg Henry and Robert van Geijn Parallelizing the Algorithm for the Unsymmetric Algebraic Eigenvalue Problem Myths and Reality LAPACK Working Note University Tennessee Aug Barnett Payne van Geijn and Watts Broadcasting Meshes with Worm Hole Routing University Texas Department Computer Sciences Barnett Littlefield Payne and van Geijn the Efficiency Global Combine Algorithms for Meshes With Wormhole Routing Department Computer Sciences University Texas March Barragy Carey and van Geijn Performance and Scalability Finite Element Analysis for Parallel Computation University Texas CNA Report May Jack Dongarra Robert van Geijn and David Walker Look Scalable Dense Linear Algebra Libraries LAPACK Working Note University Tennessee Technical Report April Barnett Payne and van Geijn Optimal Broadcasting Mesh Connected Architectures Department Computer Sciences University Texas Dec Jack Dongarra and Robert van Geijn Two Dimensional Basic Linear Algebra Subprograms LAPACK Working Note University Tennessee Technical Report Oct Robert van Geijn Massively Parallel LINPACK Benchmark the Intel Touchstone DELTA and iPSC Systems Preliminary Report Department Computer Sciences University Texas Aug Jack Dongarra and Robert van Geijn Reduction Condensed Form Distributed Memory Architectures LAPACK Working Note University Tennessee April revised Oct Technical Report Also ORNL Robert van Geijn Global Combine Operations LAPACK Working Note University Tennessee Technical Report April Robert van Geijn Novel Storage Scheme for Parallel Jacobi Methods Department Computer Sciences The University Texas Austin July Robert van Geijn Implementing the Algorithm Array Processors Dissertation Department Computer Science University Maryland Leary Stewart and van Geijn DOMINO Message Passing Environment for Parallel Computation Department Computer Science University Maryland Date Tue Jan GMT Server NCSA Content type text html Introduction Computers Boston University CAS Computer Science DeptCAS Introduction Computers Student Home PagesSome the following home pages may not available yet Abdul Latif ScheherazadeAdelman JonathanAnderson mercedesAngelikas PaulAsare KwakuAsavanond Davidashkanani hamidAudette JacquelineBARRY JESSICABrown NathanCachecho CarineCantave GabrielleCatalino JeremyChesal SarahChambers CurtisChan Evacheng angelCincotta SteveClark LisaConneely Mary EllenCosgrove SuzanneCurran DavidCurrie NicoleDamico KarenDashoff AmyDewilde StuartDiBenedetto NicoleDoolittle TammyDrew LamayDriscoll PatriciaDupee MatthewDwyer KateEspensen Kirsteneven gaelleFernsler JohnForte AngelaGill HollyGonzalez GretchenGray JonathanHarper KendrahHarty Jenniferho taeshaHo Hanna Hollis FionaHorvath DeannaHoshino MasatoHunt CarolynHyung Eun JungJensen KristinaJohnson Zenobiakallarakkal johnKapoor KomalKaratabanov DalidaKarr ClaireKasper ColinKassem StevenKeating RyanKhalsa Hari MandirKillion Errinkim minKingsbury ElisabethKohl LauraKoolidge MichaelLam Koon HungLandry Nicolelarkin devinLindars IanMancini AnthonyManney ElizabethMatsueda Yosukemedeiros courtneyMercado Michaelmin janeMonaghan Michaelmotta sabrinaMurtha BethO Brien HeatherOng Marcusoren gilPark JaePierre Jamie Pillai BryanPodlinski KamilPozoukidis SofiaQuinn ColinRatner HowardRodriguez NancyRomero JaimeSchindelman JessicaSchwartz JustinSegura Mariashaban ericShin SimoneSiewko LeslieSkelton Richardsloutsky ElizabethSmith GinaSwanstrom LilaSykes PeterThomas Amythomas emilTirmzi HassanTomeo JeffreyTowey MeganTrivedi SachinUmehara KanaUnsay MariebethVandenabeele CecileWalker RebeccaWarner LauraWarren MicahWatanabe MihoWilliams TaraWitherell KevinWong WaiWong Amyye huayu jinZhitomirsky GeneLou Date Tue Nov GMT Server NCSA Content type text html Last modified Fri Sep GMT Content length Getting Started Getting Started highly recommended that you immediately start learning the applications that you will using develop your programs The environment which you programmed has differences than the one you use Besides changing from the Macintosh DOS Windows operating system UNIX you also working outside integrated development environment Many the tools you used before are still present but independent applications Since you are reading this page assuming that you have successfully created your computer science account using newuser and are now logged The following exercise takes you through the steps get your first program compiled and running under UNIX have provided sample program that plays the game tic tac toe for your use and experimentation While working this exercise you will reading pages that indicate UNIX commands enter These commands are preceded which represents the UNIX prompt You should not enter the First your private sub directory create directory named Pzero you are unfamiliar with how this see the page how create directory Next get copy the sample tic tac toe program This sample program can obtained from the samples page that linked the home page During the semester will providing sample code for data structures that discuss lecture Find this link going back the home page and looking for the sample page link you are having difficulties click here directly that page Further instructions are provided the samples page for getting copy sample code files such for this case tictactoe Now that you have copy the source file for the tic tac toe game you should look with and editor See edit your program for more information how edit your program You not need make any changes compile the program which will the next step Before compiling the program suggest that you open another terminal window This can done clicking the left mouse button anywhere the background and selecting Xterm from the pop menu More information about the window system available here This new xterm window will used for compiling your program Change directories the location where you have copied the source code entering private You may compile your program entering the compiler command below This command assumes that the source file named tictactoe Wall tictactoe tictactoe For more information about the compiler flags see the page compiler flags When you are developing your own programs you usually encounter compilation errors These are typically syntax errors that prevent the compiler from creating executable version your program this case you would need your editor window and make corrections your source code For this program you should not experience any compiler errors unless you accidentally changed the source with the editor that case you can simply get new copy this sample code The next step after your program compiles would run your program This doen entering the following the UNIX shell prompt tictactoe More information about running programs located here While developing programs prefered run your program debugging environment UNIX this requires you execute another application shown below gdb tictactoe This start the debugger and allows you control the execution your program with breakpoints and stepping through the program instructions and examine the contents variables and other memory locations Two important commands for the debugger are run which begins execution you program and quit end the debugger The are many other commands and some the most useful are described here What you have completed above called program development cycle edit compile debug repeat until works However have made working program for you which simplifies the process great deal More information about the program development cycle can obtained from the Working with UNIX page Real practice obtained writing and debugging your own program See program for more information 