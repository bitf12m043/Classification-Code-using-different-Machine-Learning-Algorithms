MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Thursday Jan GMT Previous Semesters Fall took Introduction Multimedia Systems and Topics the Theory Distributed Systems was for Introduction Digital Systems and Computer Organization Spring took Information Retrieval and Theory Computing MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Sunday Jul GMT RoboKretaRoboKretaRoboKreta BesarRoboKreta Kicik RoboKreta Besar and RoboKreta Kicik are two autonomous intelligent toy cars built using the chassis and motors two fast radio controlled toy racing cars Brains based the MIT and miniboard controller boards are placed the cars They are still under metamorphosis and they should ready for their debut upcoming Robofest WYL Date Tue Jan GMT Server Apache Content type text html Content length Last modified Wed Oct GMT Technical Reports Technical Reports are available from the following sources Dienst Technical Report Server temporarily offline Local Catalog Technical Reports Local Restricted forms for submitting reports and other data Global Data Entry Forms Local Data Entry Forms Restricted Data Entry Forms Date Mon Nov GMT Server NCSA Content type text html Last modified Fri Aug GMT Content length How debug GCL How debug GCL There are several debugging facilities GCL Common Lisp loading syntax checking step function interactive break package trace function this tutorial simple piece buggy lisp code used show you how use these debugging facilities Assume have file named buggy lisp with the following function definitions File buggy lisp begins separate takes list containing any level symbols and numbers and returns list the form all numbers the list all symbols the list defun separate alist cond endp alist nil endp first alist separate rest alist numberp first alist cons first alist separate rest alist symbol first alist append separate rest alist list first alist merge separate first alist separate rest alist defun merge list list let result list dolist anitom list result cond numberp anitom setq result cons anitom result symbolp anitom setq result append result list anitom File buggy lisp ends try load the code load buggy lisp and get Error Unexpected end Fast links are use fast links nil for debugging Error signaled LOAD Broken LOAD Type for Help This means that have more than the file Here LOAD can detect the extra but just ignores extra which may cause problems later execution fix that insert one print statement after each defun block find out which defun block has the extra use commands and that defun block match and doing that find that need more the end SEPARATE function The corrected SEPARATE function below defun separate alist cond endp alist nil numberp first alist cons first alist separate rest alist symbolp first alist append separate rest alist list first alist merge separate first alist separate rest alist ERROR corrected Run load buggy lisp again and get the following message Loading buggy lisp Warning MERGE being redefined Finished loading buggy lisp The warning means GCL already have function named merge but your definition will have higher priority used Now run separate and get Error The function SYMBOL undefined Fast links are use fast links nil for debugging Error signaled COND Broken COND Type for Help The break package invoked automatically Now enter break command will get list all break commands For example prints last break message The function SYMBOL undefined know that the error related SYMBOL prints full backtrace all functions Backtrace system top level eval separate COND now know where and when the error occurs look for SYMBOL the COND statement inside SEPARATE function and find that should use SYMBOLP instead SYMBOL the type checking defun separate alist cond endp alist nil numberp first alist cons first alist separate rest alist symbolp first alist ERROR corrected append separate rest alist list first alist merge separate first alist separate rest alist run separate again and get Error SYMBOLP ANITOM invalid function Fast links are use fast links nil for debugging Error signaled DOLIST Broken DOLIST Type for Help Use and break commands again SYMBOLP ANITOM invalid function The problem that GCL tries interpret the result returned from symbolp anitom function Backtrace system top level eval separate cond append separate cond merge separate cond merge let DOLIST The problem happens after several recursive calls SEPARATE and the DOLIST statement the MERGE function Originally intend that SYMBOLP ANITOM case the COND statement but now seems that COND finishes correctly and the program returns from COND and breaks the DOLIST implies that COND ended too early some extra and SYMBOLP ANITOM left out COND and treated GCL function check all the COND statement and find there extra for the case before SYMBOLP ANITOM fix that deleting that and adding another the end SYMBOLP ANITOM case include the COND statement defun merge list list let result list dolist anitom list result cond numberp anitom setq result cons anitom result ERROR corrected symbolp anitom setq result append result list anitom ERROR corrected Now run separate and get Although not get break error message this result not expect Now can use TRACE trace MERGE and SEPARATE see they are working correctly trace merge Warning MERGE being redefined MERGE BTW You can always turn off the trace merge untrace merge command separate separate MERGE call with and should return not just MERGE NIL NIL MERGE NIL find that merge not working expected For example merge should return instead decide turn off the trace and use STEP look through simple case more closely untrace merge step merge Type and newline for help MERGE LET RESULT LIST NIL Through the steps find that the problem that tried initialize RESULT LIST But turns out they are both NIL How could this happen look LET statement and find that LET RESULT LIST will initialize RESULT with LIST while LET RESULT LIST will treat RESULT and LIST new local variables and initialize them NIL fix that and run merge and separate again This time they are almost working the way want merge separate NIL But not yet the nil should not accumulated you have exclude this specific case from your result adding one more case the COND statement the SEPARATE function defun separate alist cond endp alist nil null first alist separate rest alist ERROR corrected numberp first alist cons first alist separate rest alist symbolp first alist append separate rest alist list first alist merge separate first alist separate rest alist Now you will ready turn and relax 