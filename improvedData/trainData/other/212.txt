Server Dienst MIME version Content type text html THE DESIGN AND IMPLEMENTATION PRIVATE MESSAGE SERVICE FOR MOBILE COMPUTERSTHE DESIGN AND IMPLEMENTATION PRIVATE MESSAGE SERVICE FOR MOBILE COMPUTERS David Cooper August Even wireless networks create the potential for access information from mobile platforms they pose problem for privacy order retrieve messages users must periodically poll the network The information that the user must give the network could potentially used track that user However the movements the user can also used hide the user location the protocols for sending and retrieving messages are carefully designed this thesis will present protocol for replicated memory service which allows users read from memory without revealing which memory locations they are reading Unlike previous protocols this protocol efficient its use computation and bandwidth will then show how this protocol can used conjunction with existing privacy preserving protocols allow user mobile computer maintain privacy despite active attacks Allowing users retrieve messages anonymously introduces new problem order limit memory usage necessary remove old messages from the system However since users may become disconnected from the network for periods time important that the system hold onto messages until they have been retrieved their intended recipients The result conflict between the system need for information and users desire for privacy will present the design vacation service which have developed which stores messages for users which are disconnected which does not require users reveal any private information Finally will describe the implementation the private message service and discuss the performance estimates that derived for the system based experimental results will show the potential throughput the private message service reasonable How view this documentDisplay overview the document one the following formats Overview thumbnail pagesDisplay selected page one the following formats document has pages inline gif image Display the whole document one the following formats PostScript bytes Print download all selected pages You are granted permission for the non commercial reproduction distribution display and performance this technical report any format BUT this permission only for period forty five days from the most recent time that you verified that this technical report still available from the Computer Science Department Cornell University under terms that include this permission All other rights are reserved the author Search Home page NCSTRLThis server operates Cornell University Send email tech reports cornell edu Date Tue Jan GMT Server NCSA Content type text html ARLUT ITG World Wide Web Home PageITG Support PageSOFTWARE PROCESS IMPROVEMENTON LINE CALENDARON LINE TIMESHEETSPONSOR DIRECTORY Restricted ITG PRLOG ONLINE Restricted ITG PROJECTSINTERNAL RESEARCH and DEVELOPMENTPERSONNELADMINISTRATIVE POLICIES Restricted ARL INVENTORY Restricted ARL PERFORMANCE EVALUATION FORM Draft Last Modified Wed Oct CDT Date Tuesday Jan GMT Server NCSA MIME version Content type text html Last modified Monday Dec GMT Recent Papers Joe MitchellSelected Papers Joe Mitchell Mitchell Shortest Paths and Networks Draft survey chapter for the CRC Handbook Computational Geometry Feedback greatly encouraged Mitchell Guillotine Subdivisions Approximate Polygonal Subdivisions Part simple polynomial time approximation scheme for geometric MST TSP and related problems Manuscript April Revised July PostScript color transparencies talk Mitchell Guillotine Subdivisions Approximate Polygonal Subdivisions Simple New Method for the Geometric MST Problem Appears Annual ACM SIAM Symp Discrete Algorithms SODA Atlanta USA Jan pages See journal version below Part two see part above PostScript color transparencies talk Mitchell Blum Chalasani Vempala Constant Factor Approximation Algorithm for the Geometric MST Problem the Plane Journal version above last revision July Arkin Chiang Mitchell Skiena and Yang the Maximum Scatter TSP Annual ACM SIAM Symp Discrete Algorithms SODA appear New Orleans USA Jan pages Full paper submitted JACM Mitchell Some Applications Computational Geometry Manufacturing and Virtual Environments Abstract talk transparencies the Workshop Applied Computational Geometry Part FCRC Philadelphia May Arkin Held Mitchell Skiena Recognizing Polygonal Parts from Width Measurements Proc Canadian Conference Computational Geometry Gold Robert eds eacutebec City eacutebec Canada Aug appear Computational Geometry Theory and Applications Arkin Chiang Held Mitchell Sacristan Skiena and Yang Minimum Area Hulls Proc European Symposium Algorithms ESA Submitted Algorithmica Held Klosowski Mitchell Evaluation Collision Detection Methods for Virtual Reality Fly Throughs Proc Canadian Conference Computational Geometry Gold Robert eds eacutebec City eacutebec Canada Aug Barequet Chazelle Guibas Mitchell Tal BOXTREE Hierarchical Representation for Surfaces EuroGraphics Rossignac and Sillion eds Blackwell Publishers Europgraphics Association Volume Number pages Silva Mitchell and Kaufman Fast Rendering Irregular Grids ACM IEEE Symposium Volume Visualization VolVis San Francisco Oct pages color plate page Arkin Held Mitchell Skiena Hamiltonian Triangulations for Fast Rendering European Symposium Algorithms ESA Springer Verlag LNCS van Leeuwen Utrecht The Netherlands Sep Full paper appears The Visual Computer Mitchell and Wynters Finding Optimal Bipartitions Points and Polygons Extended abstract Springer LNCS Vol Dehne Sack Santoro eds Workshop Algorithms and Data Structures WADS Ottawa Ontario August Full paper above updated and corrects error the WADS abstract Arkin Halperin Kedem Mitchell and Naor Arrangements Line Segments that Share Endpoints Single Face Results Discrete Computational Geometry Vol Nos Special Volume discrete geometry dedicated Laszlo Fejes Toth Pach and Barany eds Original conference version was Proc Seventh Annual ACM Symposium Computational Geometry North Conway June Conference version incorrectly claimed bound log Arkin Meijer Mitchell Rappaport and Skiena Decision Trees for Geometric Models appear the International Journal Computational Geometry and Applications earlier version appears Proc Ninth Annual ACM Symposium Computational Geometry May Arkin Goodrich Mitchell Mount Piatko and Skiena Point Probe Decision Trees for Geometric Concept Classes two pages FIGURES are separate Workshop Algorithms and Data Structures August Mitchell Mount and Suri Query Sensitive Ray Shooting Proc Tenth Annual ACM Symposium Computational Geometry June appear the International Journal Computational Geometry and Applications Mitchell and Suri Separation and Approximation Polyhedral Objects Computational Geometry Theory and Applications Mitchell Approximation Algorithms for Geometric Separation Problems Technical Report Guibas Hershberger Mitchell and Snoeyink Approximating Polygons and Subdivisions with Minimum Link Paths Proc Second Annual International Symposium Algorithms SIGAL December Taipei Taiwan Springer Lecture Notes Computer Science Vol Full paper appears International Journal Computational Geometry Applications Vol December last modification this page Tuesday October Joe Mitchell jsbm ams sunysb edu Date Mon Nov GMT Server NCSA Content type text html Last modified Sat May GMT Content length Section Lecture Notes Week Lecture Notes Week Topic One dimensional arrays Passing arrays arguments Text Notes ArraysSimple VariablesSo far have used simple variables store values INTEGER SCORE REAL PRICE LOGICAL ANSWER Simple variables can only store single value one integer one real number one logical value store another value must declare new variable with different name INTEGER SCORE SCORE SCORE Array VariablesArrays store several related values under single variable name All values stored array are the same type called the base type Easier store several values array than declaring separate variables for each Declaring Array VariablesSpecify the name the array the base type and the number values store called the size the array basetype arrayname arraysize INTEGER SCORES REAL PRICES LOGICAL ANSWRS Array variables are declared together with simple variables PROGRAM FOO REAL COST INTEGER SCORES SUM Commonly use constant Fortran PARAMETER statement declare the size array INTEGER MAXSIZ PARAMETER MAXSIZ REAL SCORES MAXSIZ SCORES array variable stores three INTEGER under single variable name Referencing ArraysTo access particular value array you specify the array name and the subscript the value its position the array arrayname subscript The first value array has subscript the last has subscript arraysize SCORES first element SCORES second element SCORES last element Array variables can used anywhere you would use normal simple variable PRINT Your score SCORES BAR SCORES COS SCORES READ END SCORES Store values array using the assignment statement just like simple variables arrayname subscript value SCORES SCORES SCORES Array SubscriptsArray subscripts can literals variables expressions The value the expression determines which element accessed INTEGER SCORES SCORES SCORES SCORES Value array subscript must the range arraysize Array subscript INTEGER expression enclosed parentheses Right SCORES SCORES Wrong SCORES SCORES SCORES SCORES Important The type the array variable the base type and the subscript are very different REAL PRICES PRICES Variable Type PRICES ARRAY all the prices together PRICES REAL INTEGER Arrays and LoopsArrays are commonly processed using loop INTEGER MAXSIZ TOTAL COUNT PARAMETER MAXSIZ REAL SCORES MAXSIZ Read all the scores COUNT MAXSIZ READ SCORES COUNT END Add all the scores TOTAL COUNT MAXSIZ TOTAL TOTAL SCORES COUNT END Print out all the scores COUNT MAXSIZ PRINT SCORES COUNT END STOP END Try doing this without arrays The loop counter COUNT used the array subscript sequentially access the values one time Reading and Writing ArraysDO LoopAn array can filled reading the values loop READ SCORES END Values must typed different lines because the READ statement executed each time The values array can printed different lines using loop PRINT SCORES END Implied LoopCan read any part array from the same line using implied loop READ SCORES Equivalent loop inside the READ statement everything read off the same line Can print any part array the same line using implied loop PRINT SCORES Array ArgumentsArrays can passed into and out user defined functions and subroutines array arguments with passing simple variables arguments array variables must first declared the main program Important Pass both the array name and the array size arguments Must declare array inside the function subroutine PROGRAM TEST INTEGER MAXSIZ PARAMETER MAXSIZ INTEGER SCORES MAXSIZ PRINT GETMAX SCORES MAXSIZ STOP END INTEGER FUNCTION GETMAX LIST SIZE Finds the highest value the list Declare arguments INTEGER SIZE LIST SIZE RETURN END Input Array ArgumentsAs with simple variable arguments input array arguments should not assigned Right MAX LIST MAX LIST Wrong LIST Whole arrays can passed input arguments PRINT GETMAX SCORES MAXSIZ individual values can passed input arguments just like simple variables PRINT FACT SCORES Copyright copy Gareth Bestor bestor wisc edu Last modified May 