MIME Version Server CERN Date Sunday Dec GMT Content Type text html Content Length Last Modified Tuesday Aug GMT Viewing SystemViewing System Master Engineering Project Eric Young Sang Shim Computer Science Department Cornell University Advisor Professor Bruce Land Table ContentsIntroductionEquationsImplementationHow this program worksConclusionAcknowledgementsReferencesIntroduction Although various three dimentional display devices exist most computer graphics view surfaces are two dimentional Thus three dimentional pipeline the jargon term used describe the various processes converting from three dimentional world coordinate space two dimentional representation must contain projective transformation and viewing transformation the minimum requirements convert three dimentional scene two dimentional projection have designed and implemented the Viewing System which was carefully explained the Computer Graphics Alan Watt using JAVA All the objects are created the world coordinate system which conventionally represented right handed system can consider transformation Tview from world coordinate system viewing coordinate system Here viewing coordinate system vertices are expressed left handed coordinate system with the origin sometimes known the view point view reference point which represented the position viewer eye the position which virtual camera placed Then the second transformation Tpers applied project three dimensional points view space onto the the three dimensional screen space Then projected the vertices from screen space onto the projection space which two dimentional view plane simulate the camera transformation full viewing system will also determine view volume truncated view frustum which the subset world coordinate space which included the transformation process far general three dimensional rendering pipeline concerned needed define view volume define this view volume needed specify near plane far plane and view plane window The specific plane formula will presented the Equations section this report Since was very hard create the view frustum the world coordinate system have created the view frustum the viewing coordinate space and apply inverse Tview matrix the view frustum that has created the viewing coordinate system doing this was able create the view frustum the world coordinate system Also the three dimentional clipping should performed the viewing coordinate space Equations need viewing direction vector and vector and optional vector The following equations are showing how obtain these vectors vector viewing direction vector and obtained calculating camera position subtract camera from position This vector used when calculate the Tview Matrix vector vector Because must perpendicular need strategy that can take care this care where the user entered not perpendicular Since the user entered vector just estimated vector need calculate the vector apply this equation This vector also used when calculate the Tview Matrix vector optional vector that could obtained cross product and vector resulting left handed coordinate system Also this vector used when calculate the Tview Matrix Tview matrix obtained simply calculating this equation This Tview can transform any points world coordinate system into the viewing coordinate system matrix translates the object and matrix roates the object where and are the followings Now have have someway transform from the viewing coordinate system into the world coordinate system the case view frustum which was created the viewing coordinate system and needed transformed world coordinate system Tview inverse matrix obtained simply calculating this equation This Tview inverse can transform any points viewing coordinate system into the world coordinate system transpose matrix translates the object and matrix roates the object After have create the object the world coordinate system and transform the points into the viewing coordinate system need transform the points viewing coordinate system into the screen coordinate system again doing this are finally able simulate the camera transformation from world coordinate system screen coordinate system where Tpers matrix obtained simply calculating this equation This Tpers matrix consists and values that the user has entered from the user interface the distance from the camera the near plane Incidently the view plane the same the near plane this viewing system the distance from the camera the far plane Finally the value the half the height the view plane window create the view frustum should able specify the six planes There are and two values specifies the two planes the view frustum specifies the top and the bottom planes the view frustum And the specifies the front near plane and view plane plane and the far plane Implementation this project have implemented classes which represents each objects this Viewing System will introduce all the classes and briefly over each class class definition this section Class definitionscameraTransformationThe main program This class creates all the buttons canvases text fields And this class contains user input data Tview and Tpers matrixs Also this class initialize all the necessary variables and handle all the events that user entered such mouse click enter the value camera location camera vector and values Viewer DThis class converts the coordinates into the coordinates draw the canvases show the effect case this class rotates the object little bit and axis that the user can see the object effected Polygon DThis class the base class any other objects that would displayed the canvases such view frustum and cube This class contains all the vertices all three coordinate systems and the points that would displayed the canvases which called view coordinates this class ViewFrustumThis class contains all the necessary information about the view frustum This extended class from the Polygon class which means that contains every thing from the Polygon and plus whatever view frustum need have Also this class creates view frustum the viewing coordinate system according the value camera location and camera value CubeThis class contains all the necessary information about the cube This class extended class from the Polygon class Also this class creates cube the origin the world coordinate system according the length edge TviewThis class contains all the necessary information about the Tview Also this class creates the Tview doing the followings Find vectors Create the matrix Create the matrix Create the Tview matrix calculating Create the Tview inv matrix calculating BtrnasposeT TpersThis class contains all the necessary information about the Tpers Also this class creates the Tpers according the and values that the user entered worldCanvasThis class contains all the necessary information the world canvas Paints the objects the world coordinate system and handle the rotation the objects draging the mouse the world coordinate system viewCanvasThis class contains all the necessary information the view canvas Paints the objects the viewing coordinate system and handle the rotation the objects draging the mouse the viewing coordinate system screenCanvasThis class contains all the necessary information the screen canvas Paints the objects the screen coordinate system and handle the rotation the objects draging the mouse the screen coordinate system projectionCanvasThis class contains all the necessary information the projection canvas Paints the objects the projection canvas two dimentional manner Matrix This class contains the matrix calculation methods For this class have partially referenced from the code Awwwesome Webware VectorfThis class contains the general vector calculation methods This class the base class Vector any other Vector classes For this class have partially referenced from the code Awwwesome Webware Vector This class contains the four element vector calculation methods This class derived from the Vectorf class For this class have partially referenced from the code Awwwesome Webware The detailed code this project can obtained clicking thisHow this program works you like simulate the camera transformation see how the viewing system works you may press the viewing system Viewing System You will see four canvases the viewing system which are the world coordinate canvas viewing coordinate canvas screen coordinate canvas and the projection coordinate canvas user changes the approximated vector camera location vector camera vector and values this program redraws the objects according the values variables that user entered all these four canvas appropreately The user needed press VIEW button after they have changed the values variables simulate the camera transformation Conclusion was able simulate the camera transformation for viewing system this project simulating the Viewing System had less restriction when view the object the world coordinate since could change the camera position and where look Also having the view frustum didn have relying two dimentional clipping algorithm eliminate any information the view plane that falls outside the view plane window Eventhough this project performs just fine with initial design could think some more features that could make this project works even better First adding more objects view could make better understand what going while viewing the object Second diminishing the line brightness when draw the object gets deeper axis could help the user lot more tell which line front and which one the back Acknowledgements would have been difficult finish this project without the greatest guidence Professor Bruce Land would like thank him from the deep heart would like thank mother Yeon Shim for helping and praying for survive from the darkest period life Thanks brother and sister Andy Shim and Julie Shim for supporting and understanding financially and mentally also would like thank friends and cyber friends HANA and KIDS Most all would like dedicate this work father Han Yong Shim who heaven for giving strength and courage continue learn and complete the Masters Degree Cornell University References Alan Watt Computer Graphics Addison Wesley Publishing Company MIME Version Server CERN Date Tuesday Jan GMT Content Type text html Content Length Last Modified Friday Nov GMT ContentsDepartment Computer Sciences Annual ReportContents Cover Foreword Bledsoe and Simmons Remembered Education Programs List Faculty Faculty Achievements Faculty Profiles Sponsored Research Computing Facilities Student Honors and Scholarships Industrial Liaison and Professional Education Distinguished Lecture Series Colloquia Graduate Students Faculty Directory For More Information Department Computer Sciences Taylor Hall The University Texas Austin Austin Texas Telephone Fax Jayadev Misra Chair Dianne Driskell Editor WWW Version Dianne Driskell Cover photo Battle Hall erected and named honor Professor William James Battle was first library building Architect Cass Gilbert inspired buildings Zaragoza Spain created Spanish renaissance building with ornamental cornices wide projecting eaves and high tiled roof Considered many the most beautiful building campus the high arched windows provide light the second floor reading room Battle Hall currently houses offices and the library the College Architecture background annual reports are printed recycled paper trcenter utexas edu Date Wednesday Jan GMT Server NCSA MIME version Content type text html ADMI CALL FOR PAPERSCALL FOR PAPERSADMI Increasing Diversity Research and EducationThe Symposium Computing Minority Institutions May June Washington PURPOSE Dissemination and discussion information helpful activities designed increase the numbers minority computer scientists and computer engineers All regular papers must emphasize points that are unique minority populations institutions Student papers should report research activities TOPICS Original papers but not limited the following topics are invited Activities for minority students including attracting students computer sciences bridge programs outreach retaining students mentoring creation special environments involving students research Educational program components include establishment facilities instructional research social for minority students developing culturally sensitive curricula models education specially relevant minority populations Institutional level activities including improving the research and teaching environment partnerships with major research institutions faculty enhancement activities addition student research papers topics computer science and computer engineering areas are solicited SUBMISSION PAPERS Six copies two page extended abstract should submitted Lewis Chair ADMI Program Committee Department Computer Science Anderson Hall University Kentucky Lexington Kentucky This abstract must received January Authors should state whether the paper intended for student regular session The exact topic should also indicated Authors will notified the review committee decision February and camera ready copy the paper will expected March TRAVEL SUPPORT Funding for assistance with travel expenses for participants will available Priority shall given authors and students request letter should accompany the submission the extended abstract CONFERENCE CHAIR Don Coleman Department Systems Computer Science Howard University Washington TECHNICAL PROGRAM COMMITTEE Andrea Lawrence Spelman University Ronald Leach Howard University Forbes Lewis University Kentucky Committee Chair John Trimble Howard University Date Tue Nov GMT Server NCSA Content type text html Last modified Sun Sep GMT Content length Numerical Analysis Screening ExamsNumerical Analysis Screening Exams Spring Fall Spring Fall Spring Fall Spring Fall Fall Spring Fall Spring Fall last change feb 