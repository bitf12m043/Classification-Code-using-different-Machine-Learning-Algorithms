MIME Version Server CERN Date Monday Dec GMT Content Type text html Content Length Last Modified Monday Mar GMT Instruction Set Simulator Back Home Page Project Instruction Set Simulator Date Assigned March Date Due March Before new processor built the architects usually implement instruction set simulator This simulator runs programs written for the new architecture that the instruction set can fine tuned for usability and work software can started before the hardware available This assignment involves the implementation instruction set simulator assembly language will give you assembly language program which accomplishes part this task and you will add whatever assembly language code necessary make the simulator fully functional This project due Thursday March the start class You are encouraged work groups most two building this program The completed program should simulate machine language instructions stored simulated memory The simulator should Actually only implement physical memory address through attempt simulated instruction fetch store memory address the range through should cause exception Memory fetches and stores addresses the range through should cause input output occur memory fetch address this range should cause printed out hexadecimal followed question mark The simulator should then accept bit hexadecimal constant input from the keyboard and should return that input the fetched word memory store address this range should cause printed out hexadecimal followed colon and the value stored also printed hexadecimal When started your simulator should enter input loop which allows values entered into the simulated memory The input loop should behave follows Read bit hexadecimal constants one per line The first will count words the second will legal memory address Your simulator should then read hexadecimal bit constants one per line storing the first memory location the second and the last This should repeated until count input The simulator should then start executing instructions from location Once the simulated processor has executed HALT instruction the simulator should print hexadecimal the contents registers status register bits and the contents its memory addresses through Since there mechanism for creating reset device interrupt the software simulator these interrupts need not addressed What Modify Make the following modifications the instruction set simulator Remove any bugs which might lurking the top level fetch execute loop Complete the implementation any opcodes which are missing not fully implemented Complete the implementation any Bcc cases which are missing not fully implemented Implement the cases LOAD and STORE Make HALT compliant with the specification Make sure that the simulator reads from writes valid memory locations all cases particular look the implementation RTI and the interruption handler When could these routines make invalid memory accesses Fix any problems that you find bad memory access this sort occurs the interruption handler the RTI implementation print error message and halt the simulator Make any other modifications necessary bring the simulator into compliance with the specification Mark your modifications the simulator source code with highly visible comments Rows asterisks accompanied word two explanation the type modification are recommended reader should able easily distinguish your modifications from the original source code Examples move begin insertion move end insertion rts and move deletion What Hand Please hand the following single envelope marked clearly with your name hardcopy the full source the completed simulator program hardcopy the ouput produced the Listing Run option for the simulator run the example given the Specification hardcopy the output produced the Run option for the simulator run your own additional test cases disk containing the assembly language for your instruction set simulator clearly named Back Home Page MIME Version Server CERN Date Monday Jan GMT Content Type text html Content Length Last Modified Monday Jul GMT Hiep Nguyen Resume Hiep Nguyen Ave Austin Texas Home Work hiep utexas edu http www utexas edu users hiep Objective Programming Languages Hardware Software Platforms Work Statement Work Experiences Education Other Projects Other Interests ReferencesObjective successful software contractor working with systems and Internet solutions Programming Languages Java JavaScript Perl HTML CGI Assembly Assembly Oracle SQL LISP Hardware Software and Programming PlatformsDOS Windows UNIX Macintosh EducationM Computer Science December The University Texas AustinB Computer Science May The University Texas AustinWork Statement work experience has generally involved system work graphics and some databases interest mainly lies providing Internet software solutions Work Experiences Contract Programmer Oct May The University Texas Austin Responsibilities Design and implement WWW resume database front end and Perl database backend system for the Natural Science Placement Center Write proposals timeline accessment and documentation Lead software engineering process and consult with clients and Computation Staff Managed contracting and time lines project Teaching Assistant Jan May The University Texas Austin Responsibilities Tutored Taught students Compilers Techniques MethodsGraded Programs and assisted professors Teaching Assistant Oct Dec The University Texas Austin Responsibilities Taught students Scheme Lisp Pascal and Assembly Language Programming Taught students fundamental programming conceptsGraduate Research Assistant May Oct The University Texas Austin Responsibilities Designed and developed software for robotics research Developed real time control algorithms for robots Created simulation tools for robotics research Developed REXIS real time operating system using and Assembly for the based robot Created cross platform graphics system XWindows Postscript Mac Managed Maintained and documented house software Worked software development team Trained new personnel the use house software Teaching Assistant Jan May The University Texas AustinResponsibilities Tutored Operating Systems students Assisted students with UNIX programming problems Programmer May Dec Dell Corporation Austin Texas Responsibilities Developed Oracle database retrieval and manipulation software using Powerbuilder and SQL team developer Used UNIX shell scripts manipulate and maintain data Documented and maintained software Programmer May Feb The University Texas AustinResponsibilities Implemented natural language data categorization software for nursing and medical personnel Did analysis natural language data Documented and maintained software trained personnel using natural language software Other Projects Developed XAKCL XWindows graphics package for AKCL LISP Worked with Game Graphics Engine for the IBM Worked with TCl programming new XWindows modules Other InterestsSee HomePage References Available upon request hiep utexas edu Last updated September Date Tue Jan GMT Server Apache Content type text html Content length Last modified Fri Nov GMT Programming Assignment Computer Science IIFall Programming Assignment Assigned Friday November mail Proposal Due Wednesday November External Documentation Due Tuesday December Program Listing Due Tuesday December Scheduled Demonstrations Tuesday December and following NOTE Standard late penalties will apply after these dates however work will accepted after the last day classes Friday December Your last programming assignment this semester design and implement program that visually demonstrates the ideas underlying one the advanced sorting techniques are studying class Here are the requirements Your program must written You are not required use the SAC computers but rather can use any the computer systems that are readily available campus including but not limited the SAC computers the IBM Macintoshes the Library Microlabs the NeXT computers you would like use computer system other than one these check with first Whatever system you choose must have some way proving that was able compile your program for example creating program listing and must available campus for you demonstrate your program for You must choose one the advanced sorts are studying class namely Quicksort Heapsort Shellsort show your program You must design some method visually demonstrating through your program the ideas that underlie your chosen sort There are many possible different designs here are just three ideas Using IBM with its graphics capabilities along with Microsoft Borland you could demonstrate Heapsort First you could construct list randomly chosen integers graph them cloud points with their list index positions plotted along the horizontal axis and their values plotted along the vertical axis and then apply Heapsort the list and show how the cloud gradually changes shape first that triangular heap and from there the nearly straight diagonal line that the signature sorted list first all points could drawn red for unsorted you swap two points they could briefly blink yellow then back red and finally when point known have reached its final position the sorted list could permanently become green You could show running statistics how many total comparisons and swaps were made and how much time the the sort taking Like the above showing cloud points being sorted say Shellsort but using SAC Unix GNU and the CURSES screen control library CURSES was the library used demonstrate the interactive workings the MazeCrawler from Program You won able show many points the cloud being limited maximum the standard monitor screen columns but the effect would similar Instead color you could use the special hilighting features made available CURSES Using SAC Unix GNU and regular cout statements demonstrate Quicksort First you could ask the user choose between several possible pivot picking strategies discuss what these are lecture soon which include picking the middle last item list item chosen random the median value three items chosen random etc Then you could ask the user enter unsorted list numbers say the user entered the numbers You could then visually display the list the screen series text bars XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXX XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX XXXXXXXXXXXX where the far left hand number the position the item the list and the next number the value the item Your program could pause and once the user signals that she ready continue pressing the enter key you would then inform the user the next step involved performing your Quicksort Now pick pivot namely the item position which and use partition the list and would then visually display your list again You could display the entire list each time but could have some special way marking that portion the list that currently undergoing partitioning say drawing using capital and drawing the rest the list using small This process drawing pausing explaining and drawing would continue until the entire list was sorted You could then provide some statistics how good the chosen pivot picking strategy was for this particular list During partitioning the average size the larger the two partitions formed contained the available list items which above the optimal value encourage you come with your own design you may use one the two listed above Your goals should creative and innovative Show off your knowledge programming and your chosen sort Produce attractive and informative demonstration program Your program must actually implement your chosen sort that say must capable applying your chosen sort many different lists numbers not just the same old list over and over Your program must have some means acquiring diverse lists numbers allowing the user enter the list creating the list randomly and different fashion each time run etc You can however place some reasonable constraints the size the list and the range the values the list Your program must also teach the sort indicating both the strategy used the sort order the entire list and also the strategy used the sort single sort pass Here what you need submit complete the assignment You must mail proposal which specifies which computer system you have chosen use which make version compiler software you will using which the three sorts you have chosen work with how you are going visually demonstrate the way your chosen sort works You must turn standard External Documentation including Specifications Algorithm and Justification the place Proposed Testcases you must include some extensive visual samples hand drawn are here how your demonstration program will look when run You must turn listing for your program and have some method indicating that your program compiled with errors the place program executions you must schedule minute demonstration your program with You must have submitted your proposal external documentation and program listing prior your demonstration talk more during class about how about scheduling demonstration with For extra credit you can add demonstrations additional sorts your program that the interesting aspects more than one sort can seen and studied Good luck Date Mon Nov GMT Server NCSA Content type text html Last modified Fri Jan GMT Content length The Vectra LabThe Vectra Lab The Hottest Computer Science lab the building The Only Computer Science lab the building The Vectra Lab and combined consist vectra Each vectra holds the basic DOS operating system and enough connect the Novell server WILEY Windows and other application programs well user files are stored this server Thus access these files can only obtained after the proper login procedure Wiley currently stores accounts for some sections New users activate their accounts running the newuser program This page not intended answer the general course related questions student The TAs and Consultans have probably written much better pages answer such questions For questions you could take look the frequently asked questions page students can take look the page Events New User accounts Default files Quotas Files Creating Handin directories Permissions Rights Restoring Deleted Files FTPing Wiley Printing Connection statistics for Wiley For questions about admin related topics mail lab wisc edu Questions about general systems lab topics should mailed lab wisc edu Specific questions about this page can mailed pdsalmon wisc edu Wiley currently supports more than user accounts Created pdsalmon wisc edu Last modified pdsalmon 