Server Dienst MIME version Content type text html Security Architecture for Fault Tolerant SystemsA Security Architecture for Fault Tolerant Systems Michael Reiter Kenneth Birman and Robbert Van Renesse June Process groups are common abstraction for fault tolerant computing distributed systems present security architecture that extends the process group into security abstraction Integral parts this architecture are services that securely and fault tolerantly support cryptographic key distribution using novel techniques detail the design and implementation these services and the secure process group abstraction they support also give performance figures for some common group operations How view this documentDisplay overview the document one the following formats Overview thumbnail pagesStructural overviewDisplay selected page one the following formats document has pages raw OCR output resolution tiff image inline gif image Display the whole document one the following formats OCR text produced OCR may have errors bytes Print download all selected pages You are granted permission for the non commercial reproduction distribution display and performance this technical report any format BUT this permission only for period forty five days from the most recent time that you verified that this technical report still available from the Computer Science Department Cornell University under terms that include this permission All other rights are reserved the author Search Home page NCSTRLThis server operates Cornell University Send email tech reports cornell edu Date Mon Jan GMT Server NCSA Content type text html The AutoCounter This neat little url that you can include your HTML pages generate spiffy little hit count odometer Simply add the following line your HTML source code href http cvrc ece utexas edu stephenc autocounter html img src http rhine ece utexas edu cgi bin users stephenc autocounter autocounter xbm And you good This program based piece written Frans van Hoesel and modified countless others added some extra code that made non page specific you don need different autocounter xbm for each page looking ways improve the efficincy the code some more maybe some report generation and other statistics well Stuff like who looking your page when they did what browsers they used etc interesting say the least This beta release its use restricted the utexas edu domain pages Others will able see your spiffy odometer but they can use themselves unless their page originates from utexas edu computer USE YOUR OWN RISK although the only risk can see leaving and the autocounter stops working when they delete account BUG REPORTS far the only bug that browsers may cache the image have autoload images unchecked the count could appear wrong off the low side plan comparing the true number hits logged the web server versus the number time the image called should interesting statistic Also treat pages selected http blah and http blah index html differently This can fixed get around noticed people who are viewing their own pages choosing file open local The AutoCounter will give local ref erences different count than web server hits view your own pages via the server and youre people have looked this page Send mail look resume check out homepagestephenc mail utexas edu Last modified Sun Sep Date Tuesday Jan GMT Server NCSA MIME version Content type text html Problem DefinitionsClass Problem DefinitionsMaximum Leaf Spanning Dheerendra and JaiswalHamiltonian Tour EastPartition Etesse and ProvostBin Packing and SuMultiprocessor Scheduling Katabathuni Luthra and VempatyLongest Path LevyN Queens MattinglyHitting Set PivkinaSubgraph Isomorphism Subbaraman Date Wed Dec GMT Server NCSA Content type text html Last modified Mon May GMT Content length Computer Sciences Research InformationUW Computer Sciences Research InformationResearch Projects Condor Coral Deductive Database System CPNET Complementarity Problem Net EXODUS Extensible Object Oriented Database System Toolkit Galileo Long Term Architectures NEXT Paradise Parallel Data Information System Paradyn Parallel Performance Tools Net Scout SHORE High Performance Scalable Persistent Object System University Wisconsin Robotics Laboratory Wisconsin Multiscalar Wisconsin Program Slicing Project Wisconsin Wind Tunnel WWT ZOO Desktop Experiment Management Environment your project not listed here you can add project page There also some information for members the faculty planning budgets www wisc edu 