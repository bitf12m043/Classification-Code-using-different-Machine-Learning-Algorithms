Date Mon Nov GMT Server NCSA Content type text html Simultaneous Multithreading home page Simultaneous Multithreading ProjectOverviewPeoplePublications Overview The crucial problem facing today high speed microprocessors maintaining high processor utilization the face long instruction and memory latencies alleviate this problem modern processors issue multiple instructions per cycle superscalars interleave the execution different threads different cycles multithreaded processors Ultimately though both techniques are limited the amount parallelism available within single thread single cycle Simultaneous multithreading SMT technique that permits multiple independent threads issue instructions superscalar functional units single cycle SMT combines the multiple instruction issue features wide superscalar processors with the latency hiding ability multithreaded architectures SMT processor all hardware contexts are active simultaneously competing each cycle for all available resources This dynamic sharing processor resources enables SMT exploit thread level and instruction level parallelism interchangeably both forms parallelism can effectively used increase processor utilization Our studies have demonstrated that simultaneous multithreading significantly improves processor throughput and performance both multiprogrammed and parallel workloads have shown that these performance gains can achieved architecture with only minimal extensions modern out order superscalar processors Our current and future work includes investigations fast synchronization techniques enabled SMT are also conducting research other architectural and compiler issues for simultaneous multithreading PeopleFaculty Susan Eggers Hank LevyGraduate students Jack Dean TullsenIndustrial collaborators Digital Equipment Corporation Joel Emer Rebecca Stamm Publications Converting Thread Level Parallelism Into Instruction Level Parallelism via Simultaneous Multithreading Abstract Postscript Eggers Emer Levy Stamm and Tullsen Submitted for publication July Exploiting Choice Instruction Fetch and Issue Implementable Simultaneous Multithreading Processor Abstract Postscript Tullsen Eggers Emer Levy and Stamm Proceedings the Annual International Symposium Computer Architecture Philadelphia May Compilation Issues for Simultaneous Multithreading Processor Postscript Eggers Levy and Tullsen Proceedings the First SUIF Compiler Workshop Stanford January Simultaneous Multithreading Maximizing Chip Parallelism Abstract Postscript Tullsen Eggers and Levy Proceedings the Annual International Symposium Computer Architecture Santa Margherita Ligure Italy June students Check the list research projects still the student affairs page This page maintained Jack Lojlo washington edu 