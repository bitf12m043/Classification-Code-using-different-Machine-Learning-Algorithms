Date Thu Nov GMT Server NCSA Content type text html SPINspin washington edu The SPIN Operating SystemSPIN extensible operating system kernel that supports the dynamic adaptation system interfaces and implementations through direct application control while still maintaining system integrity and inter application isolation SPIN allows applications load code into the kernel runtime Because runs the kernel this extension code can access hardware and other operating systems services with with almost overhead basically procedure call and data can passed reference rather than copied The SPIN kernel itself provides core set interfaces and capabilities basic resources These are used collections extensions implement general system services such address spaces IPC threads and networking All extension code and most the kernel written the typesafe language Modula The property typesafety prevents extensions from crashing the system attempting manipulate arbitrary pieces code data SPIN runs DEC Alpha workstations using write both specialized applications such network video systems well for supporting general purpose UNIX programs You can connect machine running SPIN with the kernel SPIN web server here Quick Results This structure allows programs extend operating system services with low overhead For example with SPIN running MHz Alpha application can handle and recover from page fault microseconds takes microseconds create new thread control execute terminate and synchronize with its termination fork join protected procedure call another extension kernel function takes microseconds cross machine RPC application application over ethernet takes under microseconds over ATM really old adapters takes less than microseconds The same operations under Mach DEC UNIX take times longer the same hardware Time them yourself see our benchmarks page and save yourself the effort Recent reports and papers Dynamic Binding for Extensible Operating Systems invocation mechanism which provides flexible efficient and simple way integrating extensions with executing system Appeared the OSDI Extensibility Safety and Performance the SPIN Operating System design implementation and performance paper Appeared the SOSP Extensible Protocol Architecture for Application Specific Networking design implementation and performance paper Appeared Usenix Winter Conference Writing Operating System Using Modula Describes our experiences using Modula build high performance extensible system Makes clear the distinction between language and its implementation Language Support for Extensible Operating Systems been pretty happy with but had deal with few shortcomings order use the language safe extensible operating system This paper describes how addressed those shortcomings Safe Dynamic Linking Extensible Operating System Describes the dynamic linker use load code into the kernel Key point the ability create and manage linkable namespaces that describe interfaces and collections interfaces Language and Runtime Support for Dynamic Interposition System Code Describes the kernel internal communication and extension facilities Shows use dynamic code generation improve the performance critical kernel service More Information Dynamic compilation Waiting until run time compile code Paper trail Project Reports Talks Papers etc Project members Who are Benchmarks Interested the bottom line here Modula Information Modula ARPA Project Overview The executive summary and regular reports Our friends gotten lot assistance from academia and industry this project This page says who involved with Some related projects Pointers other extensible systems projects What other people are saying Barbs and Arrows Internal Documentation The latest status for project members Available Projects Projects that could result Qualifications credit Masters degree funded RAship position undergraduate project credit only Our mascot encouraged that many people have decided adopt our mascot their own This page maintained Brian Bershad bershad washington edu 