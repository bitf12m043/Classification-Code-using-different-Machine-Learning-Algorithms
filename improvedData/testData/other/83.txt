Date Tue Dec GMT Server NCSA Content type text html CSE Winter Tentative ScheduleCSE Winter Tentative Schedule Topics Introduction Jan Why programming languages Programming language paradigms Interpreters compilers Overview Lisp Jan Introduction Basic functions and expressions Lisp Alternative control structures Rules evaluation How write recursive functions etc Programming Techniques with Lisp Jan String and File manipulation Lisp Examples fileanal and postcalc evaluator Lisp with extra tracing features Production systems and Pattern matching Jan Dynamic Memory Management Jan Allocation space for data Garbage Collection Prefix Infix and Postfix notations and conversions Jan Infix prefix conversion with interpretation Lisp Stack machines and their emulation Lisp Infix postfix conversion with stack machine evaluation Lexical analysis Jan Regular expressions Finite state automata Regular expressions for tokens programming languages simple lexical analyzer Lisp Assignment Parsing Jan Grammars Context free grammars Recursive descent parsing Lisp implementation Other parsing techniques Translation and Code Generation Jan Syntax directed translation Three address code Logic Programming Feb Horn clause logic Unification Prolog syntax and semantics Logic programming Lisp MCL Graphics and Visual Programming Feb and Graphics MCL Data flow paradigm Drawing programs for Liveness Iconic representation operations and data Midterm Exam Feb English language programming Feb Semantic grammars Augmented transition nets Grammars for English Mixed initiative interfaces The language Feb Essentials Example program print Example program bincard Introduction Java Feb How construct the Hello World applet Sample graphics program HTML and applet Sample graphics program Java source Expert System Languages Feb Rule writing Inference techniques Implementation shells Hybrid Programming Environments Feb Integration Lisp with Domain Specific Libraries Embedding sublangages Lisp Live demonstration the XFORM programming environment oriented Language processing tools Mar Lex Yacc Trends Programming Languages Mar Support for Reuse Increased functionality Ease expressing computations Making programmers nonprogrammers Little languages Scripting languages End user languages Support for safety reliability software Aesthetic beauty Ultimate power Project Presentations Mar Review for Final Exam Mar meeting Sieg Final Examination Mar tanimoto washington edu December 