Date Mon Dec GMT Server NCSA Content type text html CSE Prog Assignment Sample Solution First the output from the listener this was done mac Welcome Macintosh Common Lisp Version Loading Macintosh Desktop Folder trig code lisp demonstration idtree features FAMILIARIZATION HEURISTIC SCORE IDENTITY SIMPLIFICATION HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY EFFECTIVENESS HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY NIL demonstration idtree features FAMILIARIZATION HEURISTIC SCORE IDENTITY SIMPLIFICATION HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY EFFECTIVENESS HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY NIL demonstration idtree features FAMILIARIZATION HEURISTIC SCORE IDENTITY SIMPLIFICATION HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY EFFECTIVENESS HEURISTIC SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY SCORE IDENTITY BEST SCORE SCORE IDENTITY NIL NEXT code Program CSE Holden TEST YOUR OWN see the box below the data structure This program makes heuristically guided choice what identity use proving new trig identity The first piece code sets the data structure consisting all the which are already known true Each sublist off the main list consisting four items Features left side Features right side Identity number Familiarity score taken from copy packet Each feature list consists atom followed simplification score for that identity After the first item score the next atom and setq IDTREE ABD ABD ABC ABC ABC ABD ABC ABD Next the data structure for each identity tested For each identity all features are single list the following structure First the feature followed integer which the number symbols the atom The third element integer which indicates where the given feature located the equation feature the left side only feature both sides feature the right side only The sequence repeats itself for each feature The features are listed sequential order where they are located other words features which are the left side only are first then those both sides and then those the right side only setq features AACC AACC setq features BBFF setq features TEST YOUR OWN first put standard form Next make list the features which are the either side Next order them according descending weight the number symbols Then each feature should followed numbers according the description above Finally any reordering necessary ensure that the features are order according their third element the features the left side only followed those both sides followed those only the right side test the type demonstration idtree YOUR FEATURE LIST The program will then demonstrate all heuristics You can use the listed above this box examples how the conversion Output functions print cons cell takes argument list which has already been tested for NIL and END LIST prints out the first set values tests for the end the list and then recursively calls itself not the end The format statement used make pretty output the terminal Each heuristic will put its output the form list cons cells with END LIST the last element order use this function defun print cons list list format SCORE IDENTITY car car list cdr car list COND EQUAL SECOND list END LIST NIL EQUAL print cons list cdr list print output takes given heuristics output cons cell list checks for empty list and then calls print cons list its output defun print output list COND EQUAL list NIL NIL EQUAL list END LIST SOLUTION EQUAL print cons list list best score scans through list cons cells comparing each cons cell left child using max score car FIRST list EQUAL max score car FIRST list best score cdr list max score 