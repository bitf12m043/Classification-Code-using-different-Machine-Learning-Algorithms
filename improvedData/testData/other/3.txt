Date Wed Jan GMT Server NCSA Content type text html CSE Assignment Solution Set Monday January Next About this document CSE Assignment Solution Set Monday January Number page Better yet construct the derivation tree for For the derivations use the following abbreviations means expression means simple expression means term means factor means adding operator means multiplying operator means variable means entire variable means variable identifier means identifier means identifier tail means letter means unsigned constant means unsigned number means unsigned integer means digit means digits Also using the following CFG productions place their BNF equivalents unsigned integer digit digit digits digits digit digits identifier letter identifier tail identifier tail letter digit identifier tail The given grammar unambiguous because there are two leftmost derivations for the string ababab There are two derivation trees for ababab well The ambiguity the grammar due the production The grammar allows multiple derivation trees any terminal string that can derived from The following grammar corrects this problem Intuitively what this does force immediate parsing the left side the string forcing the parse the productions formal argument for why this grammar ambiguous might come from the following observation consider any string made balanced parenthesis can described uniquely set nested parenthesis surrounding some empty non empty string balanced parenthesis concatenated with some empty non empty string balanced parenthesis This description corresponds exactly the grammar the productions generate the nested part and the productions generate the concatenated part Use the construction given class for producing regular grammar from regular expression construct regular grammar which generates the language defined the regular expression Since eventually need generate unique set non terminals for each and the regular expression annotate the expression with indices These indices aren intended mean anything but use them for bookeeping develop the grammar For each set productions denote any starting symbol any nonterminal and its productions can eliminated because unreachable from the starting symbol marked with One grammar for the language described then where given the productions below Suppose where the given grammar Properties and can shown hold for any such strong induction the length the leftmost derivation Basis Suppose and There only one such terminal string namely property and are the only prefixes For all these prefixes the number least equal the number property Strong Inductive hypothesis Assume that properties and are true for any where for all Inductive step From this need show and for any where There are two possibilities for the derivation Since this leftmost derivation know that that there exist some and where This means that and where Thus and have leftmost derivations from less than steps properties and hold for and the induction hypothesis property Consider any prefix There are two possibilities prefix Then property for for some prefix Then property for and property for each case the number least the number property Since property holds for and have the number equal the number know that there exists some where This means that Thus has leftmost derivation from less than steps properties and hold for the induction hypothesis property Consider any prefix awb There are three possibilities this case for some prefix Then property for Since property holds for have each case the number least the number property Since property holds for have the number equal the number Therefore for any where properties and hold the principle strong induction About this document Next About this document James Fix Mon Jan PST 