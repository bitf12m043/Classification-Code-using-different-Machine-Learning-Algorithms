Date Tue Dec GMT Server NCSA Content type text html Implementing Constraint Imperative Programming Languages The Kaleidosope Virtual Machine Implementing Constraint Imperative Programming Languages The Kaleidosope Virtual Machine Authors Gus Lopez Bjorn Freeman Benson and Alan Borning Published Proceedings the ACM Conference Object Oriented Programming Systems Languages and Applications Portland Oregon October pages Abstract Constraint Imperative Programming CIP languages integrate declarative constraints with imperative state and destructive assignment yielding powerful new programming paradigm However CIP languages are difficult implement efficiently due complex interactions between the two donor paradigms Neither the virtual machines for classical object oriented languges nor those for existing constraint languages are suitable for implementing CIP languages each assumes purely imperative purely declarative computation model have developed new virtual machine for CIP languages the machine imperative machine with incremental constraint solver and constraint based rather than value based data store This virtual machine allows user defined constraints defined using constraint constructor definitions which are the CIP analog method definitions Similar methods these constructors are able reference variables indirectly through many levels pointers The machine maintains relations between objects the presence state change these indirectly referenced objects The machine capable supporting wide variety CIP languages including our most recent Kaleidoscope Click here get the postscript file Return Constraints home page 