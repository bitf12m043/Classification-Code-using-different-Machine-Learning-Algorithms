Date Tue Dec GMT Server NCSA Content type text html Last modified Sat Nov GMT Content length Runtime Code Generation RTCG Runtime Code Generation RTCG TermsRuntime Code Generation RTCG general name for structured techniques that change program instruction space while the program running There are variety other common overlapping names such dynamic compilation and self modifying code there are also variety other less polite names Friends don let friends use SMC email signature The term demand driven compilation narrower than RTCG typically means that some all parts the language translation process are performed unit code when that unit invoked Demand driven compilation may contrasted with runtime code generation that performed speculatively with demand driven dynamic linking which the address space modified without compilation and self modifying code which code unit updated itself which necessarily after the unit has been invoked The term dynamic compilation also narrower typically encompassing code that generated dynamically but which does not self modify Dynamic compilation most often applied systems using general purpose core code generators and performing code generation over sophisticated inputs expressions rather than simple values over dynamically loaded source code pseudocode Beware that the term dynamic compilation nowadays often used also mean compilation literary works which done ongoing and incremental basis here Dynamic linking adds code the instruction space the program The code typically generated using code generator that outside the program The new code may have been generated demand for the application dynamically linked code also used implement language independent enhancement and extension elilminate machine dependencies from binaries and reduce the size binaries Unfortunately the term also sometimes used describe building hypermedia connections ongoing incremental basis The term runtime compilation often used describe loop parallelization that done runtime and which performs code generation The idea runtime compilation that loop carried data dependencies for can discovered static compiler but that cannot The system thus examines the values runtime and performs parallelization runtime based the values The system thus compiles information runtime but performs code generation Write Shun Tak Leung shuntak washington edu for more information Instruction Space Modification general term including any topic that changes bits instruction space whether the change comes from inside the application from outside Just Time Comiplation JIT the general idea that some steps compilation may deferred until the code invoked the moment most systems that use JIT name are systems that use dynamic compilation get good performance from portable machine and independent program representation Typically the unit translation loadable unit smaller for example modules procedures statements etc and the input some virtual machine byte code rather than source text trees etc JIT used refer code generation dynamic link time well invocation time contrast many other systems perform compilation just time but with the goal fine tuning machine dependent code etc more preceise but longer name for classical JIT probably something like demand driven specialization processor architecture the module procedure level The term self modifying code SMC also refers RTCG but harder pin down because there are many interpretations modify and many ways pronounce self Modification may mean that instruction executed manipulated place and then executed again may mean that region memory reused and holds several instructions over its lifetime may mean that the instruction space changes even part reused for the problem with self Adam Kao phrased nicely What trying say what constitutes self and other depends your point view Try this simple exercise Point finger your belly button Poke You poked yourself Your finger didn poke itself Some various sensible interpretations include instructions that manipulate themselves instructions that manipulate other instructions the same basic block instructions from one source code module manipuate other instructions the same module instructions one module manipulte instructions that are created behalf that module instructions one address space manipulate other instructions the same address space instructions one protection somain mainpulate other instructions the same protection domain instructions being used solve onen problem manipulate instructions that are also used solve the same problem The terms code and data are used here limited sense Code used refer native machine code that executable except that may live data space instead code space Data used refer all other state including bits instruction space that are not executable are not well formed instructions and things that will manipulted become code but which are not yet executable native machine code These definitions are limited because more general definition code defines relative some engine execution particular code more general sense might include virtual machine code instructions source text etc and might also include data values that are used affect processor execution specific ways Pardo RTCG stuffA Case for Runtime Code Generation Self Modifying Code considered harmless Portable Interface for The Fly Instruction Space Modification uniform interface update the instruction cache ASAP when changing the instruction space running program Evaluating Runtime Compiled Value Specific Optimizations Dynamically optimizing around the values variables can make even highly tuned programs run faster Faster Dynamic Linking for SPARC and System How make dynamic linking faster and how dynamic relinking Fast Data Breakpoints Yet another way implement data breakpoints debugger Uses RTCG Shade Fast Instruction Set Simulator for Execution Profiling fast extensible cross machine simulator that collects all sorts tracing information implemented using RTCG See also the Simulators home page Mail archive postings the rtcg mailing list Other RTCG stuffApertos reflective operating system using dynamic compilation for BatOS Everything viewed source code that being edited invocation there freeze and compilation Cecil Cecil code statically compiled but uses dynamically compiled PICs Michael Blair paper Improving SCHEME Program Performance through Heuristic Redundant Predicate Evaluation using PAC Learning Techniques gzip ped PostScript Colusa doesn say very loudly but they use dynamic compiler See Omniware Has the link expired Here local copy the paper Concert used use and may again someday use dynamic compilation order transform general purpose remote method invocation into local procedure call See particular UIUC DCS Core WarsDawson Engler working general purpose code generators for runtime code generation including DCG PostScript paper and PostScript paper For supporting genericsHAKMEM see item self modifying sequence that just three instructions including the procedure return removes CONS cell from free list fills with the CAR and CDR values and needed calls the garbage collector Duplicated here item dynamically compiled string matcher that implements the KMP searching algorithm clearly linear and which appeared least five years before KMP Duplicated here Gill EDSAC Debugger used variety patching techniques instrument and debug programs Java uses secure bytecodes move code from machine machine Someday those bytecodes may dynamically compiled For example Softway Guava For more moving code across protection boundaries see Mobile Code Phil Koopman likes RTHWG Runtime Hardware Generation Lightweight languages for interactive graphics spot cmu edu Mark Leone working specialized runtime code generators achieving costs low cycles per generated instruction see here MudOS see here uses dynamic compilation the LPC extension language order minimize the interpretation overhead PAWPerl uses runtime compilation patterns vcode and dynamic loading more Portable Runtime Code Generation Has the link expired Here local copy Todd Proebsting working RTCG including DCG PostScript paper Prolog uses assert and retract add and delete code from program you using compiled Prolog then changing the program means switching interpretive execution recompiling the whole program performing incremental analysis order limit the scope recompilation Proof carrying code for code motion across protection boundaries ScoutSEL HPC has compilers and interpreters archive that includes RTCG and dynamic linking Self alternate site compiled etc order improve embeddability and extensibility Simulatorsoften use dynamic cross compilation and other such techniques SPIN supporting VSO and dynamic linking kernel extensions Including here and hereSumatra project explore issues about efficient execution mobile code SwitchWare Making the network interface programmable There also PostScript paper Synthetix follow Synthesis Tandem databases RTCGTransit suggests Computational Quasistatics profile feedback online optimizer Quasistatic then elseSmart Compilers references Reinventing computing The Vienna Abstract Machine uses incremental compilation Dynamic LinkingCaching improve the performance dynamic linking see also hereCache Kernel uses dynamically loaded application specific kernel modules Chameleon TCP layer for Windows implemented DLL Likewise here CLIPS uses dynamic linkingCompression DLLDylanuses dynamic linkingdld dynamic linker provided with Linux Fast turnaround edit compile debug with incremental compilation and dynamic linking Allegro Common LispProlog SNI Prolog Version particular Software RefineryInteroperating documents use dynamic linking see also under here ELF out dynamic linking GNU HURD uses dynamic linkingHypertext using dynamic linkingKaleida ScriptX uses dynamic linking implementing dynamic linker for programming language similar Dylan The language ScriptX see http www kaleida com for more information about uses module system that almost identical Dylan module system module can export variables publish interfaces and can use other modules gain access their published interfaces Modules can saved from compilation environment into persistent store with the variables defined within them and later loaded into runtime environment kaleida com Eric Benson comp compilers article July Language extensions use dynamic linking see also here Microsoft Windows has dynamic linker interface that requires the use FAR pointersMultics Multics OpenDoc and detailsOS uses dynamic linkingPerl also uses Dynamic LinkingPtolemy uses dynamic linking The Rochelle Caller adapter uses dynamic linkingRochester uses dynamic linking here and hereBradley Schmerl interested dynamic linking TCL seems use dynamic linkingWinsock uses dynamic lnking does PathWay Access for uses dynamic linking for extensible WWW browsing does CYBERMAP The book OBJECT ORIENTED PROGRAMMING UNDER WINDOWS PRACTICAL HANDBOOK Stephen Morris seems talk about dynamic linking This patent uses Some provide dynamic linking system service Linux Microsoft Windows OSF SunOS Some applications support multiple extension languages via dynamic linking part this falls under the heading using dynamic linking because got clean interface TclSome applications seem use dynamic linking just because got clean interface and minimizes the size the final executable Some the above plus expert system Numerical Dynamic Link Library Ham radio database DynaComm Elite emulation connection library DEC telephone controllerSome libraries are provided dynamically linked libraries that system can export libraries generic application and can link the libraries operate the data provided XOR External Object Representation The Cool Edit system which uses File filters for audio editingWind for providing data exchange between programs Unix platforms Microsft Windows platforms For interpreting visual basic programs IBM SOM allowing inter language object calls The toolkit for creating class libraries and instances Uses DLL allow new releases system libraries recompiling applications METU uses dynamic function linker for database Not RTCG but relatedSoftware fault isolation disallows RTCG but could have easily been extended use provided was performed using well structured interface such Portable Interface for The Fly Instruction Space Modification Self modifying communication protocols for multi agent communication systems Contact Gerard Vreeswijk vreeswyk rulimburg Self reproducing Perl courtesey Dan Boyd boyd buffalo edu pardo washington edu 