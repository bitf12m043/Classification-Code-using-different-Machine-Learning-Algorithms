Date Tue Dec GMT Server NCSA Content type text html Software Safety Research Our research currently centered building CAD environment for safety critical software The development environment contains set support and analysis tools that work system and software specifications written language that believe will support communication among the various development groups including system engineers software engineers application experts and human factors cognitive engineers The specification language RSML Requirements State Machine Language has formal foundation and suitable for automated analysis but have also found readable application experts with little training and minimal mathematical background One unique aspect our approach that the analysis performed directly the system specification Most approaches formally evaluating systems require the extra and often difficult step translating the system design into mathematical modeling language Our executable model specification the system specification and the identified hazards and their control requirements are traceable both directions from the early preliminary hazard identification through design and implementation the system development proceeds analyses and evaluations can performed that are appropriate the particular development stage For more information see the original RSML paper Requirements Specification for Process Control Systems paper the updates RSML preparation RSML was originally developed specify the system requirements for TCAS aircraft collision avoidance system Since that first demonstration our approach real system have been extending the modeling language include intent and design rationale improving the readability and usability the models and developing suite automated tools assist evaluating the model specification for safety The major changes RSML are being made assist dealing with the complexity real systems Because understanding the specification crucial for human detection errors are also experimenting with various types visualization techniques assist the analyst understanding the model and the analysis results Our approach safety evaluation based system safety engineering concepts use standard safety engineering approaches and extend them deal with software and human error and use automation enhance our ability cope with complex systems Identification classification and evaluation hazards done using modeling and analysis effective these models and analysis tools must consider hardware software and human components They also need include variety analysis techniques and orthogonal approaches There exists single safety analysis evaluation technique that can handle all the aspects complex systems The safety analysis tools currently are prototyping and evaluating include Simulator RSML specifications can executed using analyst supplied scenarios test cases The simulator operational but have few limitations the language that need relax Backward Simulation and Fault Tree generation Backward simulation starts particular system configuration and identifies the paths that could have led that configuration Starting with particular hazard the analyst can use backward simulation determine whether this hazard could occur and how Information about the states preceding hazard can used eliminate the hazard from the design The results this backward analysis can presented the form fault tree Consistency and Completeness Checking This tool checks RSML specifications for two properties completeness with respect set criteria related robustness response specified for every possible input and input sequence and consistency the specification free from conflicting requirements and undesired nondeterminism The method scales large systems decomposing the specification into smaller analyzable parts and then using functional composition rules ensure that verified properties hold for the entire specification The tool has been used the TCAS specification and others For more information see our paper titled Completeness and Consistency Analysis State Based Requirements Deviation Analysis Deviation Analysis new safety analysis technique aid identifying specified behavior that may lead hazardous system states The procedure based the underlying systems theory that accidents are caused deviations system paramenters Using formal software system requirements specification the analyst provides assumptions about particular deviations software inputs and the procedure automatically generates the scenarios which the analyst assumptions lead deviations identified safety critical outputs Software Deviation Analysis incorporates many the beneficial features HAZOP but automates this manual hazard analysis technique and extends handle the complexity and logical nature computer software Deviation Analysis Interface GUI aid the use software deviation anlaysis Human Computer Interface Safety Analysis These tools are still under development but our goal extend RSML include the human computer interface and apply hazard analysis techniques this augmented model Timing Analysis With Professor Alan Shaw are exmining how add timing analysis tools our toolset screen snapshot the requirements engineering environment The requirements engineering environment supports will support graphical user interface for creating editing and browsing specifications Graphical and textual interfaces each the analysis methods listed above This affords interactive exploration well automated batch processing Both graphical and textual specification representations pretty printer that produces printed specifications addition TCAS have several other realistic test beds for our analyses and toolkit These include model automated highway system from the UCB PATH project aircraft flight guidance system from NASA Ames and NASA robot Planned Human computer interface analysis Improved and new hazard analysis techniques Testing tools More completeness analyses Timing analysis Improved modeling language Demonstration part the air traffic control system 