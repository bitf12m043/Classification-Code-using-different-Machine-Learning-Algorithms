Date Mon Dec GMT Server NCSA Content type text html CSE Homework Assignment CSE Principles Digital Systems Design Carl Ebeling Fall Homework Distributed Monday Oct Due Wed Nov class You are work together teams Homework Please look the problems individually first and sketch possible solutions and questions Then meet together and formulate solutions each you can and assign the writeup one more team members Then meet again collate and review your solutions before you hand them The whole team responsible for understanding the solution all problems For problems involving Verilog code hand your code and your simulation log least part really long Leiserson Leiserson Let say have set clients requesting service the same time only one which can service can use round robin approach decide who next gets serviced The clients are put some order and two bits are associated with each client The first bit indicates whether the client requesting service and the second bit indicates whether this client was the last client serviced When choosing the next client service start the last client serviced and find the next requesting client Design circuit based parallel prefix implement the round robin protocol Assume that once you get the end the list clients something happens restart the operation from the beginning Define your operator show that associative and sketch the resulting circuit Extra credit Can you solve this problem place the clients circle with start end instead list Show that the conditional sum operator defined class associative Design the conditional sum adder for bit adder Write verilog program for this adder and simulate show that works correctly Show that the delay the carry select adder root Take your sorting circuit from Homework and turn into pipelined sorter inserting the appropriate registers Model delay using the unit delay model and calculate the clock period Simulate your circuit and show that works correctly Design fast accumulator circuit which adds list bit numbers presented sequentially one per clock cycle Your circuit should have two inputs Data and Start and two outputs Sum and Valid Start asserted the cycle that new list numbers starts Valid asserted the cycle that the sum the last list numbers valid That may take more than one cycle after list numbers has been entered generate the final sum Implement your circuit using Verilog using the unit delay model model the circuit delays Simulate your circuit showing how fast and that works ebeling washington edu 