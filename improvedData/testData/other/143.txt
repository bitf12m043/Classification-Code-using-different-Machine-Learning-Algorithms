Date Wed Jan GMT Server NCSA Content type text html CSE Laboratory Assignment CSE Advanced Logic DesignTed Kehl Fall Lab Synario Hierarchy Mixing Schematics and ABEL HDLDistributed Oct Schematics Simulation Due opt Constructed circuit Due opt Functional circuit Due opt Objectives After completing this lab you will know how Use Synario construct hierarchical circuit schematics Include ABEL programs schematics devices Debug synchronous designs using simulation From now you will working sometimes rather loosely teams four The first part this assignment has you follow tutorial where you should work groups two the second part you are given circuit that divides naturally into two parts each which can solved individually half the team and then linked together form complete solution Note Although the tutorial rather complete you may need look the Synario manuals the lab answer questions you may have use more advanced features Tutorial Topdown Design Using ABEL with Schematics This tutorial has you design counter that counts where input the counter This counter composed two component modules simple counter and comparator The comparator compares the endcount the current count value and causes the counter restart Note You will not following the tutorial exactly but will let you know where things diverge Design Problem Serial Communication You are construct sequential circuit that interfaces simple keypad LCD screen Characters printed the LCD screen will keyed using two key presses one for the first bit nibble the character code and one for the second bit nibble For example print one would key and The circuit you design will communicate values from the keypad the LCD display using your solution Homework Problem which presented method for bit serial communication You will start designing and simulating your circuit Synario the next weeks you will program parts your circuit into PLDs plug them and get the circuit work The figure below shows the components your system Figure The Keypad The first half the circuit takes values entered the keypad and sends them serially the second half the circuit The keypad has nine wires one for each column through one for each row through and common wire connected ground this the common connection for all the switches When key pressed the corresponding column and row wires are connected the common signal see the figure below Therefore the keypad called the wires will active low when key pressed the others are pulled high through resistor connections The first part the task convert the bit value from the keypad wires into bit value plus ready bit The bit value encodes the key pressed into binary number for through followed and for and for The ready bit synchronized the clock and asserted high for one cycle indicating that key has been pressed The rest your circuit will collect two bit values and send them serially according our protocal across the link the LCD display circuit Also you will need latch store register the first key pressed while you wait for the second might good idea just latch both this can done with one two The LCD Screen The second half the circuit receives the data sent bit serially from the keypad and displays the value the LCD screen The display you will using has very straightforward interface takes instructions data depending the value the wire The table below shows the instructions you will using Four instructions are required initialize the display for the configuration require line character display These are shown the first four lines the table your control logic must sure issue these instructions whenever reset After reset all you need write characters the display the fifth line the table These will displayed immediately the display unit Finally you will hit the reset switch again and start entering new number You can find the character codes the display documentation Operation Clear Display Function Set Display Entry Mode Set Write Character DDDD DDDD Backspace Return Home Read Character DDDD DDDD The timing constraints that must satisfied when writing information into the display are quite straightforward Basically the display samples the line the rising edge the enable signal and lines the falling edge keep things simple the set and hold time for should one cycle before and after the rising edge respectively Similarly for the lines and the falling edge The only other timing information importance allow for the display actually clear the internal controllers takes some time actually and enter the internal memory the display unit Since your project does not need perform read operations the control line can tied directly GND For normal character write operations the signal should execute command the signal should The easiest way perform write asserting the enable signal for one clock cycle during which and data are both stable You must ensure that the number code stable while this happening This shouldn problem key press takes lot longer than your circuit will need However you should ensure that stable for cycle before and after the write operation performed You will need this your controller finite state machine Since the Enable signal used clock data into the display should hazard free spurious glitches The easiest way ensure this make direct output flip flop the PLD Details Details Details Part designing circuit solve problem defining what the problem Most problem descriptions are hazy incomplete and ambiguous One the tasks when designing turn such description into precise specification Before you begin design ask yourself what missing and write down precise specification you can You may save yourself lot work the end Document both parts your circuit design preferably using Word specifying how the pieces will interact and how you will solve each part Include this documentation your Synario project and hand with your schematics NOTES Don forget provide reset input both halves your circuit You will have figure out how signal the beginning data separate from idle time Decide good speed for your clock which suits the LCD display You might well simulate your proposed clock speed Hint should relatively slow Entering and Simulating your Design Divide each half your design into reasonably sized components such registers and counters and combinational logic that can fit single PLD Draw top level schematic for your design including the components that you need Work with your you are not sure how define this hierarchy Use ABEL specify both your sequential counters and combinational code converter components You will find some useful chip definitions the cse directory You can use these your schematics first importing them then creating the matching symbol the tutorial covers this You may want this for other standard chips although you can use PLDs for most everything You should simulate your designs separately best you can and then combine the two projects using new top level schematic Start new project then import the pieces the two projects simulate the complete design you will need provide the keypad stimulus which easy eight inputs and you will need check that the commands the LCD display are correct For now you will just have check this hand Here example Verilog test fixture which uses one process set the test vectors and separate process generate free running clock Consistently set the timescale and the precision Should set the top level file here because may defaulted differently separate submodules timescale Declare the toplevel module name module Include the interface the schematic and ABEL source include keypad tfi Initialize the inputs Then form input stimuli Because the way the clock structured safe change inputs times etc initial begin CLK RESET RESET end This clock has period The rising edges occur times etc always begin CLK CLK end endmodule Extra Credit Many other options can incorporated into this circuit For example you may want implement back space function using the code Turn Due opt Turn the design one piece Design documentation Printout Schematics Printout ABEL modules Printout simulation waveform annotated show that circuit working correctly ted washington edu 