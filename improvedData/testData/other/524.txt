Date Tue Dec GMT Server NCSA Content type text html Last modified Mon Mar GMT Content length Exploiting Choice Instruction Fetch and Issue Implementable Simultaneous Multithreading Processor Exploiting Choice Instruction Fetch and Issue Implementable Simultaneous Multithreading Processor Dean Tullsen Susan Eggers Joel Emer Henry Levy Jack and Rebecca Stamm Simultaneous multithreading technique that permits multiple independent threads issue multiple instructions each cycle Previous work has demonstrated the performance potential simultaneous multithreading based somewhat idealized model this paper show that the throughput gains from simultaneous multithreading can achieved without extensive changes conventional wide issue superscalar either hardware structures sizes present architecture for simultaneous multithreading that achieves three goals minimizes the architectural impact the conventional superscalar design has minimal performance impact single thread executing alone and achieves significant throughput gains when running multiple threads Our simultaneous multithreading architecture achieves throughput instructions per cycle fold improvement over unmodified superscalar with the same hardware resources This speedup enabled advantage multithreading previously unexploited other architectures the ability favor for fetch and issue those threads most efficiently using the processor each cycle thereby providing the best instructions the processor examine several heuristics that allow identify and use the best threads for fetch and issue and show that such heuristics can increase throughput much Using the best fetch and issue alternatives then use bottleneck analysis identify opportunities for further gains the improved architecture Proceedings the Annual International Symposium Computer Architecture Philadelphia May get the PostScript file click here jlo washington edu 