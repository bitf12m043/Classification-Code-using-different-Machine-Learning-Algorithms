Date Tue Dec GMT Server NCSA Content type text html Last modified Tue Oct GMT Content length Guidelines For Writing HTTP Server Scripts Guidelines For Writing HTTP Server Scripts This document intended evolving series ideas pointers and other information about writing programs that can executed following WWW link with particular emphasis security issues The rest this document assumes that you already know how write programs also doesn attempt cover the same ground NCSA introduction forms which should considered the starting point for explorations forms You should also sure read the Common Gateway Interface documentation well which describes the interface that the HTTP server defines between HTML messages and server side executables Security The potential problems with security cannot overemphasized Unlike existing network protocols which generally allow either specified users execute arbitrary code arbitrary users execute specified code the existence server side scripts effectively permits arbitrary users execute arbitrary code although clearly the scope abitrary this case least somewhat reduced specifically arbitrary users can execute any program installed ScriptAlias location prior the last HTTP server restart There are some basic features server side scripts that used correctly will minimize the potential for security problems NEVER EVER treat data received from remote source instructions executed NEVER EVER assume that necessary arguments are present and exit gracefully this the case ALWAYS check that such arguments are fact present ALWAYS have the program exit gracefully receives arguments does not understand NEVER assume the size the arguments the data received the program Always check the expected size these objects know that the interpreter you are using awk for example will make sane secure decisions overflow occurs NEVER trust any claimed remote identity HTTP does not currently support anything more secure than passwords which are not very secure all The Basic Idea When you follow link using URL the form http foo bar baz the HTTP server foo bar baz will check each successively longer substring etc against the list ScriptAliases defined the server configuration files ScriptAlias looks like this ScriptAlias some other place the filesystem which the server interprets mean anyone ever references something then execute some other place the filesystem and return its output Note that this implies two things about the executed program must send MIME Content Type header its first line output tell the client Mosaic what the output actually HTML GIF JPEG etc and then should send some useful output even its only message received line See the mail request mentioned below for example how this Only programs located places referenced ScriptAlias will ever executed the server addition the server caches directory listing all the programs each location referenced ScriptAlias whenever started restarted and uses check possible server side programs before executing them This prevents random programs placed the right place from being accessed without server restart which only priviledged user can What about arguments What about input Once the HTTP server has discovered that actually executable program ScriptAlias location executes the program passing data two ways First all any text left over from the URL that has not been used find the script will used set the value environment variable named PATH INFO the example above this would relatively simple PATH INFO would just However near arbitrary text can used here http foo bar baz long limit aposto fhfh This will result PATH INFO being set long limit aposto fhfh note the initial The main restriction that spaces are not allowed rather will terminate the component the URL used set PATH INFO addition you are using forms interface the values all the input and select tags the form will made available the standard input the program Encoding This will encoded guarantee safe transmission This encoding important issue because make reasonable use the data sent your program you need decode Fortunately you don have this yourself For the time being filter called urldecode can used your own programs easily they are actual shell awk perl script the decoding Invoke cse www htbin post urldecode and will convert any encoded data read from its standard input into its original form its standard output some point add object module you can link with this from compiled langauge like although you may get there before since the encoding simple More details are available about writing server scripts the Common Gateway Interface documentation where number other environment variables that are available the program are described How this locally Currently only two areas have been named using ScriptAliases One them not currently publically accessible the filesystem resides not exported the rest the department machines The other intended for use participants the seminar taking place this quarter projects post bin example program called mail request already there its shell awk script This the program use for the interface music collection take look the HTML source for that stuff see how this used intended usable anyone else and for variety purposes Suggestions are welcome The HTTP daemon will restarted about times day and the next restart after you have placed program there you will able have link result its execution After that you can keep changing the program any way you see fit and the daemon won care merely notes prescence absence want reiterate that this potentially big security issue Please take care how you handle arguments how handle input and what your program does might For the time being all instances these programs will run the uid nobody Also access both areas the private one and the area currently limited machines the washington edu domain This restriction inconvenient and intended create temporary breathing space that can get more experience with potential security issues webmaster washington edu 