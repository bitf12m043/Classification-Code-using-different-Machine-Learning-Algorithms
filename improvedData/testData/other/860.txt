Date Tue Dec GMT Server NCSA Content type text html The RaPiD Project RaPiD Reconfigurable Pipelined DatapathAdventures Configurable Computing RaPiD coarse grained FPGA architecture that allows deeply pipelined computational datapaths constructed dynamically from mix ALUs multipliers and other functional units along with registers and local memories The goal compile regular computations like those found DSP applications into both application specific datapath and program that provides control for that datapath The datapath control signals are divided into static and dynamic signals The static control signals determine the underlying structure the datapath that remains constant for particular application The dynamic control signals can change from cycle cycle and specify the variable part the computation for example operations that change during the computation The current definition RaPiD biased strongly towards linear pipelines constructed linear arrays functional units communicating mostly nearest neighbor fashion Linear systolic arrays for example map very nicely into RaPiD datapaths which allows the considerable amount research compiling systolic arrays applied compiling computations RaPiD RaPiD not limited implementing systolic arrays however For example pipeline can constructed which comprises different computations different stages and different times The concept RaPiD can extended arrays functional units However dynamically configuring arrays much more difficult and the underlying communication structure much more costly Since most computations can computed efficiently using linear array RaPiD may not necessary RaPiD aimed tasks that are highly structured and repetitive and whose control flow very regular with little data dependency Examples include most DSP applications and many scientific computing tasks expected that RaPiD array will integrated closely with RISC processor possibly the same chip with RISC controlling the overall computational flow and farming out the heavy duty computation requiring brute force computing RaPiD The computational bandwidth provided RaPiD array extremely high and scales with the size the array The input and output data bandwidth however limited the data memory bandwidth which does not scale Thus the amount computation performed per operation bounds the amount parallelism and thus the speedup application can exhibit when implemented using RaPiD The RaPiD architecture assumes that most three memory accesses are made per cycle which about the limit high performance memory architectures can provide Rapidly working peopleFaculty Carl EbelingGraduate students Darren CronquistPaul FranklinJason SecoskyUndergraduate students Jeff WeenerKent SmithStaffChris FisherLarry McMurchieList Papers Carl Ebeling Darren Cronquist Paul Franklin RaPiD Reconfigurable Pipelined Datapath The International Workshop Field Programmable Logic and Applications RaPiD sponsors ARPA under contract National Science Graduate Fellowship Franklin IBM Graduate Fellowship Cronquist LIS Department Computer Science and EngineeringUniversity Washington Last updated Thu July PDT 