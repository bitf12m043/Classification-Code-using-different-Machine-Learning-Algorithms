Date Wed Jan GMT Server NCSA Content type text html Using EmacsUsing Emacsa brief introductionExecutive Summary This document designed help you get started using emacs contains listing some emacs most commonly used and helpful features well general overview what emacs all about What Emacs Emacs editor and perhaps the most portable easy use one for UNIX systems However also one the most completely flexible user programmable vast programming environments you can imagine The engine behind emacs Lisp interpreter uses different dialect Lisp than learned class which allows users code their own routines customize the environment nicely such can intimidating beast feeling huge and overly complex and full options you never discover The key just pretend what don know won hurt and use what you find useful The more you use the more you learn for example today learned how bind the Control arrow key specific function specific emacs mode For the purposes this class you shouldn have learn too much about and recommend you don spend too much time trying figure out the intricacies emacs for example today spent hours figuring out how bind the Control arrow key specific function specific emacs mode you need know something and can figure out quickly ask Notation When talking about emacs use the notation indicate that key should pressed while holding down the control key emacs requires this lot For example means hit while holding down the control key Similarly means use the Meta key you don have key called Meta usually Alt Alt Function Escape what you will use For example means hit while holding down the Meta key Lots emacs functions take two keystrokes complete For example exit emacs use Control followed Control Running emacs Emacs can run two ways One will work any sort character terminal and makes very few assumptions about what your hardware set You could run emacs home your Vic this mode for example The other assumes that you have terminal and allows you fun stuff like use the arrow keys and the mouse The latter recommended whenever available you much easier use After logging onto your MSCC account you run emacs simply typing emacs you haven set your DISPLAY environment variable emacs will take over the terminal window you typing and look like little text editor Use get back out run emacs taking advantage you need two things First tell your display that for the machine you running from use its display This done using xhost followed the name the machine that you running emacs For example sitting spirit and wanting run emacs from mscc machine would type xhost mscc Next you have tell the machine that you running from which display you using setenv DISPLAY followed your display name and For example the above situation from mscc prompt would type setenv DISPLAY spirit Now when you run emacs should show its own window your display and you should able use the mouse and such assume this mode operation for the remainder this document Emacs Orientation When you start emacs will come with empty buffer the top the window are some pull down menus which contain some the common operations the right side scroll bar Near the bottom status bar Just below that line called the mini buffer Figure small emacs window The status bar tells you what you about the buffer you looking The double asterisk indicates that the buffer has been modified since was created last saved disk this case because typed test Sometimes you see there That means the current buffer read only and that you can type into Next the bar says Emacs and tells the name the buffer scratch this the default buffer when starting Next tells the mode that this buffer operating Lisp Interaction mode the default when starting Then tells what part the buffer you looking this case contains only the word test are seeing All The minibuffer small buffer which emacs uses report error conditions you and prompt you for information when necessary The cursor indicates where your text will appear when you type You can reposition using the mouse Buffers are the basic unit emacs Each file you edit has its own buffer There can also buffers for other purposes for example the minibuffer used for emacs user interactions you can have buffer which you running Minischeme Lisp interpreter etc any given time your emacs session will have multiple buffers around although only few may visible given time Each buffer has associated mode with which controls the behavior everything you For example you edit file with the extension emacs will realize that this file and will put you SML mode which knows how programs should indented Similarly you open file file its buffer will mode Common Lisp mode respectively and know the syntax that language addition the indentation rules changing based the buffer mode Control key sequences may have different actions additional pull down menus will typically added and different sorts syntax checks will done for you like balancing parenthesis Lisp The scratch buffer just that scratch space for you type anything you want without associating file with Cancelling and Exiting The two most important key sequences know Lisp are and used cancel action that you started and can excellent way get out mysterious features that you accidentally got yourself into typing the wrong thing rule thumb when doubt use Sometimes use several times row just make sure The other thing you want know how exit Use Lisp will prompt you you haven saved all your buffers you left any processes like Lisp interpreter running The Pull down menus The most recent version emacs version came with pull down menus after years everyone using Control key sequences get things done The control key sequences are engrained mind and much easier since you don have the mouse all the time that usually forget the menus are there Lots the things that about explain you are bound the menus well but don know for sure Anyway play along with and you read you can check see they exist Then you can ignore all the control key sequences about tell you Reading and Writing Files think emacs being primarily editor load file from disk start editing new file use find file the minibuffer you prompted for filename exists will loaded Otherwise create new file for you you not sure the filename you can hit SPACE any time get list files which match what you typed that point use TAB for file completion save file use there have been any changes the file will written disk save under different filename use write file You prompted for new name and the buffer will renamed although the original file will still exist disk Moving Around Most the time you can move the emacs cursor around using the arrow keys mouse Sometimes however they won work and you have use the keys move forwards back the previous line and the next line respectively jump the beginning screen line use First letter the alphabet jump the end the line use move more quickly use move down screenful and move screenful Use move the beginning buffer and move the end never use these but get really fine grained you can use move paragraph and move down paragraph move the beginning the previous sentence and move the end the next sentence move back word and move forward word left and right Picky picky Marking Region you can use mouse with emacs you can mark region text the way you would any system clicking and dragging The highlight tends disappear after you let the button but the region will still marked Otherwise you have mark the region moving one end and hitting SPACE Emacs will respond with Mark set Then move the other end and whatever operation you want This pretty important emacs always has notion where the last mark was set lots operations set the mark wherever the cursor was when the operation was initiated Thus always has notion the current region namely everything between the mark and your cursor This can problem you accidentally hit delete for example because half your file will disappear without you understanding why Thank goodness for undo read Cutting Copying and Pasting One way cut text emacs use kill may alone this but the only way cut text takes out the text between the cursor and the end the line there text then takes out the linefeed and moves the next line Lines that you kill accumulate pasted more conventional way cutting would highlight and use wipe out you machine where you can use mouse set the region described above Pasting done using yank Copying can done the windows way namely highlight region with the mouse and then click the middle mouse button paste you can use Undoing Emacs has phenomenal undo feature You can undo until your fingers turn blue slowly undoing lots and lots recent keystrokes commands and what have you remembers quite lot what you recently done Working with Buffers When you start emacs you typically only see one buffer and the minibuffer You can view multiple buffers once however and this can useful for viewing multiple files simultaneously will divide buffer window half vertically giving you two buffers each with their own status bar Move between the buffers using the mouse Similarly you can cut buffer horizontally using When editing Lisp recommend dividing your window this way that you can edit one and run the interpreter the second hide the buffer your cursor use make the buffer your cursor fill the whole window again use view all the buffers emacs session use switch different buffer use and emacs will prompt you for its name Normally when you are not viewing buffer still there though not visible really drop one from your emacs session use and supply the name modified emacs will check with you before killing This can useful you need get rid bunch changes file You notice that emacs uses buffers report information you These are typically surrounded with show that they don have files associated with them You can switch between them kill them just like any other buffer Functions Key Bindings Most every function emacs implemented somewhere using Lisp routine The common routines are bound Control and Meta key sequences been describing Emacs lets you bind any function any key sequence which part the way which customizable For example preparation for working with Lisp and bound some the most common functions keys detailed elsewhere You can also call functions that are unbound using This allows you type the name the function which will then executed For example bound the scroll function You could therefore also scroll using scroll Searching Replacing search forward for string use search backwards reverse use replace all occurrences string buffer use replace string replace some instances string use query replace and you prompted every location the string line help Emacs has lot help available you using You can then follow with single letter indicating what sort help you want gives you list options takes string and lists all the emacs functions related that string lets you type key sequence and explains briefly what function that key bound lets you type the name function and will describe detail gives you information about the mode the current buffer Common Lisp mode SML mode etc takes you through tutorial which somewhat poorly written comparison with this document Conclusions That about all can think right now Feel free email you want something haven explained have other questions put together summary the above information Clip Save page Shamelessly stolen from cse Winter cse webmaster washington edu Last update 