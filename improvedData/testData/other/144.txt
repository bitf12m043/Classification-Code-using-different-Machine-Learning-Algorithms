Date Wed Jan GMT Server NCSA Content type text html CSE Laboratory Assignment CSE Advanced Logic DesignTed Kehl Fall Lab Programming PALs and PLDsDistributed Oct Due OptionObjectives After completing this lab you will know how Program PALs and PLDs Construct and debug sequential circuits PLD Programming Below ABEL file describing simple bit counter upcount abl the class directory Program PLD instructions furnished beginning class implement this function and use your clock generator provide clock input Use switches provide the other inputs the PLD and LEDs observe the outputs Intel PLD Pin Configuration Input CLK Input VPP Inputs Input Output module upcount title Simple bit Counter with Enable and Reset The following line not needed Synario upcount device CLK pin Clock pin istype reg Counter Outputs pin Counter Enable Signal Reset pin Counter Reset Signal Output bit number equations Output CLK CLK WHEN Reset THEN Output ELSE WHEN THEN Output Output ELSE Output Output const test vectors CLK Reset Output Reset Increment Hold Increment Increment Increment Increment Hold Increment Increment Increment const repeat Increment const Increment Increment Increment Increment Reset end upcount After you have completed the testing this counter modify the ABEL program make the counter count down well adding another input that specifies whether the counter should count down the next clock edge Remember modify the test vectors appropriately Programming PLD Create new project Double click virtual device This will bring dialog box asking what kind device you want switch too Choose Standard PLDs and then This tells Synario create JED file for the PLD programmer that programs the pin PLD provided your lab kit Create new source from within the main Synario program When asked what type source specify ABEL HDL file Now enter module name and file name for your new ABEL file Copy from netscape mosaic the source code provided above Now paste the copied text into the synario editor containing your new abel file Synario might stick some ABEL code into the editor automatically for you For this project simply delete that code before you paste Now you should able save your new ABEL file and return the main Synario environment Now click and then double click JEDEC file compiles successfully then you should get JEDEC format file with jed suffix Copy this jed file MSDOS floppy disk blow the fuses follow the directions given lab Stephen Lee TasksProgram the PLD implement the counter Modify the ABEL program and implement down counter Use switches and LEDs for the inputs and outputs and your debounced push button switch provide clock signal that you can single step pushing the switch Constructing Your Circuit You will need some PLDs keypad LCD screen and potentiometer for its constrast control Schmidt triggers and resistors and capacitors for switch debouncing The clock will provided your pulse generator remember that your pulser output open collector you will need pull resistor KOhm should work fine And course you need your trusty logic probe Debouncing Switches The keypad has nine wires one for each column through one for each row through and common wire connected ground this the common connection for all the switches you have column keypad then there are only column wires and wires total When key pressed the corresponding column and row wires are connected the common signal see the figure below Therefore the keypad called the wires will active low when key pressed the others are pulled high through resistor connections debounce the type switch the keypad single pole single throw SPST will require special analog circuit consisting resistor capacitor and Schmitt trigger Connect pull resistors and capacitors the eight outputs the keypad shown the figure the top the next page The sizes these devices should chosen that the time constant approximately this should enough eliminate the bounce even these inexpensive keypad switches Test your keypad with your logic probe When key pressed two switches are closed thereby shorting the two capacitors ground and very quickly discharging them This makes the output the Schmitt trigger inverters immediately high the switches momentarily disconnect the capacitor will start recharging but only slowly due the large time constant the time constant longer than the bounce time then there won enough time charge the capacitor enough trip the Schmitt trigger and the output will stay high The internal hysteresis the Schmitt trigger will prevent from switching again until the input gets very high Once the switch let there will enough time and the capacitor will eventually charge and the output the Schmitt triggers will low Also note that the row and column wires corresponding the depressed key may not change value the same time LCD Details Documentation for the LCD display was distributed lab There also excellent FAQ describing your LCD module There accompanying figure Character set Also article the physics LCD displays text file This collection likely more complete and lucid than the data sheet Details other parts are available from the TTL data book online from Motorola Data Book Server You should construct your circuit phases First build the keypad decoder and synchronizer then the transmitter the receiving end first build that portion the FSM that will reset the display and print some character possibly hard wired initially and finally the transmitter Make sure the transmitter working before plugging them together You can see the values being transmitted you run the clock You should able make some progress this week and perhaps even complete the circuit will cover how use the logic analyzer debug sequential circuits the next lab you are having real problems you might want wait until then Hand DueTA Option Demonstrate your down counter using switches and LEDs and have your sign your ABEL listing ABEL program listing test results equations and PLD pinout ted washington edu 