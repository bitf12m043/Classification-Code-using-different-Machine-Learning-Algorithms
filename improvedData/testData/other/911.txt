Date Tue Dec GMT Server NCSA Content type text html ZPL Papers and Manuals ZPL Papers and ManualsZPL specific Papers and manualsLanguage Description PapersZPL Array Sublanguage August Introduction the ZPL language Very old and somewhat out date ZPL Programming Guide July intuitive introduction the language that walks through several scientific programming examples ZPL Language Reference Manual DRAFT June The most complete description the language includes index Implementation PapersFactor Join Unique Approach Compiling Array Languages for Parallel Machines May framework for compiling array languages The Implementation Machine Independent Array Language November Implementation ZPL Benchmark Performance Evaluation Papers ZPL HPF Comparison Performance and Programming Style May Compares ZPL and HPF using set NAS NASA and GENESIS benchmark programs SIMPLE Performance Results ZPL August Performance comparisons against hand coded programs Real world Applications ZPL Portable Parallel Body Solver Describes how ZPL used solve body solver The Portable Parallel Implementation Two Novel Mathematical Biology Algorithms ZPL July Describes how ZPL used solve two mathematical biology problems Foundations ZPL Machine Model Papers Type Architecture Shared Memory and the Corollary Modest Potential Discusses the need for accurate abstract machine models when developing efficient algorithms Introduces the CTA abstract machine model Programming models shared nonshared memory models Comparison Programming Models for Shared Memory Multiprocessors Empirical comparison how the shared memory and non shared memory programming models effect the performance programs shared memory multiprocessors Comparison Shared and Nonshared Memory Models Parallel Computation Theoretical comparison the shared memory and non shared memory programming models and their influence parallel algorithm performance the Influence Programming Models Shared Memory Computer Performance Experimental comparsion shared memory and non shared memory programming models for three machines and two applications decomposition and WATER Programming models Abstractions and ZPL formerly Orca Scalable Abstractions for Parallel Programming Introduces the notion ensembles that provides scalability Flexible Communication Abstraction for Nonshared Memory Parallel Computing November Introduces the notion port ensembles that separates the specification communication from computation Abstractions for Portable Scalable Parallel Programming December Extensive discussion the Phase Abstractions programming model Foundations Practical Parallel Programming Languages Describes the relation between ZPL and Orca and describes the underlying models for these languages Portable Implementation SIMPLE Detailed description how the SIMPLE CFD benchmark written Orca Optimized Interprocessor CommunicationQuantifying the Effects Communication Optimizations May evaluation communication optimizations IRONMAN Architecture Independent Communication Interface for Parallel Computers March machine independent interface for custom interprocessor communication Miscellany Accommodating Polymorphic Data Decompositions Explicitly Parallel Programs April Why message passing libraries alone are not sufficient for portability ZPL CSE zpl info washington edu 