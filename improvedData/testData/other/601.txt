Date Mon Dec GMT Server NCSA Content type text html CSE General InformationCSE General InformationCourse Goals This course about abstraction and programming Specifically the goals CSE are learn the concepts modularity and encapsulation focusing abstract data types and the basics data structures Other important topics include thinking and programming recursively and analyzing the complexity simple algorithms After completing the course students should able design and write medium sized programs design interfaces modules and abstract data types and provide one more implementations those interfaces and read write use and document software components make these concepts and abilities concrete will study and use the programming language But not class Most concepts taught can applied many languages and there are many constructs and features that will not covering StaffInstructor Craig Chambers Please use the following address for all email the instructor cse instructor washington edu Head Brad Chamberlain cse headta washington eduTA Andy Collins Sections and cse collins washington edu Craig Kaplan Sections and cse kaplan washington edu Michael Noth Sections and cse noth washington edu Jared Saia Sections and cse saia washington eduLab Consultants Samuel Adams sca washington eduOwen Benneter Flatley flato washington eduJason Griffith grit washington eduTony Tsai ttsai washington eduWhere and When Check the schedule for definitive information lecture and section times and places office hours etc The tentative course topic outline also available but subject change TextHeadington and Riley Data Abstractions and Structures using Heath Strongly Recommended Lippman Primer Edition Addison Wesley really doesn matter too much which book you have but you almost certainly will want one since the text not reference manual any sense the word EvaluationThere will one midterm and comprehensive final exam Any material covered the lectures the sections the homework assignments and the assigned readings fair game the exams Thus important attend the sections well the lectures There will programming assignments sure and read the grading and turn policies for these There will about quizzes GradingThe following breakdown will used for grading Midterm Final Weekly Quizzes total about for each quiz Assignments each total Assignments each total Extra Credit earn extra credit you must first fully complete and submit each assignment given you are interested extra credit may suggest some extensions other related programs write Extra credit limited maximum the total course grade Late PolicyExcept truly exceptional circumstances late homework will NOT accepted Homeworks are due the beginning section the assigned days Policy Collaboration Cheating You may not copy code from someone else that considered cheating caught cheating this any other way full disciplinary measures may invoked including failing grade the class and initiation cheating case the university system avoid creating situations where copying can arise you cannot email post otherwise make your code available electronically anyone You can post general questions about programming problems and even pseudo code snippets but actual code Now for the good news educationally valuable work with others general ideas for how about solving some problem helping others general terms when they are getting stuck will allow people look others code screens give them help debugging because this case only one two people are seeing the code and they are not getting electronic copy doubt about collaboration cheating just don send the instructor email cse instructor washington edu asking for clarification Computing This quarter will using the MSCC Mac lab located the basement Thomson Hall This lab will staffed with consultants who will able provide you with reasonable levels help The Mac lab Sieg can also used but low priority only when not being used higher priority classes can you use This course offers two levels computing support full and partial will accept turnins floppy disks with projects developed for either fully partially supported platforms Additionally full support means that will build sample executables for that platform well easy unpack distribution the code necessary for getting started Partial support means that will not provide sample executables bundled code distributions will make necessary sample skeleton source code available via the web This code should reasonably portable you should able build projects other platforms without too much trouble Remember you choose use partially supported platform your responsibility configure your system and understand how build projects there will not able debug system configuration problems for you Here summary the platforms support will assign consultant each platform give help with reasonable problems Full Macintosh with Symantec Partial under Windows with Borland Partial under Windows with MSVC Partial Unix with for those already familiar with Unix Using machine your own has many advantages and few disadvantages Many students have done the past encourage you try Note that not support Win compilers expect that source files developed under those systems for this class will compile and execute our test machine but ensuring that they your responsibility cse webmaster washington edu 