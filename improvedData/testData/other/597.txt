Date Tue Dec GMT Server NCSA Content type text html Last modified Tue Mar GMT Content length Image Transformations Image TransformationsTranslation Scaling and Rotation These transformations can applied image using the XFORM programming language and the XLISP STAT and METIP programming environment IMPORTANT NOTE this programming environment the lower lefthand corner image corresponds pixel coordinates and the upper righthand corner image corresponds pixel coordinates where the width and the height the image Translation translate image taking each pixels original coordinates and adding them translation amount Translation can occur each dimension Since image has only dimensions can translate the and dimensions translate image and compute the pixel value the destination image finding the pixel value the source image where and are defined follows Note These are mathematical formulas not LISP expressions The line code used XLISP STAT perform this transformation source image source xform source where and are the translation amounts the and dimensions respectively Also notice that and can negative values The following example translation moves the image units the right the axis and units down the axis xform source Scaling scale image taking each pixels original coordinates and multiplying them scaling factor Scaling can also occur each dimension scale image and compute the pixel value the destination image finding the pixel value the source image where and are defined follows Note These are mathematical formulas not LISP expressions The line code used XLISP STAT perform this transformation source image source xform source where and are the scaling factors the and dimensions respectively Note again that and can negative values The following illustrates scaling transformation that stretches the image along the axis factor and shrinks the image along the axis factor xform source Rotation rotate image some angle theta radians compute the pixel value the destination image finding the pixel value the source image where and are defined follows Note These are mathematical formulas not LISP expressions cos theta sin theta sin theta cos theta The line code used XLISP STAT perform this transformation source image source xform source costheta sintheta sintheta costheta Before entering this line code necessary define sintheta and costheta This can accomplished with the following lines code setq costheta cos theta setq sintheta sin theta instead radians you prefer use degrees the following lines code can replace the above lines setq costheta cos theta setq sintheta sin theta The following illustrates rotation transformation that rotates the image degrees from the axis clockwise setq costheta cos setq sintheta sin xform source costheta sintheta sintheta costheta Activities Multiple Transformations Function trans scale rot allows you perform multiple transformations one source image More specifically allows you perform translation scaling and rotation single image the specified order The function takes five parameters the first two parameters transX and transY specify the translation amounts the next two parameters scaleX and scaleY specify the scaling factors and the last parameter rotTheta specifies the rotation angle degrees The function template follows trans scale rot transX transY scaleX scaleY rotTheta The following line code illustrates the application this function image The image first translated units right the axis and units the axis then scaled factor the and direction shrinking the image its original size Finally the image rotated degrees clockwise from the axis trans scale rot order use this function you must first open three windows selecting Child from the Windows menu Then tile the windows selecting Tile from the Windows menu The function trans scale rot will now put the translated image window the translated and scaled image window and the translated scaled and rotated image window Try using different parameters the function and see how they change the resulting images Guessing Game Find partner and have one person the coder and the other person the guesser While the guesser looking away from the computer screen the coder enters either single transformation multiple transformations defined above After the transformed image computed the guesser must try determine what transformation were used create the resulting image You may wish switch roles the game progresses and find some way scoring how close the guesser gets the actual transformations the coder entered Applications Many electronic games require you visualize shape after has undergone given transformation For example the following might mental scenario someone playing Tetris Well move this the left units and rotate once will fit that spot The first operation performed was translation along the axis units and the second operation was rotation degrees And you thought you were just playing game Geometric transformations also have important real world applications For example architect may visually apply transformations some object say beam figure out its best position some design the beam isn quite long enough fill gap may need scaled increase its length course this can only done during the design process computer paper since are all aware that you can stretch real beam What other applications can you think for geometric transformations This tutorial was created Marla Baker marla washington edu 